(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("chart", [], factory);
	else if(typeof exports === 'object')
		exports["chart"] = factory();
	else
		root["chart"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdatechart"];
/******/ 	window["webpackHotUpdatechart"] = // eslint-disable-next-line no-unused-vars
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadUpdateChunk(chunkId) {
/******/ 		var script = document.createElement("script");
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		if (null) script.crossOrigin = null;
/******/ 		document.head.appendChild(script);
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadManifest(requestTimeout) {
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if (typeof XMLHttpRequest === "undefined") {
/******/ 				return reject(new Error("No browser support"));
/******/ 			}
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch (err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if (request.readyState !== 4) return;
/******/ 				if (request.status === 0) {
/******/ 					// timeout
/******/ 					reject(
/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
/******/ 					);
/******/ 				} else if (request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch (e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	var hotApplyOnUpdate = true;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentHash = "b922a471c49fd450434d";
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParents = [];
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = [];
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateRequire(moduleId) {
/******/ 		var me = installedModules[moduleId];
/******/ 		if (!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if (me.hot.active) {
/******/ 				if (installedModules[request]) {
/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					}
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if (me.children.indexOf(request) === -1) {
/******/ 					me.children.push(request);
/******/ 				}
/******/ 			} else {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" +
/******/ 						request +
/******/ 						") from disposed module " +
/******/ 						moduleId
/******/ 				);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for (var name in __webpack_require__) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
/******/ 				name !== "e" &&
/******/ 				name !== "t"
/******/ 			) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if (hotStatus === "prepare") {
/******/ 					if (!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		fn.t = function(value, mode) {
/******/ 			if (mode & 1) value = fn(value);
/******/ 			return __webpack_require__.t(value, mode & ~1);
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateModule(moduleId) {
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_selfInvalidated: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if (dep === undefined) hot._selfAccepted = true;
/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if (dep === undefined) hot._selfDeclined = true;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 			invalidate: function() {
/******/ 				this._selfInvalidated = true;
/******/ 				switch (hotStatus) {
/******/ 					case "idle":
/******/ 						hotUpdate = {};
/******/ 						hotUpdate[moduleId] = modules[moduleId];
/******/ 						hotSetStatus("ready");
/******/ 						break;
/******/ 					case "ready":
/******/ 						hotApplyInvalidatedModule(moduleId);
/******/ 						break;
/******/ 					case "prepare":
/******/ 					case "check":
/******/ 					case "dispose":
/******/ 					case "apply":
/******/ 						(hotQueuedInvalidatedModules =
/******/ 							hotQueuedInvalidatedModules || []).push(moduleId);
/******/ 						break;
/******/ 					default:
/******/ 						// ignore requests in error states
/******/ 						break;
/******/ 				}
/******/ 			},
/******/
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if (!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash, hotQueuedInvalidatedModules;
/******/
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = +id + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/
/******/ 	function hotCheck(apply) {
/******/ 		if (hotStatus !== "idle") {
/******/ 			throw new Error("check() is only allowed in idle status");
/******/ 		}
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if (!update) {
/******/ 				hotSetStatus(hotApplyInvalidatedModules() ? "ready" : "idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = "main";
/******/ 			// eslint-disable-next-line no-lone-blocks
/******/ 			{
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if (
/******/ 				hotStatus === "prepare" &&
/******/ 				hotChunksLoading === 0 &&
/******/ 				hotWaitingFiles === 0
/******/ 			) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for (var moduleId in moreModules) {
/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if (!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if (!deferred) return;
/******/ 		if (hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve()
/******/ 				.then(function() {
/******/ 					return hotApply(hotApplyOnUpdate);
/******/ 				})
/******/ 				.then(
/******/ 					function(result) {
/******/ 						deferred.resolve(result);
/******/ 					},
/******/ 					function(err) {
/******/ 						deferred.reject(err);
/******/ 					}
/******/ 				);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for (var id in hotUpdate) {
/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApply(options) {
/******/ 		if (hotStatus !== "ready")
/******/ 			throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/ 		return hotApplyInternal(options);
/******/ 	}
/******/
/******/ 	function hotApplyInternal(options) {
/******/ 		hotApplyInvalidatedModules();
/******/
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/
/******/ 			var queue = outdatedModules.map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while (queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if (
/******/ 					!module ||
/******/ 					(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 				)
/******/ 					continue;
/******/ 				if (module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if (module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for (var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if (!parent) continue;
/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if (!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/
/******/ 		function addAllToSet(a, b) {
/******/ 			for (var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if (a.indexOf(item) === -1) a.push(item);
/******/ 			}
/******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn(
/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
/******/ 			);
/******/ 		};
/******/
/******/ 		for (var id in hotUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				/** @type {TODO} */
/******/ 				var result;
/******/ 				if (hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				/** @type {Error|false} */
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if (result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch (result.type) {
/******/ 					case "self-declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of self decline: " +
/******/ 									result.moduleId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of declined dependency: " +
/******/ 									result.moduleId +
/******/ 									" in " +
/******/ 									result.parentId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 						if (!options.ignoreUnaccepted)
/******/ 							abortError = new Error(
/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if (options.onAccepted) options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if (options.onDisposed) options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if (abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if (doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for (moduleId in result.outdatedDependencies) {
/******/ 						if (
/******/ 							Object.prototype.hasOwnProperty.call(
/******/ 								result.outdatedDependencies,
/******/ 								moduleId
/******/ 							)
/******/ 						) {
/******/ 							if (!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(
/******/ 								outdatedDependencies[moduleId],
/******/ 								result.outdatedDependencies[moduleId]
/******/ 							);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if (doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for (i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if (
/******/ 				installedModules[moduleId] &&
/******/ 				installedModules[moduleId].hot._selfAccepted &&
/******/ 				// removed self-accepted modules should not be required
/******/ 				appliedUpdate[moduleId] !== warnUnexpectedRequire &&
/******/ 				// when called invalidate self-accepting is not possible
/******/ 				!installedModules[moduleId].hot._selfInvalidated
/******/ 			) {
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					parents: installedModules[moduleId].parents.slice(),
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while (queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if (!module) continue;
/******/
/******/ 			var data = {};
/******/
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/
/******/ 			// remove "parents" references from all children
/******/ 			for (j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if (!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if (idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if (idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "apply" phase
/******/ 		hotSetStatus("apply");
/******/
/******/ 		if (hotUpdateNewHash !== undefined) {
/******/ 			hotCurrentHash = hotUpdateNewHash;
/******/ 			hotUpdateNewHash = undefined;
/******/ 		}
/******/ 		hotUpdate = undefined;
/******/
/******/ 		// insert new code
/******/ 		for (moduleId in appliedUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if (cb) {
/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for (i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch (err) {
/******/ 							if (options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if (!options.ignoreErrored) {
/******/ 								if (!error) error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Load self accepted modules
/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = item.parents;
/******/ 			hotCurrentChildModule = moduleId;
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch (err) {
/******/ 				if (typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch (err2) {
/******/ 						if (options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if (!options.ignoreErrored) {
/******/ 							if (!error) error = err2;
/******/ 						}
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if (options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if (!options.ignoreErrored) {
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if (error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/
/******/ 		if (hotQueuedInvalidatedModules) {
/******/ 			return hotApplyInternal(options).then(function(list) {
/******/ 				outdatedModules.forEach(function(moduleId) {
/******/ 					if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 				});
/******/ 				return list;
/******/ 			});
/******/ 		}
/******/
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	function hotApplyInvalidatedModules() {
/******/ 		if (hotQueuedInvalidatedModules) {
/******/ 			if (!hotUpdate) hotUpdate = {};
/******/ 			hotQueuedInvalidatedModules.forEach(hotApplyInvalidatedModule);
/******/ 			hotQueuedInvalidatedModules = undefined;
/******/ 			return true;
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApplyInvalidatedModule(moduleId) {
/******/ 		if (!Object.prototype.hasOwnProperty.call(hotUpdate, moduleId))
/******/ 			hotUpdate[moduleId] = modules[moduleId];
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire("./src/index.js")(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/chart/bar.js":
/*!**************************!*\
  !*** ./src/chart/bar.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bar; });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils */ \"./src/chart/common/utils.js\");\n/* harmony import */ var _shape_barShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shape/barShape */ \"./src/chart/shape/barShape.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ \"./src/chart/base.js\");\n\r\n\r\n\r\nclass Bar extends _base__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n  constructor (data, config) {\r\n    super(data, config);\r\n    this.initData(config);\r\n    this.init();\r\n  };\r\n\r\n  drawCanvas (yAxis, yAxisChild, scaleY, index, parentIndex, start, yPartChild) {\r\n    let bandwidth = this.scaleX.bandwidth();\r\n    let total = Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"getToTalBar\"])(yAxis);\r\n    let data = yAxisChild.data;\r\n    let keyArr = yAxisChild.key;\r\n    let num = index !== 0 ? yAxis[index - 1].key.length : 0;\r\n    let height = this.yAxisHeight * (start + 1);\r\n    let topAxisHeight = this.topAxisHeight + (height - this.yAxisHeight) - this.xAxis.line.style.lineWidth / 2;\r\n    for (let i = 0; i < keyArr.length; i++) {\r\n      let keyId = `${parentIndex}-${num}`;\r\n      let allData = JSON.parse(JSON.stringify(data[i]));\r\n      let drawData = JSON.parse(JSON.stringify(data[i]));\r\n      if (yPartChild) {\r\n        drawData = yPartChild.allDataObj[yAxisChild.position][i];\r\n      }\r\n      Object(_shape_barShape__WEBPACK_IMPORTED_MODULE_1__[\"drawBarShape\"])(\r\n        this.middle, // 整个图形容器\r\n        this.barContainer, // 当前图形容器\r\n        this.labelContainer, // 标签容器\r\n        drawData, // 数据\r\n        scaleY, // Y轴刻度\r\n        bandwidth, // x轴间隔\r\n        height, // 轴高度\r\n        topAxisHeight, // 顶部间隔\r\n        num, // 第几个柱子\r\n        total, // 总共多少个柱子\r\n        keyArr[i], // 坐标关键字\r\n        this.colorList, // 颜色列表\r\n        this.xAxisList, // X轴数组\r\n        this.xAxis, // X轴信息\r\n        this.xAxisPart, // 顶部X轴的信息\r\n        this.size, // 柱子大小\r\n        this.tooltipList, // tooltip显示内容\r\n        this.labelsList,\r\n        keyId, // keyId匹配颜色\r\n        allData, // 所有数据\r\n        yPartChild,\r\n        this.format, // 格式\r\n        this.click,\r\n        this.id, // 画布id\r\n        this.shapeWidth,\r\n        this.yAxisHeight,\r\n        index,\r\n        start\r\n      );\r\n      num = num + 1;\r\n    }\r\n  };\r\n\r\n  render () {\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://chart/./src/chart/bar.js?");

/***/ }),

/***/ "./src/chart/barLine.js":
/*!******************************!*\
  !*** ./src/chart/barLine.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bar; });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils */ \"./src/chart/common/utils.js\");\n/* harmony import */ var _shape_barShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shape/barShape */ \"./src/chart/shape/barShape.js\");\n/* harmony import */ var _shape_lineShape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shape/lineShape */ \"./src/chart/shape/lineShape.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ \"./src/chart/base.js\");\n\n\n\n// import { drawLabel } from './shape/label';\n\nclass Bar extends _base__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.initData(config);\n    this.init();\n  };\n\n  drawCanvas (yAxis, yAxisChild, scaleY, index, parentIndex, start, yPartChild) {\n    let bandwidth = this.scaleX.bandwidth();\n    let total = Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"getToTalBar\"])(yAxis);\n    let data = yAxisChild.data;\n    let keyArr = yAxisChild.key;\n    let keyIdArr = yAxisChild.keyId;\n    let typeArr = yAxisChild.type;\n    let num = index !== 0 ? yAxis[index - 1].type.filter(item => item === 'bar').length : 0;\n    let height = this.yAxisHeight * start;\n    let topAxisHeight = this.topAxisHeight + height - this.xAxis.line.style.lineWidth / 2;\n    // this.drawClipPath(this.barContainer, height, topAxisHeight, index, start);\n    for (let i = 0; i < keyArr.length; i++) {\n      let keyId = keyIdArr[i];// `${parentIndex}-${num}`;\n      let drawData = JSON.parse(JSON.stringify(data[i]));\n      let allData = JSON.parse(JSON.stringify(data[i]));\n      if (yPartChild) {\n        drawData = yPartChild.allDataObj[yAxisChild.position][i];\n      }\n      let chartType = typeArr[i];\n      if (chartType === 'bar') {\n        Object(_shape_barShape__WEBPACK_IMPORTED_MODULE_1__[\"drawBarShape\"])(\n          this.middle, // 整个图形容器\n          this.barContainer, // 当前图形容器\n          this.labelContainer, // 标签容器\n          drawData, // 数据\n          scaleY, // Y轴刻度\n          bandwidth, // x轴间隔\n          height, // Y轴高度\n          topAxisHeight, // 顶部间隔\n          num, // 第几个柱子\n          total, // 总共多少个柱子\n          keyArr[i], // 坐标关键字\n          this.colorList, // 颜色列表\n          this.xAxisList, // X轴数组\n          this.xAxis, // X轴信息\n          this.xAxisPart, // 顶部X轴信息\n          this.size, // 柱子大小\n          this.tooltipList, // tooltip显示内容\n          this.labelsList, // 标签\n          keyId, // keyId匹配颜色\n          allData, // 所有数据\n          yPartChild,\n          this.format,\n          this.click,\n          this.id,\n          this.shapeWidth,\n          this.yAxisHeight,\n          index,\n          start\n        );\n      } else {\n        Object(_shape_lineShape__WEBPACK_IMPORTED_MODULE_2__[\"drawLineShape\"])(\n          this.middle,\n          this.lineContainer,\n          this.labelContainer,\n          drawData,\n          scaleY,\n          bandwidth,\n          topAxisHeight,\n          height,\n          keyArr[i],\n          this.colorList,\n          this.xAxisList,\n          this.xAxis,\n          this.xAxisPart, // 顶部X轴信息\n          this.lineStyle,\n          this.lineSize, // 线的粗细\n          this.tooltipList, // tooltip显示内容\n          this.labelsList, // 标签\n          keyId, // 根据keyId来匹配颜色\n          // this.partKey,\n          allData, // 所有数据\n          yPartChild,\n          this.click,\n          this.id,\n          this.shapeWidth,\n          this.yAxisHeight,\n          index,\n          start\n        );\n      }\n      num = num + 1;\n    }\n  };\n\n  render () {\n  }\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/barLine.js?");

/***/ }),

/***/ "./src/chart/barRotated.js":
/*!*********************************!*\
  !*** ./src/chart/barRotated.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bar; });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils */ \"./src/chart/common/utils.js\");\n/* harmony import */ var _shape_rotatedShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shape/rotatedShape */ \"./src/chart/shape/rotatedShape.js\");\n/* harmony import */ var _rotatedBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rotatedBase */ \"./src/chart/rotatedBase.js\");\n\n\n\nclass Bar extends _rotatedBase__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.isRotated = true; // 如果是条状图则为true\n    this.initData(config);\n    this.init();\n  };\n\n  drawCanvas (yAxis, yAxisChild, scaleY, index, parentIndex, start, yPartChild) {\n    let bandwidth = this.scaleX.bandwidth();\n    let total = Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"getToTalBar\"])(yAxis);\n    let data = yAxisChild.data;\n    let keyArr = yAxisChild.key;\n    let num = index !== 0 ? yAxis[index - 1].key.length : 0;\n    let height = this.yAxisHeight * start;\n    let topAxisHeight = this.bottomAxisHeight + height + this.xAxis.line.style.lineWidth / 2;\n    for (let i = 0; i < keyArr.length; i++) {\n      let keyId = `${parentIndex}-${num}`;\n      let allData = JSON.parse(JSON.stringify(data[i]));\n      let drawData = JSON.parse(JSON.stringify(data[i]));\n      if (yPartChild) {\n        drawData = yPartChild.allDataObj[yAxisChild.position][i];\n      }\n      Object(_shape_rotatedShape__WEBPACK_IMPORTED_MODULE_1__[\"drawBarShape\"])(\n        this.middle, // 整个图形容器\n        this.barContainer, // 当前图形容器\n        this.labelContainer, // 标签容器\n        drawData, // 数据\n        scaleY, // Y轴刻度\n        bandwidth, // x轴间隔\n        height, // Y轴高度\n        topAxisHeight, // 顶部间隔\n        num, // 第几个柱子\n        total, // 总共多少个柱子\n        keyArr[i], // 坐标关键字\n        this.colorList, // 颜色列表\n        this.xAxisList, // X轴数组\n        this.xAxis, // X轴信息\n        this.xAxisPart, // 顶部X轴信息\n        this.size, // 柱子大小\n        this.tooltipList, // tooltip显示内容\n        this.labelsList, // 标签\n        keyId, // keyId匹配颜色\n        allData, // 所有数据\n        yPartChild,\n        this.format,\n        this.click,\n        this.id,\n        this.shapeWidth,\n        this.yAxisHeight,\n        index,\n        start\n      );\n      num = num + 1;\n    }\n  };\n\n  render () {\n  }\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/barRotated.js?");

/***/ }),

/***/ "./src/chart/base.js":
/*!***************************!*\
  !*** ./src/chart/base.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Base; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./src/chart/common.js\");\n/* harmony import */ var _common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/yAxisDataUtils */ \"./src/chart/common/yAxisDataUtils.js\");\n/* harmony import */ var _common_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/scale */ \"./src/chart/common/scale.js\");\n/* harmony import */ var _common_axisUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/axisUtil */ \"./src/chart/common/axisUtil.js\");\n/* harmony import */ var _common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/bottomAxisUtils */ \"./src/chart/common/bottomAxisUtils.js\");\n/* harmony import */ var _common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/topAxisUtils */ \"./src/chart/common/topAxisUtils.js\");\n/* harmony import */ var _common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/partAxisUtils */ \"./src/chart/common/partAxisUtils.js\");\n/* harmony import */ var _common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/yAxisUtils */ \"./src/chart/common/yAxisUtils.js\");\n/* harmony import */ var _common_layoutUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common/layoutUtils */ \"./src/chart/common/layoutUtils.js\");\n\n\n\n\n\n\n\n\n\nclass Base extends _common_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  initShapeWidth () {\n    // 计算中间画图区域的宽度\n    this.shapeWidth = this.width - (this.leftMaxWidth + this.rightMaxWidth);\n    let len = this.xAxisList.length;\n    let minWidth = this.isMoblie ? 240 : 120; // 在标准跟适应高度模式下，单位最小宽度\n    switch (this.fitModel) {\n      case 'standard':\n      case 'fitHeight':\n        // 但单位宽度小于300时重新计算画图区域的宽度\n        if (this.shapeWidth / len < minWidth) {\n          this.shapeWidth = minWidth * len;\n        }\n        break;\n    }\n  }\n\n  initHeightConfig () {\n    // canvasHeight为画布高度，因为canvasWidth总是跟width相等所以不定义，高度计算区分合并坐标轴跟不合并坐标轴两种情况\n    let canvasNum = this.yAxis.length; // 一共有多少个画布\n    this.canvasNum = canvasNum;\n    if (this.isCombined) {\n      this.canvasHeight = this.height;\n      // 每个画布画图区域等于：画布高度- (底部坐标轴高度 + 顶部坐标轴高度) / 画布个数\n      this.shapeHeight = (this.canvasHeight - (this.bottomAxisHeight + this.topAxisHeight)) / canvasNum;\n    } else {\n      this.canvasHeight = Math.floor(this.height / canvasNum);\n      this.shapeHeight = this.canvasHeight - (this.bottomAxisHeight + this.topAxisHeight);\n    }\n    // Y轴的高度 = 单个画布的高度 / 单个画布轴的个数\n    this.yAxisHeight = this.shapeHeight / this.yAxisNum;\n\n    let minHeight = this.isMobile ? 300 : 240; // 单个画布轴的最小高度\n    switch (this.fitModel) {\n      case 'standard':\n      case 'fitWidth':\n        // 在标准跟适应宽度的模式下，单个画布的轴高度小于300时，重新计算各种高度\n        if (this.yAxisHeight < minHeight) {\n          this.yAxisHeight = minHeight;\n          this.shapeHeight = minHeight * this.yAxisNum;\n          if (this.isCombined) {\n            this.canvasHeight = (this.shapeHeight * canvasNum) + (this.bottomAxisHeight + this.topAxisHeight);\n          } else {\n            this.canvasHeight = this.shapeHeight + (this.bottomAxisHeight + this.topAxisHeight);\n          }\n        }\n        break;\n    }\n  }\n\n  // 初始化单个画布容器\n  initCanvasContainer (index) {\n    // 图表容器\n    this.container = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_8__[\"createContainer\"])(this.id, this.canvasHeight, index, this.colorList, this.click);\n    // 左侧容器\n    this.leftAxis = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_8__[\"createLeftAxis\"])(this.container, this.leftMaxWidth, this.canvasHeight, index);\n    // 中间画图部分\n    this.middle = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_8__[\"createMiddle\"])(this.container, this.shapeWidth, this.canvasHeight, index);\n    this.gridContainer = this.middle.append('g').attr('class', 'grid-container');\n    this.barContainer = this.middle.append('g').attr('class', 'bar-container');\n    this.lineContainer = this.middle.append('g').attr('class', 'line-container');\n    this.labelContainer = this.middle.append('g').attr('class', 'label-container');\n    // 右侧坐标轴容器\n    this.rightAxis = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_8__[\"createRightAxis\"])(this.container, this.rightMaxWidth, this.canvasHeight, index);\n  }\n\n  // 创建底部X轴\n  createBottomAxis () {\n    this.scaleX = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"scaleBand\"])(this.xAxisList, this.shapeWidth);\n    let height = this.shapeHeight;\n    if (this.isCombined) {\n      // 合并坐标轴的高度 = 单个画布的高度 * 画布个数\n      height = height * this.canvasNum;\n    }\n    height = height + this.topAxisHeight;\n    let axis = Object(_common_axisUtil__WEBPACK_IMPORTED_MODULE_3__[\"initAxis\"])(this.scaleX, 'bottom');\n    let axisInstance = Object(_common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__[\"createBottomAxis\"])(this.middle, axis, height);\n    Object(_common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__[\"setBottomAxisStyle\"])(axisInstance, this.xAxis, this.scaleX.bandwidth(), this.shapeWidth, this.bottomAxisHeight);\n  };\n\n  // 创建顶部X轴\n  createTopAxis () {\n    if (!this.xPartList.length) return;\n    let topTitle = Object(_common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__[\"getTopTitle\"])(this.xAxis, this.xAxisPart);\n    Object(_common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__[\"createTopAxis\"])(this.middle, this.canvasHeight, this.shapeWidth, this.scaleX.bandwidth(), this.xPartList, this.xAxisPart, topTitle, this.isMobile);\n  };\n\n  // 创建Y轴跟画图\n  createYAxisCanvas (yAxisChild, index) {\n    if (this.yPartList.length) {\n      // 如果有多Y轴\n      this.createPartAxisCanvas(this.yAxisPart[0], yAxisChild, index);\n      return;\n    }\n    // 初始化单个画布的Y轴信息\n    this.createAxisAndDraw(yAxisChild, index, 0, null);\n  };\n\n  // 创建合并坐标轴画布\n  createCombined (yAxisChild, index) {\n    if (!this.yPartList.length) {\n      if (index !== 0) {\n        Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawBottomLine\"])(this.middle, this.shapeWidth, this.yAxisHeight, this.topAxisHeight, index, this.xAxis);\n      }\n      this.createAxisAndDraw(yAxisChild, index, index, null);\n    } else {\n      this.createPartAxisCanvas(this.yAxisPart[0], yAxisChild, index);\n    }\n  }\n\n  createPartAxisCanvas (yAxisPartChild, yAxisChild, index) {\n    let leftPart = this.leftAxis.append('g').attr('class', 'left-part');\n    let start = 0;\n    let isLast = false;\n    let partList = this.yPartList[index];\n    for (let i = 0, partLen = partList.length; i < partLen; i++) {\n      if (i > 0) start = start + partList[i - 1].len;\n      if (i === partLen - 1) isLast = true;\n      this.initLeftPart(leftPart, partList[i], 0, start, yAxisPartChild, isLast, yAxisChild, index);\n    }\n  };\n\n  initLeftPart (leftPart, yPartChild, index, start, yAxisPartChild, isLast, yAxisChild, parentIndex) {\n    let width = index * 40 + 20;\n    let yAxisHeight = this.yAxisHeight;\n    let shapeHeight = this.shapeHeight;\n    if (this.isCombined) {\n      yAxisHeight = yAxisHeight * this.canvasNum;\n      shapeHeight = this.canvasHeight;\n    }\n    Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__[\"createPartTxt\"])(leftPart, yPartChild, yAxisPartChild, yAxisHeight, this.topAxisHeight, width, start);\n    Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__[\"createPartLine\"])(leftPart, yPartChild, yAxisPartChild, yAxisHeight, this.topAxisHeight, width, this.shapeWidth, start, isLast);\n    if (yPartChild.children.length) {\n      Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__[\"initVerLine\"])(leftPart, width, shapeHeight, this.topAxisHeight, yAxisPartChild);\n      let list = yPartChild.children;\n      let childStart = start;\n      let childIsLast = false;\n      for (let i = 0, len = list.length; i < len; i++) {\n        if (i > 0) childStart = childStart + list[i - 1].len;\n        if (i === len - 1) childIsLast = true;\n        this.initLeftPart(leftPart, list[i], index + 1, childStart, yAxisPartChild, childIsLast, yAxisChild, parentIndex);\n      }\n    } else {\n      if (this.isCombined) {\n        start = start * this.canvasNum + parentIndex;\n      }\n      if (start !== 0) Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawBottomLine\"])(this.middle, this.shapeWidth, this.yAxisHeight, this.topAxisHeight, start, this.xAxis);\n      this.createAxisAndDraw(yAxisChild, parentIndex, start, yPartChild);\n    }\n  };\n\n  createAxisAndDraw (yAxisChild, index, start, yPartChild) {\n    for (let i = 0, yLen = yAxisChild.length; i < yLen; i++) {\n      if (!yAxisChild[i].data.length) continue;\n      let position = yAxisChild[i].position;\n      let left = 0;\n      if (i !== 0) left = yAxisChild[i - 1].key.length;\n      let scopeObj = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"getScopeObj\"])(this.scopeList, yAxisChild[i]);\n      let maxValue = 0;\n      let minValue = 0;\n      let counts = 0;\n      let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__[\"getMaxValue\"])(\n        yAxisChild[i],\n        this.xAxis.key,\n        this.colorList,\n        index,\n        left,\n        [],\n        this.xAxisPart,\n        this.chartType,\n        this.xPartList\n      );\n      maxValue = max * 1.1;\n      minValue = min * 1.1;\n      if (scopeObj.select === 3 && scopeObj.range) {\n        maxValue = scopeObj.range[1];\n        minValue = scopeObj.range[0];\n        counts = scopeObj.counts;\n      }\n      if ((scopeObj.select === 0 || scopeObj.select === 1) && scopeObj.align) {\n        let child = yAxisChild[i === 1 ? 0 : 1];\n        if (child) {\n          let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__[\"getMaxValue\"])(\n            child,\n            this.xAxis.key,\n            this.colorList,\n            index,\n            left,\n            [],\n            this.xAxisPart,\n            this.chartType,\n            this.xPartList\n          );\n          max = max * 1.1;\n          min = min * 1.1;\n          if ((minValue < 0) || (min < 0)) {\n            let max = Math.max(Math.abs(minValue), Math.abs(maxValue));\n            maxValue = Math.max(max, maxValue);\n            minValue = -maxValue;\n          }\n        }\n        if (scopeObj.zoom !== 1) {\n          let zoom = scopeObj.zoom || 1;\n          maxValue = maxValue / zoom;\n          minValue = minValue / zoom;\n          // minValue = minValue - (maxValue) / zoom + maxValue;\n          // if (maxValue <= 0) {\n          //   minValue = minValue / zoom;\n          // }\n        }\n      }\n      if (scopeObj.select === 2) {\n        let child = yAxisChild[i === 1 ? 0 : 1];\n        if (child) {\n          let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__[\"getMaxValue\"])(\n            child,\n            this.xAxis.key,\n            this.colorList,\n            index,\n            left,\n            [],\n            this.xAxisPart,\n            this.chartType,\n            this.xPartList\n          );\n          max = max * 1.1;\n          min = min * 1.1;\n          maxValue = Math.max(maxValue, max);\n          minValue = Math.min(minValue, min);\n        };\n      }\n      let { scaleY, scaleY1 } = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"scaleLinear\"])(minValue, maxValue, this.yAxisHeight, scopeObj.select);\n      let axis = Object(_common_axisUtil__WEBPACK_IMPORTED_MODULE_3__[\"initAxis\"])(scaleY, position, this.yAxisHeight, counts);\n      Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"setScopeList\"])(scaleY1, scopeObj);\n      let width = this[`${position}MaxWidth`]; // 坐标轴容器的宽度\n      let translateX = position === 'left' ? width - 1 : 0;\n      let topAxisHeight = this.topAxisHeight + this.yAxisHeight * start;\n      Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"createYGrid\"])(this.gridContainer, axis, position, topAxisHeight, this.shapeWidth, yAxisChild[i]);\n      let axisInstance = Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"createYAxis\"])(this[`${position}Axis`], axis, topAxisHeight, translateX);\n      let labelWidth = this[`${position}LabelWidth`];\n      Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"setYAxisStyle\"])(\n        axisInstance,\n        yAxisChild[i],\n        width,\n        this[`${position}LabelWidth`],\n        this[`${position}TitleWidth`],\n        this.shapeWidth,\n        this.format,\n        labelWidth,\n        start,\n        false,\n        false,\n        this.yAxisHeight\n      );\n      this.drawCanvas(yAxisChild, yAxisChild[i], scaleY, i, index, start, yPartChild);\n    }\n  };\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/base.js?");

/***/ }),

/***/ "./src/chart/common.js":
/*!*****************************!*\
  !*** ./src/chart/common.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Common; });\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _common_xAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/xAxisDataUtils */ \"./src/chart/common/xAxisDataUtils.js\");\n/* harmony import */ var _common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/yAxisDataUtils */ \"./src/chart/common/yAxisDataUtils.js\");\n/* harmony import */ var _shape_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shape/tooltip */ \"./src/chart/shape/tooltip.js\");\n\n\n\n\nclass Common {\n  initData (config) {\n    this.id = config.id; // 容器ID\n    this.xAxis = config.xAxis[0] || {}; // 底部X轴参数\n    this.xAxisPart = config.xAxisPart || []; // 顶部X轴参数\n    this.yAxis = config.yAxis || []; // Y轴参数\n    this.yAxisPart = config.yAxisPart || []; // 左侧多Y轴参数\n    this.isCombined = config.isCombined; // 是否合并坐标轴\n    this.colorList = config.colorList || []; // 颜色列表\n    this.scopeList = config.scopeList || []; // 刻度列表\n    this.labelsList = config.labelsList || []; // 标签列表\n    this.tooltipList = config.tooltipList || []; // tooltip列表\n    this.scopeList = config.scopeList || []; // scopeList\n    this.size = (config.size || 50) / 100; // 柱图大小\n    this.lineSize = (config.lineSize || 50) / 100;\n    this.lineStyle = config.lineStyle; // 线图中，线点的样式\n    this.hasUnit = config.hasUnit; // Y轴是否使用单位\n    this.fitModel = config.fitModel; // 视图模式\n    this.dpr = config.dpr || 1;\n    let { width, height } = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"setContainer\"])(this.id, this.isRotated, this.dpr); // 设置容器宽高，并返回宽高值\n    this.width = width; // 容器的宽度\n    this.height = height; // 容器的高度\n    this.format = config.hasUnit ? d3.format('.3s') : d3.format('.3r'); // 显示格式\n    this.zoom = config.zoom ? config.zoom : 1; // 缩放倍数\n    this.chartContainer = d3.select(`#${this.id}`);\n    this.isMobile = config.isMobile;\n    this.click = config.click || function () {};\n  };\n\n  init () {\n    // 初始化X轴信息\n    this.initXAxisConfig();\n    // 初始化宽度信息\n    this.initWidthConfig();\n    // 初始化高度信息\n    this.initHeightConfig();\n    // 初始化tooltip\n    this.tooltip = Object(_shape_tooltip__WEBPACK_IMPORTED_MODULE_3__[\"initTooltip\"])();\n    let dom = document.body.querySelector('.dashboard-container');\n    if (dom) {\n      dom.addEventListener('scroll', _shape_tooltip__WEBPACK_IMPORTED_MODULE_3__[\"hideTooltip\"]);\n      // setTimeout(() => {\n      //   dom.removeEventListener('scroll', hideTooltip);\n      // }, 1500);\n    }\n    if (this.isCombined) {\n      // 创建合并坐标轴画布\n      this.initCombined();\n    } else {\n      // 创建单个画布\n      this.initCanvas();\n    };\n  };\n\n  initXAxisConfig () {\n    if (!this.yAxis.length) return;\n    // 获取data数据\n    let data = [];\n    for (let i = 0; i < this.yAxis.length; i++) {\n      for (let j = 0; j < this.yAxis[i].length; j++) {\n        let arr = this.yAxis[i][j].data;\n        if (arr.length) {\n          data = arr;\n        };\n      }\n    }\n    // 获取X轴的数据\n    let { xAxisList, maxXAxisLen, xPartList } = Object(_common_xAxisDataUtils__WEBPACK_IMPORTED_MODULE_1__[\"setXAxisPartList\"])(this.xAxisPart, this.xAxis.key, data[0]);\n    // 底部X轴列表\n    this.xAxisList = xAxisList;\n    // 顶部X轴列表\n    this.xPartList = xPartList;\n    // 顶部最后一个key\n    // this.partKey = partKey;\n    // X轴坐标标签的高度\n    let width = this.isRotated ? this.height : this.width;\n    let labelHeight = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"setBottomLabelWidth\"])(this.xAxis, maxXAxisLen, this.isRotated, this.xAxisList, this.fitModel, width);\n    // X轴坐标标题的高度\n    let titleHeight = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"setTitleHeight\"])(this.xAxis);\n    // 底部坐标轴高度\n    this.bottomAxisHeight = labelHeight + titleHeight + 20; // 预留滚动条的空间\n    // 顶部坐标轴高度\n    this.topAxisHeight = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTopAxisHeight\"])(this.xAxisPart, this.isMobile);\n    if (this.isRotated) {\n      this.bottomAxisHeight = this.topAxisHeight + this.bottomAxisHeight;\n    }\n  };\n\n  initWidthConfig () {\n    /*\n      leftMaxValue: 左边坐标轴最大值 yPartList: 左边坐标轴列表 rightMaxValue: 右边坐标轴最大值 yAxisNum: 左侧y轴个数\n    */\n    let {\n      leftMaxValue,\n      leftMinValue,\n      rightMaxValue,\n      rightMinValue,\n      yPartList,\n      yAxisNum\n    } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_2__[\"setYAxisPartList\"])(\n      this.yAxisPart,\n      this.yAxis,\n      this.xAxis.key,\n      this.colorList,\n      this.xAxisList,\n      this.xAxisPart,\n      this.chartType,\n      this.xPartList\n    );\n    let { title, label } = this.yAxis[0][0];\n    // 左轴的最大值、最小值、宽度\n    this.leftMaxValue = leftMaxValue;\n    this.leftMinValue = leftMinValue;\n    if (this.hasUnit) {\n      leftMaxValue = this.format(leftMaxValue);\n    } else {\n      if (leftMaxValue < 1) {\n        let arr = String(leftMaxValue).split('.')[1].split('');\n        let index = 0;\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i] !== '0') {\n            index = i;\n            break;\n          }\n        }\n        index = index + 5;\n        leftMaxValue = leftMaxValue.toFixed(index);\n      } else {\n        leftMaxValue = Math.floor(leftMaxValue).toFixed(1);\n      }\n    }\n    this.leftLabelWidth = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtWidth\"])(String(leftMaxValue), label.style.fontSize || 12);\n    this.leftTitleWidth = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtHeight\"])(String(title.value), title.style.fontSize || 12);\n    this.leftMaxWidth = this.leftLabelWidth; // 预留10像素的间隔\n    if (title.show) {\n      // 有标题时加上标题的宽度\n      this.leftMaxWidth = this.leftMaxWidth + this.leftTitleWidth;\n    }\n    // 计算左侧顶部的坐标轴的区域\n    let leftPartWidth = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTopAxisHeight\"])(this.yAxisPart);\n    this.leftMaxWidth = this.leftMaxWidth + leftPartWidth;\n\n    // 右轴的最大值、最小值、宽度\n    this.rightMaxWidth = 0;\n    this.rightMaxValue = rightMaxValue;\n    this.rightMinValue = rightMinValue;\n    if (rightMaxValue !== rightMinValue) {\n      if (this.hasUnit) {\n        rightMaxValue = this.format(rightMaxValue);\n      } else {\n        if (rightMaxValue < 1) {\n          let arr = String(rightMaxValue).split('.')[1].split('');\n          let index = 0;\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i] !== '0') {\n              index = i;\n              break;\n            }\n          }\n          index = index + 5;\n          rightMaxValue = rightMaxValue.toFixed(index);\n        } else {\n          rightMaxValue = Math.floor(rightMaxValue).toFixed(1);\n        }\n      }\n      this.rightLabelWidth = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtWidth\"])(String(rightMaxValue), label.style.fontSize || 12);\n      this.rightTitleWidth = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtHeight\"])(String(title.value), title.style.fontSize || 12);\n      this.rightMaxWidth = this.rightLabelWidth + 30; // 预留20像素的间隔\n      if (title.show) {\n        this.rightMaxWidth = this.rightMaxWidth + this.rightTitleWidth;// 跟title预留20像素间隔\n      }\n    } else {\n      if (this.hasUnit) rightMaxValue = this.format(rightMaxValue);\n    }\n\n    // 左侧顶部的坐标轴数据\n    this.yPartList = yPartList;\n    // 单个画布轴的数量\n    this.yAxisNum = yAxisNum;\n    this.initShapeWidth();\n  }\n\n  initCanvas () {\n    for (let i = 0, len = this.yAxis.length; i < len; i++) {\n      // 初始化单个画布的容器\n      this.initCanvasContainer(i);\n      // 创建底部X轴\n      this.createBottomAxis();\n      // 创建顶部X轴\n      this.createTopAxis(len);\n      // 创建Y轴并画图\n      this.createYAxisCanvas(this.yAxis[i], i, len);\n      // this.container.call(this.initZoom(i));\n    }\n  };\n\n  initCombined () {\n    this.initCanvasContainer(0);\n    this.createBottomAxis();\n    this.createTopAxis();\n    // this.initZoom(0);\n    // this.container.call(this.initZoom());\n    for (let i = 0, len = this.yAxis.length; i < len; i++) {\n      this.createCombined(this.yAxis[i], i, len);\n    }\n  };\n\n  initZoom (index) {\n    // console.log(this.scopeList);\n    // debugger;\n    if (this.scopeList[0].select !== 1) return;\n    let timer = null;\n    let perValue = 0;\n    let isAdd = false;\n    let zoomHandler = d3.zoom().scaleExtent([0.1, 64])\n      .on('zoom', () => {\n        if (timer) {\n          clearTimeout(timer);\n          timer = null;\n        }\n        let currentY = d3.event.transform.y;\n        if (perValue > currentY) {\n          isAdd = true;\n        } else {\n          isAdd = false;\n        }\n        perValue = currentY;\n        timer = setTimeout(() => {\n          if (isAdd) {\n            this.zoom = this.zoom / 2;\n          } else {\n            this.zoom = this.zoom * 2;\n          }\n          Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"removeContainer\"])(this.id);\n          this.init();\n        }, 100);\n      });\n    return zoomHandler;\n  }\n\n  // 返回颜色列表\n  getColorList () {\n    return this.colorList;\n  };\n\n  // 返回刻度值列表\n  getDomain () {\n    return this.scopeList;\n  };\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/common.js?");

/***/ }),

/***/ "./src/chart/common/axisUtil.js":
/*!**************************************!*\
  !*** ./src/chart/common/axisUtil.js ***!
  \**************************************/
/*! exports provided: initAxis, setLineStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initAxis\", function() { return initAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLineStyle\", function() { return setLineStyle; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/chart/common/utils.js\");\n\nconst initAxis = (scale, position, height, tickNum, isRotated) => {\n  let scaleObj = {\n    top: d3.axisTop(scale),\n    bottom: d3.axisBottom(scale),\n    left: d3.axisLeft(scale),\n    right: d3.axisRight(scale)\n  };\n  if (isRotated) {\n    scaleObj = {\n      left: d3.axisTop(scale),\n      right: d3.axisBottom(scale),\n      bottom: d3.axisLeft(scale),\n      top: d3.axisRight(scale)\n    };\n  }\n  let axis = scaleObj[position]\n    .tickPadding(6);\n    // .tickSizeInner(0)\n    // .tickSizeOuter(0);\n  if (position === 'left' || position === 'right') {\n    if (!tickNum) return axis;\n    // if (height / tickNum > 10) {\n    let arr = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTickValues\"])(scale.domain(), tickNum);\n    axis.tickValues(arr);\n    // };\n  }\n  return axis;\n};\n\n// const setTick = (axis, domain, height) => {\n//   let arr = [];\n//   let count = Math.ceil(height / 50);\n//   let total = domain[1] - domain[0];\n//   if (!count) {\n//     arr = JSON.parse(JSON.stringify(domain));\n//     for (let i = 0; i < count; i++) {\n//       arr.push();\n//     }\n//     axis.tickValues(arr);\n//     return axis;\n//   }\n//   let gap = total / count;\n//   for (let i = 0; i <= count; i++) {\n//     arr.push(i * gap);\n//   }\n//   axis.tickValues(arr);\n//   return axis;\n// };\n\nconst setLineStyle = (axisInstance, line) => {\n  let { style, show } = line;\n  show ? style.opacity = 1 : style.opacity = 0;\n  axisInstance.select('path')\n    .attr('stroke-dasharray', style.lineDash.join(',')) // 虚实线\n    .attr('stroke', style.fontColor) // 坐标轴线颜色\n    .attr('stroke-width', style.lineWidth) // 坐标轴线宽度\n    .attr('opacity', style.opacity); // 坐标轴线透明度\n  axisInstance.selectAll('line')\n    .attr('stroke', style.fontColor);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/axisUtil.js?");

/***/ }),

/***/ "./src/chart/common/bottomAxisUtils.js":
/*!*********************************************!*\
  !*** ./src/chart/common/bottomAxisUtils.js ***!
  \*********************************************/
/*! exports provided: createBottomAxis, setBottomAxisStyle, setRotatedTitleStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBottomAxis\", function() { return createBottomAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setBottomAxisStyle\", function() { return setBottomAxisStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setRotatedTitleStyle\", function() { return setRotatedTitleStyle; });\n/* harmony import */ var _axisUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axisUtil */ \"./src/chart/common/axisUtil.js\");\n/* harmony import */ var _containerUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/chart/common/utils.js\");\n\n\n\nconst createBottomAxis = (middle, axis, height, isRotated) => {\n  let axisInstance = middle.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', () => {\n      return isRotated ? `translate(${height},${0})` : `translate(${0},${height})`;\n    })\n    .call(axis);\n  return axisInstance;\n};\n\nconst setBottomAxisStyle = (axisInstance, xAxis, bandwidth, shapeWidth, bottomAxisHeight, isRotated, rightAxis, rightMaxWidth, topTitle) => {\n  let { line, label, title } = xAxis;\n  // 设置线样式\n  Object(_axisUtil__WEBPACK_IMPORTED_MODULE_0__[\"setLineStyle\"])(axisInstance, line);\n  // 设置标签的样式\n  setLabelStyle(axisInstance, label, bandwidth, isRotated);\n  // 设置tooltip\n  setTooltip(axisInstance);\n  // 设置标题\n  if (isRotated) {\n    setRotatedTitleStyle(rightAxis, title, rightMaxWidth, bottomAxisHeight, topTitle);\n  } else {\n    setTitleStyle(axisInstance, title, shapeWidth, bottomAxisHeight);\n  }\n};\n\nconst setTooltip = (axisInstance) => {\n  let allTick = axisInstance.selectAll('.tick');\n  allTick.append('title')\n    .text(d => String(d).split('|~|')[0]);\n};\n\nconst setLabelStyle = (axisInstance, label, bandwidth, isRotated) => {\n  let { style } = label;\n  let allLabel = axisInstance.selectAll('text');\n  // 计算单元宽度能显示的文字个数\n  allLabel.attr('font-size', style.fontSize) // 标签文本大小\n    .attr('fill', style.fontColor) // 标签文本颜色\n    .attr('opacity', style.opacity) // 标签文本透明度\n    .attr('transform', `rotate(${style.rotate})`)\n    .text(function (d) {\n      let txt = String(d).split('|~|')[0];\n      if (isRotated) {\n        if (style.rotate !== 0) {\n          return Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"setTxt\"])(bandwidth, txt, style.fontSize);\n        }\n      } else {\n        if (style.rotate !== 90) {\n          return Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"setTxt\"])(bandwidth, txt, style.fontSize);\n        }\n      }\n      return Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"setHTxt\"])(bandwidth, txt, style.fontSize);\n    });\n  if (isRotated) {\n    allLabel.attr('y', `${style.rotate === 90 ? 8 : 0}`)\n      .attr('text-anchor', () => {\n        const anchorObj = {\n          45: 'end',\n          '-45': 'end',\n          90: 'middle',\n          0: 'end'\n        };\n        return anchorObj[style.rotate];\n      });\n  } else {\n    allLabel.attr('x', () => {\n      return `${style.rotate === 90 ? 5 : 0}`;\n    })\n      .attr('y', `${style.rotate === 90 ? -5 : 5}`)\n      .attr('text-anchor', () => {\n        const anchorObj = {\n          45: 'start',\n          '-45': 'end',\n          90: 'start',\n          0: 'middle'\n        };\n        return anchorObj[style.rotate];\n      });\n  }\n};\n\nconst setTitleStyle = (axisInstance, title, shapeWidth, bottomAxisHeight) => {\n  let { style, show, value } = title;\n  axisInstance.append('g')\n    .append('text')\n    .attr('text-anchor', 'end')\n    .attr('transform', () => {\n      let transform = `translate(${shapeWidth - 8},${bottomAxisHeight - 20})`;\n      return transform;\n    }) // 预留8px的边距\n    .attr('fill', style.fontColor)\n    .attr('font-size', style.fontSize)\n    .attr('opacity', show ? 1 : 0)\n    .text(value);\n};\n\nconst setRotatedTitleStyle = (axisInstance, title, rightMaxWidth, bottomAxisHeight, topTitle) => {\n  let { style, show } = title;\n  let titleLen = Object(_containerUtils__WEBPACK_IMPORTED_MODULE_1__[\"getTxtWidth\"])(topTitle, style.fontSize);\n  let width = bottomAxisHeight - 30;\n  if (width < titleLen) width = titleLen + 10;\n  axisInstance.append('g')\n    .append('text')\n    .attr('text-anchor', 'end')\n    .attr('transform', () => {\n      let transform = `translate(${width},${rightMaxWidth - 30})`;\n      return transform;\n    }) // 预留8px的边距\n    .attr('fill', style.fontColor)\n    .attr('font-size', style.fontSize)\n    .attr('opacity', show ? 1 : 0)\n    .text(topTitle);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/bottomAxisUtils.js?");

/***/ }),

/***/ "./src/chart/common/containerUtils.js":
/*!********************************************!*\
  !*** ./src/chart/common/containerUtils.js ***!
  \********************************************/
/*! exports provided: setContainer, removeContainer, setBottomLabelWidth, getTxtHeight, getTxtWidth, getTopAxisHeight, setTitleHeight, createPattern, drawClipPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setContainer\", function() { return setContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeContainer\", function() { return removeContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setBottomLabelWidth\", function() { return setBottomLabelWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTxtHeight\", function() { return getTxtHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTxtWidth\", function() { return getTxtWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTopAxisHeight\", function() { return getTopAxisHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTitleHeight\", function() { return setTitleHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPattern\", function() { return createPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawClipPath\", function() { return drawClipPath; });\n/* 判断是否自适应宽高，设置画图空间 */\nconst setContainer = (id, isRotated, dpr) => {\n  let dom = document.querySelector(`#${id}`);\n  dom.innerHTML = '';\n  let domWidth = dom.clientWidth;\n  let domHeight = dom.clientHeight;\n  let width = domWidth / dpr;\n  let height = domHeight / dpr;\n  if (isRotated) {\n    height = height - 20;\n    dom.style.display = 'flex';\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst removeContainer = (id) => {\n  let dom = document.querySelector(`#${id}`);\n  dom.innerHTML = '';\n};\n\n// 获取文本的高度\nconst getTxtHeight = (text, fontSize) => {\n  let textDom = document.createElement('span');\n  textDom.innerText = text;\n  textDom.style.fontSize = fontSize + 'px';\n  textDom.style.position = 'fixed';\n  document.body.appendChild(textDom);\n  let height = textDom.clientHeight;\n  document.body.removeChild(textDom);\n  return height;\n};\n\n// 获取文本的宽度\nconst getTxtWidth = (text, fontSize) => {\n  let textDom = document.createElement('text');\n  textDom.innerText = text;\n  textDom.style.fontSize = fontSize + 'px';\n  textDom.style.position = 'fixed';\n  document.body.appendChild(textDom);\n  let width = textDom.clientWidth;\n  document.body.removeChild(textDom);\n  return width;\n};\n\nconst isDot = (isRotated, fitModel) => {\n  if (isRotated) {\n    if (fitModel === 'full' || fitModel === 'fitHeight') {\n      return true;\n    }\n  } else {\n    if (fitModel === 'full' || fitModel === 'fitWidth') {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isFit = (isRotated, rotate, fitModel) => {\n  if (isRotated) {\n    if (fitModel === 'standard' || fitModel === 'fitWidth') {\n      if (rotate === 45 || rotate === -45) {\n        return true;\n      }\n    }\n  } else {\n    if (fitModel === 'standard' || fitModel === 'fitHeight') {\n      if (rotate === 45 || rotate === -45) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n// 设置底部标签的高度\nconst setBottomLabelWidth = (xAxis, maxXAxisLen, isRotated, xAxisList, fitModel, shapeWidth) => {\n  let bandWidth = shapeWidth / xAxisList.length;\n  let style = xAxis.label.style;\n  let rotate = style.rotate;\n  if (isDot(isRotated, fitModel)) {\n    if (rotate === 90) {\n      if (bandWidth < 14.5) {\n        return 12;\n      }\n    } else {\n      if (bandWidth < 20) {\n        return 12;\n      }\n    }\n  }\n  let height = getTxtHeight(maxXAxisLen, style.fontSize);\n  let width = getTxtWidth(maxXAxisLen, style.fontSize);\n  let temp = 0;\n  if (isRotated) temp = 90;\n  if (rotate === temp) return height;\n  if (isFit(isRotated, rotate, fitModel)) {\n    return 75;\n  }\n  return width + 6;\n};\n\n// 设置顶部X轴的高度\nconst getTopAxisHeight = (xAxisPart, isMobile) => {\n  if (!xAxisPart || xAxisPart.length === 0) return isMobile ? 20 : 15;\n  else return isMobile ? (xAxisPart.length) * 55 + 20 : (xAxisPart.length) * 35 + 15;\n};\n\n// 设置标签高度\nconst setTitleHeight = (xAxis) => {\n  let height = 0;\n  let { show, style, value } = xAxis.title;\n  if (!show) return height;\n  height = height + getTxtHeight(value, style.fontSize);\n  return height;\n};\n\nconst createPattern = (middle, fillColor, type) => {\n  let keyName = fillColor;\n  if (fillColor.includes('(') || fillColor.includes(')')) {\n    keyName = fillColor.split('(').join('').split(')').join('');\n  }\n  let pattern = middle.append('defs').append('pattern')\n    .attr('patternUnits', 'userSpaceOnUse')\n    .attr('id', `fill-${type}-${keyName}`)\n    .attr('width', '6')\n    .attr('height', '6');\n  let g = pattern\n    .append('g')\n    .attr('fill-rule', 'evenodd')\n    .attr('stroke-width', 1)\n    .append('g')\n    // .attr('class', `${CLASS.pattern}`)\n    .attr('fill', fillColor || 'rgb(225, 127, 8)');\n\n  switch (type) {\n    case 'zuo':\n      // 左斜纹\n      g.append('polygon').attr('points', '6 5 6 6 5 6');\n      g.append('polygon').attr('points', '5 0 6 0 0 6 0 5');\n      break;\n    case 'you':\n      // 右斜纹\n      g.append('polygon').attr('points', '6 0 6 1 5 0');\n      g.append('polygon').attr('points', '0 0 6 6 5 6 0 1');\n      break;\n    case 'heng':\n      // 横纹\n      g.append('polygon').attr('points', '0 0 6 0 6 1 0 1');\n      break;\n    case 'shu':\n      // 竖纹\n      g.append('polygon').attr('points', '0 0 1 0 1 6 0 6');\n      break;\n    case 'ge':\n      // 格子\n      g.append('polygon').attr('points', '0 0 6 0 6 1 0 1');\n      g.append('polygon').attr('points', '0 0 1 0 1 6 0 6');\n      break;\n    case 'zha':\n      // 栅栏\n      g.append('polygon').attr('points', '6 5 6 6 5 6');\n      g.append('polygon').attr('points', '5 0 6 0 0 6 0 5');\n      g.append('polygon').attr('points', '6 0 6 1 5 0');\n      g.append('polygon').attr('points', '0 0 6 6 5 6 0 1');\n      break;\n    case 'fill':\n      // 实填充\n      g.append('polygon')\n        .attr('points', '0 0 6 0 6 6 0 6')\n        .attr('fill', fillColor);\n      break;\n    default:\n      g.append('polygon');\n  }\n  return `url(#${pattern.node().id})`;\n};\n\nconst drawClipPath = (container, shapeWidth, height, index, start, chartId) => {\n  let id = `${chartId}-${index}-${start}`;\n  container.append('clipPath')\n    .attr('id', id)\n    .append('rect')\n    .attr('width', shapeWidth)\n    .attr('height', height);\n  container.attr('clip-path', `url(#${id})`);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/containerUtils.js?");

/***/ }),

/***/ "./src/chart/common/dataUtils.js":
/*!***************************************!*\
  !*** ./src/chart/common/dataUtils.js ***!
  \***************************************/
/*! exports provided: getUniqueList, setMaxLen, getMaxValue, drawStackData, getMaxMinValue, drawStackLineData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUniqueList\", function() { return getUniqueList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMaxLen\", function() { return setMaxLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMaxValue\", function() { return getMaxValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawStackData\", function() { return drawStackData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMaxMinValue\", function() { return getMaxMinValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawStackLineData\", function() { return drawStackLineData; });\n/* harmony import */ var _utils_defaultConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/defaultConfig */ \"./src/utils/defaultConfig.js\");\n\n// 根据key去重数据\nconst getUniqueList = (key, data) => {\n  let list = [];\n  for (let i = 0, len = data.length; i < len; i++) {\n    list.push(data[i][key]);\n  }\n  return [...new Set(list)];\n};\n\n// 输入一组字符，返回最长元素的长度\nconst setMaxLen = (list) => {\n  let num = 0;\n  let text = '';\n  for (let i = 0, len = list.length; i < len; i++) {\n    let len = String(list[i].name).length;\n    if (num < len) {\n      num = len;\n      text = String(list[i].name);\n    }\n  };\n  return text;\n};\n\n// 输入data跟keyList, 返回最大值;\nconst getMaxValue = (data, keyList) => {\n  let mergeList = [];\n  for (let i = 0, len = keyList.length; i < len; i++) {\n    for (let j = 0, len = data.length; j < len; j++) {\n      if (!isNaN(data[j][keyList[i]])) {\n        mergeList.push(data[j][keyList[i]]);\n      }\n    }\n  }\n  return Math.max(...mergeList);\n};\n\nconst getMaxMinValue = (data, key) => {\n  let arr = [];\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (!isNaN(data[i][key])) {\n      arr.push(data[i][key]);\n    }\n  }\n  return {\n    max: Math.max(...arr),\n    min: Math.min(...arr)\n  };\n};\n\nconst getKeyDataList = (data, key) => {\n  let list = [];\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (data[i][key]) {\n      list.push(data[i][key]);\n    } else {\n      if (data[i][key] === 0) {\n        list.push(data[i][key]);\n      }\n    }\n  }\n  return list;\n};\n\nconst setXAxisIndex = (data, name, key) => {\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (data[i][key] !== name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst setData = (data, feature, key, xAxisList, xAxis) => {\n  let arr = [];\n  let xKey = xAxis.key;\n  for (let i = 0, len = xAxisList.length; i < len; i++) {\n    let value = xAxisList[i].name;\n    let oneObj = {};\n    let keyData = [];\n    let index = setXAxisIndex(data, value, xKey);\n    if (index > 0) {\n      let list = data.splice(0, index);\n      for (let j = 0; j < list.length; j++) {\n        oneObj[list[j][feature]] = list[j][key];\n        keyData.push(list[j]);\n      }\n      oneObj.data = keyData;\n      arr.push(oneObj);\n    }\n  }\n  let oneObj = {};\n  let keyData = [];\n  for (let j = 0; j < data.length; j++) {\n    oneObj[data[j][feature]] = data[j][key];\n    keyData.push(data[j]);\n  }\n  oneObj.data = keyData;\n  arr.push(oneObj);\n  return arr;\n};\n\nconst setSeries = (list, feature) => {\n  for (let i = 0; i < list.length; i++) {\n    let key = list[i].key;\n    for (let j = 0; j < list[i].length; j++) {\n      list[i][j].data = setSeriesData(list[i][j].data.data, feature, key);\n      if (isNaN(list[i][j][0])) {\n        list[i][j][0] = 0;\n      };\n      if (isNaN(list[i][j][1])) {\n        list[i][j][1] = list[i][j][0];\n      };\n    }\n  }\n};\n\nconst setSeriesData = (list, feature, key) => {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i][feature] === key) {\n      return list[i];\n    }\n  }\n  return {};\n};\n\nconst setCateGory = (index) => {\n  let category = _utils_defaultConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].colorSet.category;\n  let len = category.length;\n  if (index < len) {\n    return category[index];\n  };\n  let num = index % category.length;\n  return category[num];\n};\n\nconst setColorStack = (list) => {\n  let colorStack = {};\n  for (let i = 0; i < list.length; i++) {\n    colorStack[list[i]] = {\n      color: setCateGory(i),\n      fillType: 'fill'\n    };\n  }\n  return colorStack;\n};\n\nconst combinedColor = (list, tempList) => {\n  if (list instanceof Array) {\n    return tempList;\n  } else {\n    return Object.assign(tempList, list);\n  }\n};\n\nconst drawStackData = (data, colorObj, xAxisList, xAxis, allData) => {\n  let keyArr = [...new Set(getKeyDataList(allData, colorObj.feature))];\n  let drawData = setData(data, colorObj.feature, colorObj.key, xAxisList, xAxis);\n  const stack = d3.stack().keys(keyArr).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n  const series = stack(drawData);\n  setSeries(series, colorObj.feature);\n  let list = colorObj.list;\n  let tempList = setColorStack(keyArr);\n  let colorStack = combinedColor(list, tempList); // Object.keys(list).length ? list : ;\n  // let colorStack = Object.keys(list).length ? list : setColorStack(keyArr);\n  return {\n    list: series,\n    colorStack: colorStack\n  };\n};\n\nconst setLineData = (data, feature, key, keyArr, xAxis, xAxisList, xAxisPart) => {\n  let arr = [];\n  let xKey = xAxis.key;\n  let topKey = null;\n  let topList = [];\n  if (xAxisPart.length) {\n    topKey = xAxisPart[xAxisPart.length - 1].key;\n    topList = getTopList(data, xAxisPart);\n  }\n  for (let i = 0, len = keyArr.length; i < len; i++) {\n    let oneObj = {};\n    let list = data.filter(item => item[feature] === keyArr[i]);\n    list = setListData(list, xKey, xAxisList);\n    cutList(list, xKey);\n    oneObj.key = feature;\n    oneObj.data = setPositionItem(list, xAxisList, topList, xKey, topKey);\n    arr.push(oneObj);\n  }\n  return arr;\n};\n\nconst setPositionItem = (list, xAxisList, topList, xKey, topKey) => {\n  if (!topKey) return list;\n  let index = 0;\n  for (let i = 0; i < xAxisList.length; i++) {\n    if (list[i].isPart) {\n      index = index + 1;\n    }\n    xAxisList[i][topKey] = topList[index];\n  }\n  for (let i = 0; i < list.length; i++) {\n    if (list[i][topKey] && list[i][topKey] !== xAxisList[i][topKey]) {\n      let obj = JSON.parse(JSON.stringify(list[i]));\n      let listIndex = 0;\n      for (let j = 0; j < xAxisList.length; j++) {\n        if (obj[topKey] === xAxisList[j][topKey] && obj[xKey] === xAxisList[j].name) {\n          listIndex = j;\n        }\n      };\n      list[i] = JSON.parse(JSON.stringify(list[listIndex]));\n      list[listIndex] = obj;\n    }\n  }\n  return list;\n};\n\nconst getTopList = (data, xAxisPart) => {\n  let arr = [];\n  let key = xAxisPart[xAxisPart.length - 1].key;\n  for (let i = 0; i < data.length; i++) {\n    arr.push(data[i][key]);\n  }\n  arr = [...new Set(arr)];\n  return arr;\n};\n\nconst cutList = (list, key) => {\n  let uniqueList = [];\n  for (let i = 0, len = list.length; i < len; i++) {\n    if (uniqueList.includes(list[i][key])) {\n      list[i].isPart = true;\n      uniqueList = [];\n    }\n    uniqueList.push(list[i][key]);\n  }\n};\n\nconst setListData = (list, xKey, xAxisList) => {\n  for (let i = 0, len = xAxisList.length; i < len; i++) {\n    if (!list[i] || list[i][xKey] !== xAxisList[i].name) {\n      let obj = {};\n      obj[xKey] = xAxisList[i].name;\n      list.splice(i, 0, obj);\n      setListData(list, xKey, xAxisList);\n      break;\n    };\n  }\n  return list;\n};\n\nconst drawStackLineData = (data, colorObj, xAxis, xAxisList, xAxisPart, allData) => {\n  let keyArr = [...new Set(getKeyDataList(allData, colorObj.feature))];\n  let drawData = setLineData(data, colorObj.feature, colorObj.key, keyArr, xAxis, xAxisList, xAxisPart);\n  let list = colorObj.list;\n  let tempList = setColorStack(keyArr);\n  let colorStack = combinedColor(list, tempList);\n  return {\n    list: drawData,\n    colorStack: colorStack\n  };\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/dataUtils.js?");

/***/ }),

/***/ "./src/chart/common/layoutUtils.js":
/*!*****************************************!*\
  !*** ./src/chart/common/layoutUtils.js ***!
  \*****************************************/
/*! exports provided: createContainer, createLeftAxis, createMiddle, createRightAxis, createRotatedContainer, createRotatedLeftAxis, createRotatedMiddle, createRotatedRightAxis, filterColor, createClipPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createContainer\", function() { return createContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createLeftAxis\", function() { return createLeftAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMiddle\", function() { return createMiddle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRightAxis\", function() { return createRightAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedContainer\", function() { return createRotatedContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedLeftAxis\", function() { return createRotatedLeftAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedMiddle\", function() { return createRotatedMiddle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedRightAxis\", function() { return createRotatedRightAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterColor\", function() { return filterColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createClipPath\", function() { return createClipPath; });\nconst createContainer = (id, canvasHeight, index, colorList, click) => {\r\n  return d3.select(`#${id}`).append('div').attr('class', `chart-container-${index}`)\r\n    .style('display', 'flex')\r\n    .style('position', 'relative')\r\n    .style('box-sizing', 'border-box')\r\n    .style('width', '100%')\r\n    .style('height', `${canvasHeight}px`)\r\n    .on('click', () => {\r\n      let main = d3.select(`#${id}`);\r\n      for (let i = 0; i < colorList.length; i++) {\r\n        let keyId = colorList[i].keyId;\r\n        let opacity = colorList[i].opacity / 100;\r\n        main.selectAll(`.shape-${keyId}`).selectAll('.bar').attr('opacity', opacity);\r\n        main.selectAll(`.shape-${keyId}`).selectAll('.line-path').attr('opacity', opacity);\r\n        main.selectAll(`.shape-${keyId}`).selectAll('.line-dot').attr('opacity', opacity);\r\n      }\r\n      click(null);\r\n      main.selectAll('.label').attr('opacity', 1);\r\n    }, true);\r\n};\r\n\r\nconst createLeftAxis = (container, leftMaxWidth, canvasHeight, index) => {\r\n  return container.append('div').attr('class', `left-axis-${index}`)\r\n    .style('display', 'flex')\r\n    .style('flex-direction', 'row-reverse')\r\n    .append('svg')\r\n    .attr('width', leftMaxWidth)\r\n    .attr('height', canvasHeight);\r\n};\r\n\r\nconst createMiddle = (container, shapeWidth, canvasHeight, index) => {\r\n  return container.append('div').attr('class', `mc-middle middle-${index}`)\r\n    .style('flex', 1)\r\n    .style('width', 0)\r\n    .style('overflow-x', 'auto')\r\n    .style('overflow-y', 'hidden')\r\n    .append('svg')\r\n    .style('display', 'block')\r\n    .attr('width', shapeWidth)\r\n    .attr('height', canvasHeight);\r\n};\r\n\r\nconst createRightAxis = (container, rightMaxWidth, canvasHeight, index) => {\r\n  return container.append('div').attr('class', `right-axis-${index}`)\r\n    .style('display', 'flex')\r\n    .append('svg')\r\n    .style('display', 'block')\r\n    .attr('width', rightMaxWidth)\r\n    .attr('height', canvasHeight);\r\n};\r\n\r\nconst createRotatedContainer = (id, canvasHeight, index, colorList, click) => {\r\n  return d3.select(`#${id}`).append('div').attr('class', `chart-container-${index}`)\r\n    .style('position', 'relative')\r\n    .style('box-sizing', 'border-box')\r\n    .style('width', `${canvasHeight}px`)\r\n    .style('height', '100%')\r\n    .on('click', () => {\r\n      let main = d3.select(`#${id}`);\r\n      for (let i = 0; i < colorList.length; i++) {\r\n        let keyId = colorList[i].keyId;\r\n        let opacity = colorList[i].opacity / 100;\r\n        main.selectAll(`.shape-${keyId}`).selectAll('.bar').attr('opacity', opacity);\r\n      }\r\n      click(null);\r\n      main.selectAll('.label').attr('opacity', 1);\r\n    }, true);\r\n};\r\n\r\nconst createRotatedLeftAxis = (container, leftMaxWidth, canvasHeight, index) => {\r\n  return container.append('div').attr('class', `right-axis-${index}`)\r\n    .style('display', 'flex')\r\n    .append('svg')\r\n    .style('display', 'block')\r\n    .attr('width', canvasHeight)\r\n    .attr('height', leftMaxWidth);\r\n};\r\n\r\nconst createRotatedMiddle = (container, height, leftMaxWidth, rightMaxWidth, canvasHeight, shapeWidth, index) => {\r\n  return container.append('div').attr('class', `mc-middle middle-${index}`)\r\n    .style('flex', 1)\r\n    .style('height', `${height - (leftMaxWidth + rightMaxWidth)}px`)\r\n    .style('overflow-y', 'auto')\r\n    .style('overflow-x', 'hidden')\r\n    .append('svg')\r\n    .style('display', 'block')\r\n    .attr('width', canvasHeight)\r\n    .attr('height', shapeWidth);\r\n};\r\n\r\nconst createRotatedRightAxis = (container, rightMaxWidth, canvasHeight, index) => {\r\n  return container.append('div').attr('class', `left-axis-${index}`)\r\n    .style('display', 'flex')\r\n    .style('flex-direction', 'row-reverse')\r\n    .append('svg')\r\n    .style('display', 'block')\r\n    .attr('width', canvasHeight)\r\n    .attr('height', rightMaxWidth);\r\n};\r\n\r\nconst filterColor = (colorList, index) => {\r\n  let arr = [];\r\n  for (let i = 0; i < colorList.length; i++) {\r\n    let num = Number(colorList[i].keyId.split('-')[0]);\r\n    if (num === index) {\r\n      arr.push(colorList[i]);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nconst createClipPath = (middle, keyId, width, height, topAxisHeight) => {\r\n  middle.append('defs').append('clipPath').attr('id', `clip-${keyId}`)\r\n    .attr('transform', `translate(0,${topAxisHeight})`)\r\n    .append('rect').attr('width', width).attr('height', height);\r\n  return `url(#clip-${keyId})`;\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://chart/./src/chart/common/layoutUtils.js?");

/***/ }),

/***/ "./src/chart/common/partAxisUtils.js":
/*!*******************************************!*\
  !*** ./src/chart/common/partAxisUtils.js ***!
  \*******************************************/
/*! exports provided: createPartTxt, createPartLine, initVerLine, drawBottomLine, createRotatedPartTxt, createRotatedPartLine, initRotatedVerLine, drawRotatedBottomLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPartTxt\", function() { return createPartTxt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPartLine\", function() { return createPartLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initVerLine\", function() { return initVerLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawBottomLine\", function() { return drawBottomLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedPartTxt\", function() { return createRotatedPartTxt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedPartLine\", function() { return createRotatedPartLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initRotatedVerLine\", function() { return initRotatedVerLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawRotatedBottomLine\", function() { return drawRotatedBottomLine; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/chart/common/utils.js\");\n\nconst createPartTxt = (leftPart, yPartChild, yAxisPartChild, yAxisHeight, topAxisHeight, width, start) => {\n  let oneHeight = yPartChild.len * yAxisHeight;\n  let height = oneHeight / 2 + yAxisHeight * start + topAxisHeight;\n  let { style } = yAxisPartChild.title;\n  leftPart.append('text')\n    .attr('transform', `translate(${width}, ${height})`)\n    .attr('fill', style.fontColor)\n    .attr('text-anchor', 'middle')\n    .attr('font-size', style.fontSize)\n    .style('writing-mode', 'tb')\n    .text(() => {\n      return Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTxt\"])(oneHeight, yPartChild.name, style.fontSize, true);\n    })\n    .append('title')\n    .text(yPartChild.name);\n};\n\nconst createPartLine = (leftPart, yPartChild, yAxisPartChild, yAxisHeight, topAxisHeight, width, shapeWidth, start, isLast) => {\n  let lineHeight = yPartChild.len * yAxisHeight + yAxisHeight * start + topAxisHeight;\n  let { style } = yAxisPartChild.grid.line;\n  leftPart.append('line')\n    .attr('x1', width - 20)\n    .attr('y1', lineHeight)\n    .attr('x2', shapeWidth)\n    .attr('y2', lineHeight)\n    .attr('opacity', isLast ? 0 : 1)\n    .attr('stroke', style.fontColor)\n    .attr('stroke-width', style.lineWidth || 1);\n};\n\nconst initVerLine = (leftPart, width, shapeHeight, topAxisHeight, yAxisPartChild) => {\n  let { style } = yAxisPartChild.grid.line;\n  leftPart.append('line')\n    .attr('x1', width + 20)\n    .attr('y1', topAxisHeight)\n    .attr('x2', width + 20)\n    .attr('y2', shapeHeight + topAxisHeight)\n    .attr('stroke', style.fontColor)\n    .attr('stroke-width', style.lineWidth);\n};\n\nconst drawBottomLine = (middle, shapeWidth, yAxisHeight, topAxisHeight, start, xAxis) => {\n  let height = topAxisHeight + yAxisHeight * start;\n  let opacity = xAxis.line.show ? 1 : 0;\n  let lineColor = xAxis.line.style.fontColor;\n  let lineWidth = xAxis.line.style.lineWidth;\n  middle.append('line')\n    .attr('x1', 0)\n    .attr('x2', shapeWidth)\n    .attr('y1', height)\n    .attr('y2', height)\n    .attr('stroke', lineColor)\n    .attr('opacity', opacity)\n    .attr('stroke-width', lineWidth);\n};\n\nconst createRotatedPartTxt = (leftPart, yPartChild, yAxisPartChild, yAxisHeight, bottomAxisHeight, width, start) => {\n  let height = yPartChild.len * yAxisHeight / 2 + yAxisHeight * start + bottomAxisHeight;\n  let style = yAxisPartChild.title.style;\n  let oneHeight = yPartChild.len * yAxisHeight;\n  leftPart.append('text')\n    .attr('transform', `translate(${height}, ${width})`)\n    .attr('fill', style.fontColor)\n    .attr('text-anchor', 'middle')\n    .attr('font-size', style.fontSize)\n    .text(Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTxt\"])(oneHeight, yPartChild.name, style.fontSize, true));\n};\n\nconst createRotatedPartLine = (leftPart, yPartChild, yAxisHeight, bottomAxisHeight, width, shapeWidth, start, isLast, yAxisPartChild) => {\n  let lineHeight = yPartChild.len * yAxisHeight + yAxisHeight * start + bottomAxisHeight;\n  let lineStyle = yAxisPartChild.grid.line.style;\n  leftPart.append('line')\n    .attr('y1', width - 20)\n    .attr('x1', lineHeight)\n    .attr('y2', shapeWidth)\n    .attr('x2', lineHeight)\n    .attr('opacity', isLast ? 0 : 1)\n    .attr('stroke', lineStyle.fontColor)\n    .attr('stroke-width', lineStyle.lineWidth);\n};\n\nconst initRotatedVerLine = (leftPart, width, shapeHeight, bottomAxisHeight, yAxisPartChild) => {\n  let lineStyle = yAxisPartChild.grid.line.style;\n  leftPart.append('line')\n    .attr('y1', width + 20)\n    .attr('x1', bottomAxisHeight)\n    .attr('y2', width + 20)\n    .attr('x2', shapeHeight + bottomAxisHeight)\n    .attr('stroke', lineStyle.fontColor)\n    .attr('stroke-width', lineStyle.lineWidth);\n};\n\nconst drawRotatedBottomLine = (middle, shapeWidth, yAxisHeight, bottomAxisHeight, start, yAxisPartChild) => {\n  let height = bottomAxisHeight + yAxisHeight * start;\n  let lineStyle = yAxisPartChild.line.style;\n  middle.append('line')\n    .attr('y1', 0)\n    .attr('y2', shapeWidth)\n    .attr('x1', height)\n    .attr('x2', height)\n    .attr('stroke', lineStyle.fontColor)\n    .attr('stroke-width', lineStyle.lineWidth);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/partAxisUtils.js?");

/***/ }),

/***/ "./src/chart/common/scale.js":
/*!***********************************!*\
  !*** ./src/chart/common/scale.js ***!
  \***********************************/
/*! exports provided: scaleLinear, scaleBand, setScopeList, getScopeObj, isResetScope, rotateScaleLinear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleLinear\", function() { return scaleLinear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleBand\", function() { return scaleBand; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setScopeList\", function() { return setScopeList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getScopeObj\", function() { return getScopeObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isResetScope\", function() { return isResetScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateScaleLinear\", function() { return rotateScaleLinear; });\n// 返回线性刻度值\nconst scaleLinear = (minValue, maxValue, height, select) => {\n  if (minValue > 0) minValue = 0;\n  if (maxValue < 0) maxValue = 0;\n  let scale = d3.scaleLinear()\n    .domain([minValue, maxValue])\n    .range([height, 0]);\n  if (select !== 3) {\n    scale.nice();\n  }\n  let scale1 = scale = d3.scaleLinear()\n    .domain([minValue, maxValue])\n    .range([height, 0])\n    .nice();\n  return {\n    scaleY: scale,\n    scaleY1: scale1\n  };\n};\n\n// 返回分类刻度值\nconst scaleBand = (data, barWidth) => {\n  let scale = d3.scaleBand();\n  scale.domain(data.map((d, index) => {\n    return `${d.name}|~|${index}`;\n  }));\n  scale.range([0, barWidth]);\n  return scale;\n};\n\n// 返回条形图线性值\nconst rotateScaleLinear = (minValue, maxValue, height, select) => {\n  if (minValue > 0) minValue = 0;\n  if (maxValue < 0) maxValue = 0;\n  let scale = d3.scaleLinear()\n    .domain([minValue, maxValue])\n    .range([0, height]);\n  if (select !== 3) {\n    scale.nice();\n  }\n  let scale1 = scale = d3.scaleLinear()\n    .domain([minValue, maxValue])\n    .range([0, height])\n    .nice();\n  return {\n    scaleY: scale,\n    scaleY1: scale1\n  };\n};\n\nconst setScopeList = (scaleY, scopeObj) => {\n  let domain = scaleY.domain();\n  let ticks = scaleY.ticks();\n  if (!isResetScope(scopeObj, domain[1], domain[0])) {\n    scopeObj.max = domain[1];\n    scopeObj.min = domain[0];\n    scopeObj.num = ticks.length;\n    scopeObj.range = [domain[0], domain[1]];\n    scopeObj.counts = scopeObj.counts || ticks.length;\n    scopeObj.select = scopeObj.select ? scopeObj.select : 0;\n    // eslint-disable-next-line no-prototype-builtins\n    scopeObj.align = scopeObj.align === undefined ? true : scopeObj.align;\n    scopeObj.zoom = scopeObj.zoom ? scopeObj.zoom : 1;\n  };\n};\n\nconst getScopeObj = (scopeList, yAxisChild) => {\n  for (let i = 0, len = scopeList.length; i < len; i++) {\n    let isKey = JSON.stringify(scopeList[i].key) === JSON.stringify(yAxisChild.key);\n    let isKeyId = JSON.stringify(scopeList[i].keyId) === JSON.stringify(yAxisChild.keyId);\n    if (isKey && isKeyId) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (scopeList[i].hasOwnProperty('select')) {\n        return scopeList[i];\n      } else {\n        // eslint-disable-next-line no-prototype-builtins\n        let scopeObj = scopeList.length ? scopeList.filter(item => item.hasOwnProperty('select'))[0] : null;\n        scopeList[i].select = scopeObj ? scopeObj.select : 0;\n        scopeList[i].align = scopeObj ? scopeObj.align : true;\n        scopeList[i].zoom = scopeObj ? scopeObj.zoom : 1;\n        return scopeList[i];\n      }\n    }\n  }\n  return {\n    key: yAxisChild.key,\n    keyId: yAxisChild.keyId\n  };\n};\n\nconst isResetScope = (scopeObj, max, min, yAxisHeight) => {\n  if (!scopeObj.range) return false;\n  let { scaleY } = scaleLinear(min, max, yAxisHeight);\n  let maxValue = scaleY.domain()[1];\n  let minValue = scaleY.domain()[0];\n  if (maxValue === scopeObj.max && scopeObj.min === minValue) {\n    // if (scopeObj.range[1] === scopeObj.max && scopeObj.range[0] === scopeObj.min) {\n    //   return false;\n    // } else {\n    return true;\n    // }\n  };\n  return false;\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/scale.js?");

/***/ }),

/***/ "./src/chart/common/shapeUtils.js":
/*!****************************************!*\
  !*** ./src/chart/common/shapeUtils.js ***!
  \****************************************/
/*! exports provided: barColor, stackBarColor, setLinearList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"barColor\", function() { return barColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stackBarColor\", function() { return stackBarColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLinearList\", function() { return setLinearList; });\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _common_dataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/dataUtils */ \"./src/chart/common/dataUtils.js\");\n\n\nconst setLinearList = (colorObj, data, format) => {\n  let list = colorObj.list;\n  if (!(list instanceof Array)) {\n    list = [];\n  }\n  let { max, min } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_1__[\"getMaxMinValue\"])(data, colorObj.feature);\n  if (!list.length) {\n    list.push({\n      color: '#7Ac9f5',\n      value: min,\n      check: false,\n      originValue: min,\n      formatValue: format(min)\n    }, {\n      color: '#2A5783',\n      value: max,\n      check: false,\n      originValue: max,\n      formatValue: format(max)\n    });\n  } else {\n    list[0].originValue = min;\n    list[1].originValue = max;\n    if (!list[0].check) {\n      list[0].value = min;\n      list[0].formatValue = format(min);\n    } else {\n      list[0].formatValue = format(list[0].value);\n    }\n    if (!list[1].check) {\n      list[1].value = max;\n      list[1].formatValue = format(max);\n    } else {\n      list[1].formatValue = format(list[1].value);\n    }\n  }\n  return list;\n};\n\nconst barColor = (middle, colorObj, d, isStroke) => {\n  let color = colorObj.color;\n  let fillType = colorObj.fillType;\n  if (colorObj.type === 'ordinal') {\n    if (!d[colorObj.feature]) return color;\n    let obj = colorObj.list[d[colorObj.feature]];\n    color = obj.color || '#4284f5';\n    fillType = obj.fillType || 'fill';\n    if (isStroke) return color;\n    if (fillType !== 'fill') return Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"createPattern\"])(middle, color, fillType, colorObj.keyId);\n    return color;\n  } else if (colorObj.type === 'none') {\n    if (isStroke) return color;\n    if (fillType === 'fill') return color;\n    if (fillType !== 'fill') return Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"createPattern\"])(middle, color, fillType, colorObj.keyId);\n  } else if (colorObj.type === 'linear') {\n    let list = colorObj.list;\n    let linear = d3.scaleLinear().domain([list[0].value, list[1].value]).range([0, 1]).clamp(true);\n    let value = d[colorObj.feature];\n    if (value === null) value = NaN;\n    let compute = d3.interpolate(list[0].color, list[1].color);\n    return compute(linear(value));\n  }\n};\n\nconst stackBarColor = (middle, fillType, color) => {\n  if (fillType !== 'fill') return Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"createPattern\"])(middle, color, fillType);\n  return color;\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/shapeUtils.js?");

/***/ }),

/***/ "./src/chart/common/topAxisUtils.js":
/*!******************************************!*\
  !*** ./src/chart/common/topAxisUtils.js ***!
  \******************************************/
/*! exports provided: createTopAxis, getTopTitle, createRotatedTopAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTopAxis\", function() { return createTopAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTopTitle\", function() { return getTopTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedTopAxis\", function() { return createRotatedTopAxis; });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/utils */ \"./src/chart/common/utils.js\");\n\nconst getTopTitle = (xAxis, xAxisPart) => {\n  let titleArr = [];\n  for (let i = 0; i < xAxisPart.length; i++) {\n    titleArr.push(xAxisPart[i].title.value);\n  }\n  titleArr.push(xAxis.title.value);\n  return titleArr.join('/');\n};\n\nconst createTopAxis = (middle, shapeHeight, shapeWidth, bandwidth, xPartList, xAxisPart, topTitle, isMobile) => {\n  let topAxis = middle.append('g').attr('class', 'top-axis');\n  let topGap = isMobile ? 50 : 20;\n  createTopAxisTitle(topAxis, xAxisPart[xPartList[0].index], shapeWidth, topGap, topTitle, isMobile);\n  let start = 0;\n  let isFirst = true;\n  for (let i = 0, len = xPartList.length; i < len; i++) {\n    if (i > 0) start = start + xPartList[i - 1].len;\n    // if (i === len - 1) isLast = true;\n    initTopAxis(topAxis, xPartList[i], 0, topGap, xAxisPart, bandwidth, start, shapeHeight, isFirst, isMobile);\n    isFirst = false;\n  };\n};\n\nconst createTopAxisTitle = (topAxis, xAxisPart, shapeWidth, topGap, topTitle, isMobile) => {\n  let { style, show } = xAxisPart.title;\n  let opacity = show ? 1 : 0;\n  topAxis.append('text')\n    .attr('transform', `translate(${shapeWidth / 2}, ${isMobile ? topGap - 15 : topGap})`)\n    .attr('fill', style.fontColor)\n    .attr('font-size', style.fontSize)\n    .attr('text-anchor', 'middle')\n    .attr('opacity', opacity)\n    .text(() => {\n      return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTxt\"])(shapeWidth, topTitle, style.fontSize);\n    });\n};\n\nconst initTopAxis = (topAxis, xPartChild, layoutIndex, topGap, xAxisPart, bandwidth, start, shapeHeight, isFirst, isMobile) => {\n  let unitWidth = xPartChild.len * bandwidth;\n  let width = unitWidth / 2 + bandwidth * start;\n  let unitBand = unitWidth;\n  let lineWidth = bandwidth * start + 1;\n  let style = xAxisPart[xPartChild.index].label.style;\n  let grid = xAxisPart[xPartChild.index].grid.line.style;\n  let unitHeight = isMobile ? 40 : 30;\n  let firstHeight = 25;\n  let index = xPartChild.index;\n  let rotate = xAxisPart[xPartChild.index].label.style.rotate;\n  if (rotate === 90 && xPartChild.index === 0) {\n    firstHeight = 25;\n    unitWidth = 70;\n  }\n  if (index) {\n    rotate = xAxisPart[index - 1].label.style.rotate;\n    unitWidth = 70;\n  }\n  if (rotate === 90) {\n    unitHeight = 70;\n  }\n  let height = layoutIndex * unitHeight + firstHeight + topGap;\n  topAxis.append('text')\n    .attr('transform', `translate(${width}, ${height}) rotate(${style.rotate})`)\n    .attr('fill', style.fontColor)\n    .attr('text-anchor', 'middle')\n    .attr('font-size', style.fontSize)\n    .text(() => {\n      if (unitBand < 20) return '.';\n      return Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTxt\"])(unitWidth, xPartChild.name, style.fontSize, true);\n    })\n    .append('title')\n    .text(xPartChild.name);\n  let y1 = isMobile ? layoutIndex * (unitHeight + 10) + (firstHeight + 15) : layoutIndex * unitHeight + firstHeight;\n  topAxis.append('line')\n    .attr('x1', lineWidth)\n    .attr('y1', y1)\n    .attr('x2', lineWidth)\n    .attr('y2', (shapeHeight - layoutIndex * unitHeight + firstHeight))\n    .attr('opacity', isFirst ? 0 : 1)\n    .attr('stroke', grid.fontColor)\n    .attr('stroke-width', grid.lineWidth);\n  if (xPartChild.children.length) {\n    let list = xPartChild.children;\n    let childStart = start;\n    let childIsFirst = true;\n    for (let i = 0, len = list.length; i < len; i++) {\n      if (i > 0) childStart = childStart + list[i - 1].len;\n      // if (i === len - 1) childIsLast = true;\n      initTopAxis(topAxis, list[i], layoutIndex + 1, topGap, xAxisPart, bandwidth, childStart, shapeHeight, childIsFirst, isMobile);\n      childIsFirst = false;\n    }\n  }\n};\n\nconst createRotatedTopAxis = (middle, shapeHeight, bottomAxisHeight, bandwidth, xPartList, xAxisPart, topTitle) => {\n  let topAxis = middle.append('g').attr('class', 'top-axis');\n  let topGap = 20;\n  let start = 0;\n  let isFirst = true;\n  for (let i = 0, len = xPartList.length; i < len; i++) {\n    if (i > 0) start = start + xPartList[i - 1].len;\n    // if (i === len - 1) isLast = true;\n    initRotatedTopAxis(topAxis, xPartList[i], 0, topGap, xAxisPart, bandwidth, start, shapeHeight, bottomAxisHeight, isFirst);\n    isFirst = false;\n  };\n};\n\nconst initRotatedTopAxis = (topAxis, xPartChild, layoutIndex, topGap, xAxisPart, bandwidth, start, shapeHeight, bottomAxisHeight, isFirst) => {\n  let height = layoutIndex * 40 + 35 + topGap;\n  let unitWidth = xPartChild.len * bandwidth - 4;\n  let width = unitWidth / 2 + bandwidth * start;\n  let lineWidth = bandwidth * start + 1; // unitWidth + bandwidth * start;\n  let style = xAxisPart.label.style;\n  let grid = xAxisPart.grid.line.style;\n  topAxis.append('text')\n    .attr('transform', `translate(${height - 20}, ${width})`)\n    .attr('fill', style.fontColor)\n    .attr('text-anchor', 'middle')\n    .attr('writing-mode', 'tb')\n    .attr('font-size', style.fontSize)\n    .text(Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"setTxt\"])(unitWidth, xPartChild.name, style.fontSize, true));\n  initVerLine(topAxis, height, shapeHeight * start, 0, grid);\n  topAxis.append('line')\n    .attr('y1', lineWidth)\n    .attr('x1', height - 40)\n    .attr('y2', lineWidth)\n    .attr('x2', shapeHeight + bottomAxisHeight)\n    .attr('opacity', isFirst ? 0 : 1)\n    .attr('stroke', grid.fontColor)\n    .attr('stroke-width', grid.lineWidth);\n  if (xPartChild.children.length) {\n    let list = xPartChild.children;\n    let childStart = start;\n    let childIsFirst = true;\n    for (let i = 0, len = list.length; i < len; i++) {\n      if (i > 0) childStart = childStart + list[i - 1].len;\n      // if (i === len - 1) childIsLast = true;\n      initRotatedTopAxis(topAxis, list[i], layoutIndex + 1, topGap, xAxisPart, bandwidth, childStart, shapeHeight, childIsFirst);\n      childIsFirst = false;\n    }\n  }\n};\n\nconst initVerLine = (leftPart, width, shapeHeight, topAxisHeight, grid) => {\n  leftPart.append('line')\n    .attr('x1', width)\n    .attr('y1', topAxisHeight)\n    .attr('x2', width)\n    .attr('y2', shapeHeight + topAxisHeight)\n    .attr('stroke', grid.fontColor)\n    .attr('stroke-width', grid.lineWidth);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/topAxisUtils.js?");

/***/ }),

/***/ "./src/chart/common/utils.js":
/*!***********************************!*\
  !*** ./src/chart/common/utils.js ***!
  \***********************************/
/*! exports provided: setTickValues, getTxtLen, getToTalBar, setTxt, setHTxt, judeTxt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTickValues\", function() { return setTickValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTxtLen\", function() { return getTxtLen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getToTalBar\", function() { return getToTalBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTxt\", function() { return setTxt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setHTxt\", function() { return setHTxt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"judeTxt\", function() { return judeTxt; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./src/utils/utils.js\");\n/* harmony import */ var _containerUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./containerUtils */ \"./src/chart/common/containerUtils.js\");\n\n\n\n// 输入刻度值区域跟刻度数 返回刻度值数组\nconst setTickValues = (domain, counts) => {\n  if (!counts) return null;\n  let tickArray = [];\n  let gapNum = (domain[1] - domain[0]) / counts;\n  let gap = (gapNum > 10) ? Math.ceil(gapNum) : gapNum;\n  if (domain[1] > 0) {\n    for (let i = 0; i <= counts; i++) {\n      tickArray.push(domain[0] + gap * i);\n    }\n  } else {\n    for (let i = 0; i <= counts - 1; i++) {\n      tickArray.push(domain[0] + gap * i);\n    }\n    tickArray.push(0);\n  }\n  return tickArray;\n};\n\n// 输入宽度跟字体大小，返回能显示的文字个数\nconst getTxtLen = (width, font) => {\n  let textDom = document.createElement('div');\n  textDom.style.width = width + 'px';\n  textDom.style.fontSize = font + 'px';\n  textDom.style.overflow = 'hidden';\n  textDom.style.textOverflow = 'ellipsis';\n  textDom.style.whiteSpace = 'nowrap';\n  let txt = '';\n  for (let i = 1; i < width; i++) {\n    txt = txt + '哈';\n    textDom.innerText = txt;\n    document.body.appendChild(textDom);\n    if (textDom.scrollWidth > textDom.offsetWidth) {\n      document.body.removeChild(textDom);\n      return i;\n    };\n    document.body.removeChild(textDom);\n  }\n  return -1;\n};\n\nconst setTxt = (unitWidth, name, fontSize, isPart) => {\n  if (unitWidth > 35 && unitWidth <= 55) return `${name.slice(0, 1)}..`;\n  if (unitWidth <= 35 && unitWidth > 25) return '...';\n  if (unitWidth < 25) return '.';\n  let len = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtWidth\"])(name, fontSize);\n  if (len < unitWidth - 35) return name;\n  let getLen = isPart ? unitWidth - 35 : unitWidth - 35;\n  let fullLen = getTxtLen(getLen, fontSize) - 1;\n  if (fullLen >= name.length) return name;\n  return `${name.slice(0, fullLen)}..`;\n};\n\nconst setHTxt = (unitWidth, name, fontSize) => {\n  let height = Object(_containerUtils__WEBPACK_IMPORTED_MODULE_1__[\"getTxtHeight\"])(name, fontSize);\n  if (height > unitWidth + 5) return '.';\n  return name;\n};\n\nconst getToTalBar = (yAxis) => {\n  let index = 0;\n  for (let i = 0; i < yAxis.length; i++) {\n    for (let j = 0; j < yAxis[i].key.length; j++) {\n      if (yAxis[i].type[j] === 'bar') {\n        index++;\n      }\n    }\n  }\n  return index;\n};\n\nconst judeTxt = (perNode, node) => {\n  let perRect = perNode.getBoundingClientRect();\n  let nodeRect = node.getBoundingClientRect();\n  if (perRect.right + 10 > nodeRect.left) {\n    return false;\n  }\n  return true;\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/utils.js?");

/***/ }),

/***/ "./src/chart/common/xAxisDataUtils.js":
/*!********************************************!*\
  !*** ./src/chart/common/xAxisDataUtils.js ***!
  \********************************************/
/*! exports provided: setXAxisPartList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setXAxisPartList\", function() { return setXAxisPartList; });\n/* harmony import */ var _dataUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataUtils */ \"./src/chart/common/dataUtils.js\");\n\n\nconst setXAxisPartList = (xAxisPart, key, data) => {\n  let xAxisPartLen = xAxisPart.length;\n  let xAxisList = [];\n  let maxXAxisLen = '';\n  let xPartList = [];\n  // let partKey = [];\n  if (!xAxisPartLen) {\n    let { list, maxTxt } = setXAxisList(key, data);\n    xAxisList = list;\n    maxXAxisLen = maxTxt;\n  } else {\n    let firstList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(xAxisPart[0].key, data);\n    setPartMap(xAxisPart, 0, firstList, data, xPartList, key);\n    setPartChildLen(xPartList, key);\n    setXAxisListForMap(xPartList, xAxisList, key);\n    maxXAxisLen = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"setMaxLen\"])(xAxisList);\n    // partKey = xAxisPart[xAxisPartLen - 1].key;\n  }\n  return { xAxisList, maxXAxisLen, xPartList };\n};\n\nconst setUniqueArr = (list, key) => {\n  let uniqueList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(key, list);\n  return uniqueList.length;\n};\n\nconst getPartChild = (xPartChild, key) => {\n  if (xPartChild.children.length) {\n    let list = xPartChild.children;\n    let len = 0;\n    for (let i = 0; i < list.length; i++) {\n      len = len + getPartChild(list[i], key);\n    }\n    return len;\n  } else {\n    return setUniqueArr(xPartChild.list, key);\n  }\n};\n\nconst setPartChildLen = (xPartList, key) => {\n  if (!xPartList.length) return;\n  for (let i = 0; i < xPartList.length; i++) {\n    xPartList[i].len = getPartChild(xPartList[i], key);\n    if (xPartList[i].children.length) {\n      setPartChildLen(xPartList[i].children, key);\n    }\n  }\n};\n\nconst setXAxisListForMap = (xPartList, xAxisList, key) => {\n  for (let i = 0, len = xPartList.length; i < len; i++) {\n    if (xPartList[i].list) {\n      let uniqueList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(key, xPartList[i].list);\n      for (let j = 0; j < uniqueList.length; j++) {\n        xAxisList.push({\n          name: uniqueList[j] // [key]\n        });\n      }\n    } else {\n      setXAxisListForMap(xPartList[i].children, xAxisList, key);\n    }\n  }\n};\n\nconst setXAxisList = (key, data) => {\n  let list = [];\n  let temp = []; // 方便用来去重\n  let maxLen = 0;\n  let maxTxt = '';\n  for (let i = 0, len = data.length; i < len; i++) {\n    if (!temp.includes(data[i][key])) {\n      let name = data[i][key];\n      let length = getStrLen(name);\n      if (maxLen < length) {\n        maxLen = length;\n        maxTxt = name;\n      }\n      list.push({\n        name\n      });\n      temp.push(name);\n    }\n  }\n  return {\n    list,\n    maxTxt\n  };\n};\n\nconst getStrLen = (str) => {\n  var l = str.length;\n  var blen = 0;\n  for (let i = 0; i < l; i++) {\n    if ((str.charCodeAt(i) & 0xff00) !== 0) {\n      blen++;\n    }\n    blen++;\n  }\n  return blen;\n};\n\n// 生成顶部X轴的数据\nconst setPartMap = (xAxisPart, index, first, data, xPartList, key) => {\n  let partKey = xAxisPart[index].key;\n  for (let i = 0, len = first.length; i < len; i++) {\n    let name = first[i];\n    let list = [];\n    for (let j = 0, dataLen = data.length; j < dataLen; j++) {\n      if (data[j][partKey] === name) {\n        list.push(data[j]);\n      }\n    }\n    xPartList.push({\n      name,\n      list,\n      key: partKey,\n      children: [],\n      index: index\n    });\n  };\n  if (!xAxisPart[index + 1]) return;\n  setMorePartMap(xAxisPart, index + 1, xPartList, key);\n};\n\nconst setMorePartMap = (xAxisPart, index, xPartList, key) => {\n  let partKey = xAxisPart[index].key;\n  for (let i = 0, len = xPartList.length; i < len; i++) {\n    let data = xPartList[i].list;\n    delete xPartList[i].list;\n    let firstList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(partKey, data);\n    setPartMap(xAxisPart, index, firstList, data, xPartList[i].children, key);\n  }\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/xAxisDataUtils.js?");

/***/ }),

/***/ "./src/chart/common/yAxisDataUtils.js":
/*!********************************************!*\
  !*** ./src/chart/common/yAxisDataUtils.js ***!
  \********************************************/
/*! exports provided: setYAxisPartList, getMaxValue, isNoXPart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setYAxisPartList\", function() { return setYAxisPartList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMaxValue\", function() { return getMaxValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNoXPart\", function() { return isNoXPart; });\n/* harmony import */ var _dataUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataUtils */ \"./src/chart/common/dataUtils.js\");\n\nconst setYAxisPartList = (yAxisPart, yAxis, xKey, colorList, xAxisList, xAxisPart, chartType, xPartList) => {\n  let yAxisPartLen = yAxisPart.length;\n  let leftMaxValue = 0;\n  let leftMinValue = 0;\n  let rightMaxValue = 0;\n  let rightMinValue = 0;\n  let yPartList = [];\n  let yAxisNum = 1;\n  if (!yAxisPartLen) {\n    // 返回左侧坐标轴的最大值\n    let { leftMax, leftMin } = setYAxisMaxValue(yAxis, xKey, colorList, 'left', xAxisPart, chartType, xPartList);\n    leftMaxValue = leftMax;\n    leftMinValue = leftMin;\n    // 返回右侧坐标轴的最大值\n    let { rightMax, rightMin } = setYAxisMaxValue(yAxis, xKey, colorList, 'right', xAxisPart, chartType, xPartList);\n    rightMaxValue = rightMax;\n    rightMinValue = rightMin;\n  } else {\n    let xLen = xAxisList.length;\n    for (let i = 0; i < yAxis.length; i++) {\n      let data = yAxis[i][0].data[0];\n      let partList = [];\n      let allData = getAllData(yAxis[i]);\n      setPartMapList(yAxisPart, data, partList, allData, xLen);\n      partList = partList.filter(item => item.name);\n      setPartChildLen(partList, xLen);\n      yPartList.push(partList);\n    }\n    let { leftMax, leftMin } = setYAxisMaxValue(yAxis, xKey, colorList, 'left', xAxisPart, chartType, xPartList);\n    leftMaxValue = leftMax;\n    leftMinValue = leftMin;\n    let { rightMax, rightMin } = setYAxisMaxValue(yAxis, xKey, colorList, 'right', xAxisPart, chartType, xPartList);\n    rightMaxValue = rightMax;\n    rightMinValue = rightMin;\n    yAxisNum = getYAxisNum(yPartList);\n  }\n  return {\n    leftMaxValue,\n    leftMinValue,\n    rightMaxValue,\n    rightMinValue,\n    yPartList,\n    yAxisNum\n  };\n};\n\nconst getAllData = (yAxisChild) => {\n  let obj = {};\n  for (let i = 0; i < yAxisChild.length; i++) {\n    obj[yAxisChild[i].position] = yAxisChild[i].data;\n  }\n  return obj;\n};\n\nconst setPartChildLen = (yPartList, key) => {\n  if (!yPartList.length) return;\n  for (let i = 0; i < yPartList.length; i++) {\n    yPartList[i].len = getPartChild(yPartList[i], key);\n    if (yPartList[i].children.length) {\n      setPartChildLen(yPartList[i].children, key);\n    }\n  }\n};\n\nconst getPartChild = (yPartChild, key) => {\n  if (yPartChild.children.length) {\n    let list = yPartChild.children;\n    let len = 0;\n    for (let i = 0; i < list.length; i++) {\n      len = len + getPartChild(list[i], key);\n    }\n    return len;\n  } else {\n    return 1;\n  }\n};\n\nconst getYAxisNum = (list) => {\n  let arr = [];\n  getNum(list[0], arr);\n  return arr.length;\n};\n\nconst getNum = (list, arr) => {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].list) {\n      arr.push('s');\n      delete list[i].list;\n    } else {\n      getNum(list[i].children, arr);\n    }\n  }\n};\n\nconst setPartMapList = (yAxisPart, data, partList, allData, xLen) => {\n  let firstList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(yAxisPart[0].key[0], data);\n  setPartMap(yAxisPart, 0, firstList, data, partList, allData, xLen);\n};\n\nconst filterData = (allData, partKey, name) => {\n  let tempObj = {};\n  for (let key in allData) {\n    let list = allData[key];\n    tempObj[key] = [];\n    for (let i = 0; i < list.length; i++) {\n      let arr = [];\n      for (let j = 0; j < list[i].length; j++) {\n        if (list[i][j][partKey] === name) {\n          arr.push(list[i][j]);\n        }\n      }\n      tempObj[key].push(arr);\n    }\n  }\n  return {\n    allDataObj: tempObj,\n    list: tempObj.left[0]\n  };\n};\n\n// 生成顶部X轴的数据\nconst setPartMap = (yAxisPart, index, first, data, partList, allData, xLen) => {\n  let partKey = yAxisPart[index].key[0];\n  for (let i = 0, len = first.length; i < len; i++) {\n    let name = first[i];\n    let { allDataObj, list } = filterData(allData, partKey, name);\n    partList.push({\n      name,\n      list: list,\n      allDataObj: allDataObj,\n      key: partKey,\n      children: []\n    });\n  };\n  if (!yAxisPart[index + 1]) return;\n  setMorePartMap(yAxisPart, index + 1, partList, xLen);\n};\n\nconst setMorePartMap = (yAxisPart, index, partList, xLen) => {\n  let partKey = yAxisPart[index].key;\n  for (let i = 0, len = partList.length; i < len; i++) {\n    let data = partList[i].list;\n    delete partList[i].list;\n    let firstList = Object(_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getUniqueList\"])(partKey, data);\n    setPartMap(yAxisPart, index, firstList, data, partList[i].children, partList[i].allDataObj, xLen);\n  }\n};\n\n// 获取所有Y轴的最大值跟最小值\nconst setYAxisMaxValue = (yAxis, xKey, colorList, position, xAxisPart, chartType, xPartList) => {\n  let maxArr = [];\n  let minArr = [];\n  for (let i = 0, len = yAxis.length; i < len; i++) {\n    let axisObj = null;\n    let leftLen = 0;\n    if (position === 'left') {\n      axisObj = yAxis[i][0];\n    } else {\n      axisObj = yAxis[i][1];\n      leftLen = yAxis[i][0].key.length;\n    }\n    if (!axisObj) continue;\n    let { max, min } = getMaxValue(axisObj, xKey, colorList, i, leftLen, null, xAxisPart, chartType, xPartList);\n    maxArr.push(max);\n    minArr.push(min);\n  };\n  let obj = {};\n  let max = maxArr.length ? Math.max(...maxArr) : 0;\n  let min = minArr.length ? Math.min(...minArr) : 0;\n  obj[`${position}Max`] = isNaN(max) ? 0 : Number(max);\n  obj[`${position}Min`] = isNaN(min) ? 0 : Number(min);\n  return obj;\n};\n\nconst isNoXPart = (xAxisPart, xKey, keyName, yPartChild) => {\n  if (xKey === keyName) return false;\n  if (yPartChild && yPartChild.key === keyName) {\n    return false;\n  };\n  for (let i = 0; i < xAxisPart.length; i++) {\n    if (xAxisPart[i].key === keyName) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/*\n  获取单个轴的最大值跟最小值\n  axisObj: yAxis中的元素\n  xKey: x轴的特征名\n  xPartList: 顶部Y轴列表\n  colorList: 颜色列表 (统一分类下，不同颜色值要相加成整数)\n  index: yAxis中元素的下标\n  leftLen: 左坐标轴的数量,如果是计算左坐标轴，那么leftLen传入值为0\n*/\nconst getMaxValue = (\n  axisObj,\n  xKey,\n  colorList,\n  index,\n  leftLen,\n  yPartChild,\n  xAxisPart,\n  chartType,\n  xPartList\n) => {\n  if (!axisObj) return [];\n  let dataList = axisObj.data;\n  let keyList = axisObj.key;\n  let typeList = axisObj.type;\n  let data = [];\n  for (let i = 0, len = dataList.length; i < len; i++) {\n    let keyId = `${index}-${leftLen + i}`;\n    if (!chartType) chartType = typeList[i];\n    let colorObj = colorList.filter(item => item.keyId === keyId)[0];\n    // 如果有颜色分类，需要将统一分类下不同颜色的数值加起来\n    if (chartType !== 'line' &&\n        colorObj &&\n        colorObj.type === 'ordinal' &&\n        colorObj.feature &&\n        isNoXPart(xAxisPart, xKey, colorObj.feature, yPartChild)) {\n      data.push(...getOrdinal(dataList[i], keyList[i], xKey, yPartChild, xPartList, colorObj));\n    } else {\n      data.push(...getData(dataList[i], keyList[i], yPartChild));\n    }\n  }\n  return {\n    max: Math.max(...data),\n    min: Math.min(...data)\n  };\n};\n\nconst setXPartData = (xPartList, data, xKey, key, list, colorObj) => {\n  for (let i = 0; i < xPartList.length; i++) {\n    if (xPartList[i].children.length) {\n      let arr = list.filter(item => item[xPartList[i].key] === xPartList[i].name);\n      setXPartData(xPartList[i].children, data, xKey, key, arr);\n    } else {\n      let arr = list.filter(item => item[xPartList[i].key] === xPartList[i].name);\n      setAxisData(arr, data, xKey, key, colorObj);\n    }\n  }\n};\n\nconst setAxisData = (list, data, xKey, key, colorObj) => {\n  let xAxisList = [];\n  let value = 0;\n  let index = 0;\n  for (let i = 0, len = list.length; i < len; i++) {\n    if (!xAxisList.includes(list[i][xKey])) {\n      if (index > 0) {\n        data.push(value);\n        index = 0;\n      }\n      xAxisList.push(list[i][xKey]);\n      if (!isNaN(list[i][key])) {\n        value = list[i][key];\n      }\n      index = index + 1;\n    } else {\n      let value1 = 0;\n      if (!isNaN(list[i][key])) {\n        value1 = list[i][key];\n      }\n      value = value + value1;\n      index = index + 1;\n    }\n    if (i === len - 1) {\n      data.push(value);\n    }\n  };\n};\n\nconst getOrdinal = (list, key, xKey, yPartChild, xPartList, colorObj) => {\n  let data = [];\n  if (yPartChild) {\n    list = list.filter(item => item[yPartChild.key] === yPartChild.name);\n  }\n  if (xPartList.length) {\n    setXPartData(xPartList, data, xKey, key, list, colorObj);\n  } else {\n    setAxisData(list, data, xKey, key, colorObj);\n  }\n  return data;\n};\n\nconst getData = (list, key, yPartChild) => {\n  let data = [];\n  if (yPartChild) {\n    list = list.filter(item => item[yPartChild.key] === yPartChild.name);\n  }\n  for (let i = 0, len = list.length; i < len; i++) {\n    if (!isNaN(list[i][key])) {\n      data.push(list[i][key]);\n    }\n  }\n  return data;\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/yAxisDataUtils.js?");

/***/ }),

/***/ "./src/chart/common/yAxisUtils.js":
/*!****************************************!*\
  !*** ./src/chart/common/yAxisUtils.js ***!
  \****************************************/
/*! exports provided: createYGrid, createYAxis, setYAxisStyle, createRotatedYAxis, createRotatedYGrid, setLabelStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createYGrid\", function() { return createYGrid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createYAxis\", function() { return createYAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setYAxisStyle\", function() { return setYAxisStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedYAxis\", function() { return createRotatedYAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRotatedYGrid\", function() { return createRotatedYGrid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLabelStyle\", function() { return setLabelStyle; });\n/* harmony import */ var _axisUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axisUtil */ \"./src/chart/common/axisUtil.js\");\n/* harmony import */ var _containerUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/chart/common/utils.js\");\n\n\n\nconst createYAxis = (axisContainer, axis, height, width) => {\n  let axisInstance = axisContainer.append('g')\n    .attr('transform', () => {\n      return `translate(${width || 0},${height})`;\n    })\n    .call(axis);\n  return axisInstance;\n};\n\nconst createRotatedYAxis = (axisContainer, axis, height, translateY, id) => {\n  let axisInstance = axisContainer.append('g')\n    .attr('class', `axis-${id}`)\n    .attr('transform', () => {\n      return `translate(${height},${translateY})`;\n    })\n    .call(axis);\n  return axisInstance;\n};\n\nconst setYAxisStyle = (axisInstance, yAxisChild, width, leftLabelWidth, titleWidth, shapeWidth, format, labelWidth, start, isRotated, isLast, yAxisHeight, isCombined) => {\n  let { line, label, title, position } = yAxisChild;\n  Object(_axisUtil__WEBPACK_IMPORTED_MODULE_0__[\"setLineStyle\"])(axisInstance, line);\n  // 设置标签的样式\n  setLabelStyle(axisInstance, label, position, format, start, isRotated, isLast, yAxisHeight, isCombined);\n  filterLabel(axisInstance, yAxisHeight, label, isRotated, start);\n  // 设置标题\n  setTitleStyle(axisInstance, title, position, width, shapeWidth, isRotated, yAxisHeight, leftLabelWidth, titleWidth, start, labelWidth);\n};\n\nconst filterLabel = (axisInstance, yAxisHeight, label, isRotated) => {\n  let dom = axisInstance._groups[0][0].querySelectorAll('.axis-label');\n  dom = [...dom];\n  let len = dom.length;\n  let bandwidth = yAxisHeight / (len + 2);\n  let txtArr = [];\n  for (let i = 0; i < len; i++) {\n    let txtLen = Object(_containerUtils__WEBPACK_IMPORTED_MODULE_1__[\"getTxtWidth\"])(dom[i].textContent, label.style.fontSize || 14);\n    txtArr.push(txtLen);\n  }\n  let txt = Math.max(...txtArr);\n  let num = 1;\n  if (bandwidth < txt) {\n    num = Math.ceil(txt / bandwidth);\n  }\n  for (let i = 0; i < len; i++) {\n    if (i % num) {\n      dom[i].style.display = 'none';\n    } else {\n      if (i === len - 1 && isRotated) {\n        dom[i].style.display = 'none';\n      }\n    }\n  }\n  // debugger;\n  // if (bandwidth < 15) {\n  //   dom[len - 1].style.display = 'none';\n  //   dom[0].style.display = 'none';\n  // }\n};\n\nconst setLabelStyle = (axisInstance, label, position, format, start, isRotated, isLast, yAxisHeight, isCombined) => {\n  let { style } = label;\n  let allLabel = axisInstance.selectAll('text');\n  let txtNum = allLabel._groups[0].length - 1;\n  // let perTxt = null;\n  // 计算单元宽度能显示的文字个数\n  allLabel.attr('font-size', style.fontSize) // 标签文本大小\n    .attr('fill', style.fontColor) // 标签文本颜色\n    .attr('opacity', style.opacity) // 标签文本透明度\n    .attr('transform', `rotate(${style.rotate})`)\n    .attr('class', () => {\n      return 'axis-label';\n    })\n    .text(function (d, index) {\n      if (d === 0) return d;\n      let txt = (txtNum === index && start !== 0) ? '' : format(d);\n      if (isRotated) {\n        if (index === 0) return format(d);\n        if (txtNum === index && !isLast) return '';\n        if (txtNum === index && isLast) return format(d);\n        return format(d);\n      }\n      if (yAxisHeight < 15 && index === 0) {\n        txt = '';\n      };\n      return txt;\n    });\n  if (isRotated) {\n    allLabel.attr('x', (d) => {\n      let obj = {\n        45: 25,\n        '-45': 0,\n        90: 0,\n        0: 0\n      };\n      if (position === 'right') {\n        obj = {\n          0: 5,\n          90: 5,\n          45: 5,\n          '-45': 5\n        };\n      }\n      return `${obj[style.rotate] || 0}`;\n    })\n      .attr('text-anchor', () => {\n        let anchorObj = {\n          45: 'end',\n          '-45': 'start',\n          90: 'end',\n          0: 'middle'\n        };\n        if (position === 'right') {\n          anchorObj = {\n            0: 'middle',\n            90: 'start',\n            45: 'start',\n            '-45': 'end'\n          };\n        }\n        return anchorObj[style.rotate];\n      })\n      .attr('y', () => {\n        let yObj = {\n          45: -35,\n          '-45': 3,\n          90: -3,\n          0: -3\n        };\n        if (position === 'right') {\n          yObj = {\n            0: 3,\n            90: 3,\n            45: 3,\n            '-45': 5\n          };\n        }\n        return yObj[style.rotate];\n      });\n  } else {\n    allLabel.attr('x', (d) => {\n      let obj = {\n        45: -10,\n        '-45': -5,\n        90: 0,\n        0: -5\n      };\n      if (position === 'right') {\n        obj = {\n          0: 0,\n          90: -5,\n          45: 10,\n          '-45': 10\n        };\n      }\n      return `${obj[style.rotate] || 10}`;\n    });\n    allLabel.attr('y', (d) => {\n      let obj = {\n        45: 0,\n        90: 10,\n        '-45': -5\n      };\n      if (position === 'right') {\n        obj = {\n          45: 0,\n          '-45': 0,\n          90: -15,\n          0: 0\n        };\n      }\n      return `${obj[style.rotate] || 0}`;\n    })\n      .attr('text-anchor', () => {\n        let anchorObj = {\n          45: 'end',\n          '-45': 'end',\n          90: 'middle',\n          0: 'end'\n        };\n        if (position === 'right') {\n          anchorObj = {\n            45: 'start',\n            '-45': 'start',\n            90: 'middle',\n            0: 'start'\n          };\n        }\n        return anchorObj[style.rotate];\n      });\n  }\n};\n\nconst setTitleStyle = (axisInstance, title, position, width, shapeHeight, isRotated, yAxisHeight, leftLabelWidth, titleWidth, start, labelWidth) => {\n  let { style, show, value } = title;\n  axisInstance.append('g')\n    .attr('transform', () => {\n      let translateX = leftLabelWidth + titleWidth;\n      let translateY = start === 0 ? -4 : 4;\n      if (isRotated) {\n        translateX = -yAxisHeight;\n        translateY = width - 10;\n        if (position === 'left') {\n          translateY = -labelWidth - 6;\n        }\n      } else {\n        if (position === 'right') {\n          translateX = -width + titleWidth - 5;\n        }\n      }\n      return `translate(${-translateX}, ${translateY})`;\n    })\n    .append('text')\n    .attr('text-anchor', isRotated ? 'end' : 'start')\n    .attr('font-size', style.fontSize) // 标题大小\n    .attr('fill', style.fontColor) // 标题颜色\n    .attr('opacity', show ? 1 : 0)\n    .style('writing-mode', isRotated ? 'lr-tb' : 'tb')\n    .text(() => {\n      return Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"setTxt\"])(yAxisHeight, value, style.fontSize);\n    }) // 标题名称\n    .append('title')\n    .text(value);\n};\n\nconst createYGrid = (middle, axis, position, topAxisHeight, shapeWidth, yAxisChild) => {\n  if (position !== 'left') return;\n  if (!yAxisChild.grid) return;\n  let { show, style } = yAxisChild.grid.line;\n  if (!show) return;\n  let axisInstance = middle.append('g')\n    .attr('transform', () => {\n      return `translate(${0},${topAxisHeight})`;\n    })\n    .call(axis);\n  axisInstance.selectAll('text').attr('opacity', 0);\n  axisInstance.selectAll('path').attr('opacity', 0);\n  let allTick = axisInstance.selectAll('line');\n  allTick.attr('x2', shapeWidth)\n    .attr('stroke-dasharray', style.lineDash.join(','))\n    .attr('stroke', style.fontColor)\n    .attr('stroke-width', style.lineWidth);\n};\n\nconst createRotatedYGrid = (middle, axis, position, bottomAxisHeight, shapeWidth, yAxisChild) => {\n  if (position !== 'left') return;\n  if (!yAxisChild.grid) return;\n  let { show, style } = yAxisChild.grid.line;\n  if (!show) return;\n  let axisInstance = middle.append('g')\n    .attr('transform', () => {\n      return `translate(${bottomAxisHeight},${0})`;\n    })\n    .call(axis);\n  axisInstance.selectAll('text').attr('opacity', 0);\n  axisInstance.selectAll('path').attr('opacity', 0);\n  let allTick = axisInstance.selectAll('line');\n  allTick.attr('y2', shapeWidth)\n    .attr('stroke-dasharray', style.lineDash.join(','))\n    .attr('stroke', style.fontColor)\n    .attr('stroke-width', style.lineWidth);\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/common/yAxisUtils.js?");

/***/ }),

/***/ "./src/chart/line.js":
/*!***************************!*\
  !*** ./src/chart/line.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Line; });\n/* harmony import */ var _shape_lineShape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shape/lineShape */ \"./src/chart/shape/lineShape.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./src/chart/base.js\");\n\n// import { drawLabel } from './shape/label';\n\nclass Line extends _base__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.chartType = 'line';\n    this.initData(config);\n    this.init();\n  };\n\n  drawCanvas (yAxis, yAxisChild, scaleY, index, parentIndex, start, yPartChild) {\n    let bandwidth = this.scaleX.bandwidth();\n    let data = yAxisChild.data;\n    let keyArr = yAxisChild.key;\n    let num = index !== 0 ? yAxis[index - 1].key.length : 0;\n    let height = this.yAxisHeight * start;\n    let topAxisHeight = this.topAxisHeight + height - this.xAxis.line.style.lineWidth / 2;\n    for (let i = 0; i < keyArr.length; i++) {\n      let keyId = `${parentIndex}-${num}`;\n      let drawData = JSON.parse(JSON.stringify(data[i]));\n      let allData = JSON.parse(JSON.stringify(data[i]));\n      if (yPartChild) {\n        drawData = yPartChild.allDataObj[yAxisChild.position][i];\n      }\n      Object(_shape_lineShape__WEBPACK_IMPORTED_MODULE_0__[\"drawLineShape\"])(\n        this.middle,\n        this.lineContainer,\n        this.labelContainer,\n        drawData,\n        scaleY,\n        bandwidth,\n        topAxisHeight,\n        height,\n        keyArr[i],\n        this.colorList,\n        this.xAxisList,\n        this.xAxis,\n        this.xAxisPart,\n        this.lineStyle,\n        this.lineSize, // 线的粗细\n        this.tooltipList, // tooltip显示内容\n        this.labelsList, // 标签\n        keyId,\n        // this.partKey,\n        allData,\n        yPartChild,\n        this.click,\n        this.id,\n        this.shapeWidth,\n        this.yAxisHeight,\n        index,\n        start\n      );\n      num = num + 1;\n    }\n  };\n\n  render () {\n\n  };\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/line.js?");

/***/ }),

/***/ "./src/chart/map.js":
/*!**************************!*\
  !*** ./src/chart/map.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return map; });\n/* harmony import */ var _utils_check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/check.js */ \"./src/utils/check.js\");\n/* eslint-disable */\n\n// import Geometry from '../geometry/Geometry.js';\nclass map {\n  constructor (data, config) {\n    this.config = config;\n    // this.data = data;\n    this.data = data.filter((item) => {\n      return item.latitude && item.longitude;\n    });\n    this.scene = null;\n    this.clickLabelLayer = null;\n    this.markerLayer = null;\n    this.zoomLayer = null;\n    this.pointLayer = null;\n  };\n\n  render () {\n    // let idx = n.x;\n    // let idy = n.y;\n    // $$.bigContainer.append('div')\n    //   .attr('id', `${bindto.slice(1)}-${idx}-${idy}`)\n    //   .attr('style', `width: ${map_width}px; height: ${map_height}px; display: block; position: absolute;\n    //     transform: translate(${idx * width}px,  ${idy * height}px)`)\n\n    // scene = new L7.Scene({\n    //   id: `${bindto.slice(1)}-${idx}-${idy}`,\n    //   map: new L7.GaodeMap({\n    //     pitch: 0,\n    //     style: 'light',\n    //     center: [ 106.47111650000001, 34.00407302986006 ],\n    //     // center: [ 34.00407302986006, 106.47111650000001 ],\n    //     // center: [ 121.435159, 31.256971 ],\n    //     zoom: 3,\n    //     minZoom: 3\n    //   })\n    // });\n    var mapDiv = document.querySelector('#' + this.config.id);\n    mapDiv.innerHTML = '';\n    if (this.scene) {\n      this.scene.destroy();\n    }\n    this.resetData();\n    this.scene = new L7.Scene({\n      id: this.config.id,\n      map: new L7.GaodeMap({\n        pitch: 0,\n        style: 'light',\n        center: [106.47111650000001, 34.00407302986006],\n        // center: [ 34.00407302986006, 106.47111650000001 ],\n        // center: [ 121.435159, 31.256971 ],\n        zoom: 3,\n        minZoom: 3\n      })\n    });\n    this.scene.on('loaded', (ev) => {\n      this.fitBoundsMap();\n      setTimeout(() => {\n        this.addMapSymbols();\n        if (this.isMobile()) {\n          this.addZoomCtrl();\n        }\n        this.addMapLabels();\n        // setTimeout(() => {\n        //   this.addMapLabels();\n        // }, 100);\n        this.scene.on('zoomend', () => {\n          console.log('zoom');\n          if (this.markerLayer) {\n            this.markerLayer.markers.forEach(item => {\n              item.remove();\n            });\n            this.markerLayer && this.scene.removeMarkerLayer(this.markerLayer);\n          }\n          this.addMapLabels();\n        }); // 缩放停止时触发\n      }, 800);\n      // this.addMapSymbols();\n      // if (this.isMobile()) {\n      //   this.addZoomCtrl();\n      // }\n      // this.addMapLabels();\n      // // setTimeout(() => {\n      // //   this.addMapLabels();\n      // // }, 100);\n      // this.scene.on('zoomend', () => {\n      //   console.log('zoom');\n      //   if (this.markerLayer) {\n      //     this.markerLayer.markers.forEach(item => {\n      //       item.remove();\n      //     });\n      //     this.markerLayer && this.scene.removeMarkerLayer(this.markerLayer);\n      //   }\n      //   this.addMapLabels();\n      // }); // 缩放停止时触发\n\n      // this.scene.on('click', (ev, e) => {\n      //   console.log('click', ev, e);\n      //   ev.originEvent.stopPropagation();\n      //   window.event ? window.event.cancelBubble = true : ev.originEvent.stopPropagation();\n      //   ev.originEvent.preventDefault ? ev.originEvent.preventDefault() : window.event.returnValue = false;\n      // });\n    });\n  }\n\n  fitBoundsMap () {\n    // setTimeout(() => {\n    let xAggressions = this.config.column.aggressions;\n    let yAggressions = this.config.row.aggressions;\n    let latlngs = this.data.map(v => [v[xAggressions[0]], v[yAggressions[0]]]).filter(v => !Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(v[0]) && !Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(v[1]));\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(latlngs)) {\n      let latitudeArr = latlngs.map(item => {\n        return item[0];\n      });\n      let longitudeArr = latlngs.map(item => {\n        return item[1];\n      });\n      this.scene.fitBounds([\n        [Math.min(...longitudeArr), Math.min(...latitudeArr)],\n        [Math.max(...longitudeArr), Math.max(...latitudeArr)]\n      ]);\n    }\n    // }, 300);\n  };\n\n  addMapSymbols () {\n    let tooltip = this.config.tooltipList.map(item => {\n      return item.key;\n    });\n    // let mapZoom = scene.getZoom();\n    let curColors = (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.colors) && this.config.colors[0]) ? this.config.colors[0] : [];\n    let linear_colors = ['#7AC9F5', '#2A5783'];\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(curColors.colorList) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(curColors.colorList)) linear_colors = curColors.colorList;\n    let hasColorRange = true;\n    let minRange;\n    let maxRange;\n    let pattern;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.colorRanges)) {\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.colorRanges[0].check) && (this.config.colorRanges[0].check[0] || this.config.colorRanges[0].check[1])) {\n        minRange = this.config.colorRanges[0].check[0] ? this.config.colorRanges[0].range[0] : this.config.colorRanges[0].val[0];\n        maxRange = this.config.colorRanges[0].check[1] ? this.config.colorRanges[0].range[1] : this.config.colorRanges[0].val[1];\n        pattern = d3.scaleLinear().range(linear_colors).domain([minRange, maxRange]).clamp(true);\n      } else {\n        minRange = this.config.colorRanges[0].check[0] ? this.config.colorRanges[0].range[0] : this.config.colorRanges[0].val[0];\n        maxRange = this.config.colorRanges[0].check[1] ? this.config.colorRanges[0].range[1] : this.config.colorRanges[0].val[1];\n        hasColorRange = false;\n      }\n    } else {\n      hasColorRange = false;\n    }\n\n    let dataOpacity = this.config.dataOpacity ? (this.config.dataOpacity / 100) : 1;\n    this.pointLayer = new L7.PointLayer({\n      name: 'symbol'\n    })\n      .source(this.data, {\n        parser: {\n          // 需要指定数据格式，不然默认的是geojson格式\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude'\n        }\n      })\n      .shape('circle')\n      // .size(sized_feature, [1, 20])\n      .size(this.config.sizeFeature.feature, value => {\n        return this.getSize(value);\n      })\n      .style({\n        opacity: dataOpacity,\n        strokeWidth: 0\n      });\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction[0].feature)) {\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction[0].actions) && this.config.targetAction[0].actions[0].value) {\n        this.pointLayer.style({\n          opacity: 0.2\n        });\n        // let feature = this.config.targetAction[0].feature[0].feature_name;\n        // let featureVal = this.config.targetAction[0].actions[0].value;\n      }\n    }\n    if (this.config.colorFeature && this.config.colorFeature.feature) {\n      // this.pointLayer.color(this.config.colorFeature.feature, linear_colors);\n      this.pointLayer.color(this.config.colorFeature.feature, value => {\n        return this.getColor(value);\n      });\n    } else {\n      this.pointLayer.color('#4284F5');\n    }\n    // if (!hasColorRange) {\n    //   if (this.config.colorFeature && this.config.colorFeature.feature) {\n    //     this.pointLayer.color(this.config.colorFeature.feature, value => {\n    //       return pattern(value);\n    //     });\n    //   } else {\n    //     this.pointLayer.color('#4284F5');\n    //   }\n    // } else {\n    //   this.pointLayer.color(this.config.colorFeature.feature, linear_colors);\n    // }\n    this.scene.addLayer(this.pointLayer);\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction[0].feature)) {\n      let encodeData = this.pointLayer.encodedData;\n      let sourceData = this.pointLayer.sourceOption.data;\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.targetAction[0].actions) && this.config.targetAction[0].actions[0].value) {\n        let feature = this.config.targetAction[0].feature[0].feature_name;\n        let featureVal = this.config.targetAction[0].actions[0].value;\n        let curData, curDataIndex;\n        sourceData.forEach((item, index) => {\n          if (item[feature] === featureVal) {\n            curData = item;\n            curDataIndex = index;\n          };\n        });\n        let curEncodeData = encodeData[curDataIndex];\n        let obj = {};\n        obj.feature = Object.assign(curEncodeData, curData);\n        obj.feature._id = obj.feature.id;\n        this.addClickLabel(obj);\n      }\n    }\n    this.pointLayer.on('click', (ev) => {\n      if (this.scene.getLayerByName('clickLabelLayer')) {\n        this.scene.removeLayer(this.clickLabelLayer);\n      }\n      this.pointLayer.setSelect(ev.featureId);\n      this.pointLayer.style({\n        opacity: 0.2\n      });\n      this.addClickLabel(ev, this.scene, linear_colors);\n      typeof this.config.click === 'function' &&\n        this.config.click(ev.feature);\n    });\n    this.pointLayer.on('unclick', (ev) => {\n      if (this.scene.getLayerByName('clickLabelLayer')) {\n        this.scene.removeLayer(this.clickLabelLayer);\n      }\n      // this.pointLayer.color(this.config.colorFeature.feature, ['#7AC9F5', '#2A5783']);\n      if (this.config.colorFeature && this.config.colorFeature.feature) {\n        // this.pointLayer.color(this.config.colorFeature.feature, linear_colors);\n        this.pointLayer.color(this.config.colorFeature.feature, value => {\n          return this.getColor(value);\n        });\n      } else {\n        this.pointLayer.color('#4284F5');\n      }\n      this.pointLayer.style({\n        opacity: 1\n      });\n      this.pointLayer.setSelect(1000000);\n    });\n    let popupLayer = new L7.Popup({\n      closeButton: false\n    });\n    this.pointLayer.on('mousemove', (ev) => {\n      // if (!config.tooltip_show) return;\n      let curTooltipList = this.config.tooltipList;\n      if (curTooltipList.length === 0) return;\n      let tooltipData = ev.feature;\n      let obj = {};\n      for (const key in tooltipData) {\n        if (tooltip.indexOf(key) >= 0) {\n          obj[key] = tooltipData[key];\n        }\n      };\n      // if (this.config.tooltipFormat) {\n      //   this.config.tooltipFormat.forEach(item => {\n      //     if (item.display === 'none' && obj[item.key]) {\n      //       delete obj[item.key];\n      //     } else {\n      //       if (isEmpty(item.format)) {\n      //         obj.format = {\n      //           selectFormat: 'digit',\n      //           decimal: '',\n      //           negative: '-1',\n      //           unit: '',\n      //           prefix: '',\n      //           suffix: '',\n      //           zone: 'CN',\n      //           useThousandMark: true\n      //         };\n      //       } else {\n      //         obj.format = item.format;\n      //       }\n      //     }\n      //   })\n      // } else {\n      //   obj.format = {\n      //     selectFormat: 'digit',\n      //     decimal: '',\n      //     negative: '-1',\n      //     unit: '',\n      //     prefix: '',\n      //     suffix: '',\n      //     zone: 'CN',\n      //     useThousandMark: true\n      //   };\n      // }\n      // var html = $$.formatTooltipText(obj);\n      let defaultDpr = 1;\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n        defaultDpr = this.config.dpr;\n      }\n      let htmlContent = '';\n      for (const key in obj) {\n        if (this.config.tooltipFormat && this.config.tooltipFormat.length > 0) {\n          let curFormat = this.config.tooltipFormat.filter(item => {\n            return item.key === key;\n          });\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(curFormat) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(curFormat[0]) && curFormat[0].display === 'auto') {\n            // let curTooltipStyle = curTooltipList.filter(item => {\n            //   return item.key === key;\n            // });\n            let curStyle;\n            // if (isArray(curTooltipStyle) && curTooltipStyle[0].text) {\n            //   curStyle = `font-size: ${curTooltipStyle[0].text.fontSize}; color: ${curTooltipStyle[0].text.fontColor}; text-align: ${curTooltipStyle[0].text.align}`;\n            // } else {\n            //   curStyle = `font-size: 12px; color: #424242; text-align: left`;\n            // }\n            if (curFormat[0].text) {\n              curStyle = `font-size: ${curFormat[0].text.fontSize * defaultDpr}px; color: ${curFormat[0].text.fontColor}; text-align: ${curFormat[0].text.align}`;\n            } else {\n              curStyle = `font-size: ${12 * defaultDpr}px; color: #424242; text-align: left`;\n            }\n            let title = curFormat[0].title;\n            let curTextFormat;\n            if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(curFormat[0].format)) {\n              curTextFormat = curFormat[0].format;\n            } else {\n              curTextFormat = {\n                selectFormat: 'digit',\n                decimal: '',\n                negative: '-1',\n                unit: '',\n                prefix: '',\n                suffix: '',\n                zone: 'CN',\n                useThousandMark: true\n              };\n            }\n            htmlContent = htmlContent + `<div style=\"${curStyle}\">${title}: ${this.formatNumberFunction(obj[key], curTextFormat)}</div>`;\n          }\n        } else {\n          let curStyle = `font-size: ${12 * defaultDpr}px; color: #424242; text-align: left;`;\n          obj.format = {\n            selectFormat: 'digit',\n            decimal: '',\n            negative: '-1',\n            unit: '',\n            prefix: '',\n            suffix: '',\n            zone: 'CN',\n            useThousandMark: true\n          };\n          htmlContent = htmlContent + `<div style=\"${curStyle} box-shadow: rgb(174 174 174) 0px 0px 10px;\">${key}: ${this.formatNumberFunction(obj[key], obj.format)}</div>`;\n        }\n        // if (key !== 'format') {\n        //   let curTooltipStyle = curTooltipList.filter(item => {\n        //     return item.key === key;\n        //   });\n        //   let curStyle;\n        //   if (isArray(curTooltipStyle) && curTooltipStyle[0].text) {\n        //     curStyle = `font-size: ${curTooltipStyle[0].text.fontSize}; color: ${curTooltipStyle[0].text.fontColor}; text-align: ${curTooltipStyle[0].text.align}`;\n        //   } else {\n        //     curStyle = `font-size: 12px; color: #424242; text-align: left`;\n        //   }\n        //   htmlContent = htmlContent + `<div style=\"${curStyle}\">${key}: ${this.formatNumberFunction(obj[key], obj.format)}</div>`;\n        // }\n      };\n      if (htmlContent.length > 0) {\n        let html = `<div>${htmlContent}</div>`;\n        popupLayer.setLnglat([ev.lngLat.lng, ev.lngLat.lat])\n          .setHTML(html);\n        this.scene.addPopup(popupLayer);\n      }\n    });\n    this.pointLayer.on('mouseout', (ev) => {\n      popupLayer.remove();\n    });\n  };\n\n  addMapLabels () {\n    if (this.markerLayer) {\n      this.markerLayer = null;\n    }\n    // let labeleFeatures = this.config.labelFeature.map(item => {\n    //   return item.feature;\n    // });\n    let labeleFeatures = this.config.labelFeature;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(labeleFeatures)) return;\n    this.markerLayer = new L7.MarkerLayer();\n    let getMapService = this.scene.getMapService();\n    let longPixelsPerDegree = getMapService.coordinateSystemService.pixelsPerDegree && Math.abs(getMapService.coordinateSystemService.pixelsPerDegree[0]);\n    let latPixelsPerDegree = getMapService.coordinateSystemService.pixelsPerDegree && Math.abs(getMapService.coordinateSystemService.pixelsPerDegree[1]);\n    let symbolLayer = this.scene.getLayerByName('symbol');\n    let symbolCircle = symbolLayer.encodedData;\n    // 优化一下文本标签的显示，在文本标签太多导致重叠等等情况下\n    // 计算两个地方的半径和文本标签的长度之和，在这个范围内有其他标签的话都不显示\n    let noLabel = [];\n    let data = this.data;\n    for (let i = 0; i < data.length; i++) {\n      let v = data[i];\n      let circle = symbolCircle[i];\n      // let nextCircle = symbolCircle[i + 1];\n      let maxTxt = 0;\n      labeleFeatures.forEach((l, j) => {\n        // let txt = format_list[j].formatLabel(v[l])\n        let txt = v[l] + '';\n        maxTxt = txt.length > maxTxt ? txt.length : maxTxt;\n      });\n      let maxTxtLength = maxTxt * 8;\n      if (maxTxt < 3) {\n        maxTxtLength = 30;\n      }\n      if (noLabel.indexOf(i) < 0) {\n        for (let j = i + 1; j < data.length; j++) {\n          let nextCircle = symbolCircle[j];\n          let longLength = longPixelsPerDegree * Math.abs(circle.coordinates[0] - nextCircle.coordinates[0]);\n          let latLength = latPixelsPerDegree * Math.abs(circle.coordinates[1] - nextCircle.coordinates[1]);\n          let circleLength = Math.sqrt(Math.pow(longLength, 2) + Math.pow(latLength, 2));\n          let curDistance = maxTxtLength / 2 + circle.size / 2 + nextCircle.size / 2;\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n            curDistance = curDistance * this.config.dpr;\n          }\n          // if ((maxTxtLength / 2 + circle.size / 2 + nextCircle.size / 2) > circleLength) {\n          if (curDistance > circleLength) { \n            if (noLabel.indexOf(j) < 0) {\n              noLabel.push(j);\n            }\n          }\n        }\n      }\n    }\n    for (let i = 0; i < data.length; i++) {\n      if (noLabel.indexOf(i) < 0) {\n        const divDom = document.createElement('div');\n        divDom.className = 'map-label-text';\n        divDom.style = 'display: flex; flex-direction: column; font-size: 12px; align-items: center;';\n        labeleFeatures.forEach((lf, lid) => {\n          let curLabel;\n          let curStyle = this.getLabelFontStyle(lf);\n          if (this.config.labelStyle && this.config.labelStyle.length > 0) {\n            curLabel = this.config.labelStyle.filter(item => {\n              return item.key === lf;\n            })[0];\n            if (!curLabel) {\n              curLabel = {\n                format: {\n                  check: false,\n                  decimal: 2,\n                  isPercent: false,\n                  negative: -1,\n                  prefix: \"\",\n                  selectFormat: -1,\n                  setFlag: true,\n                  suffix: \"\",\n                  unit: \"\",\n                  useThousandMark: true,\n                  zone: \"¥ 人民币\",\n                }\n              }\n            }\n          } else {\n            curLabel = {\n              format: {\n                check: false,\n                decimal: 2,\n                isPercent: false,\n                negative: -1,\n                prefix: \"\",\n                selectFormat: -1,\n                setFlag: true,\n                suffix: \"\",\n                unit: \"\",\n                useThousandMark: true,\n                zone: \"¥ 人民币\",\n              }\n            }\n          }\n          const pDom = document.createElement('span');\n          // pDom.textContent = format_list[lid].formatLabel(data[i][lf]);\n          pDom.textContent = this.formatNumberFunction(data[i][lf], curLabel.format);\n          pDom.style = curStyle;\n          divDom.appendChild(pDom);\n        });\n        const el = document.createElement('label');\n        el.className = 'labelclass';\n        el.innerHTML = divDom.outerHTML;\n        const marker = new L7.Marker({\n          element: el\n        }).setLnglat({ lng: data[i].longitude, lat: data[i].latitude });\n        this.markerLayer.addMarker(marker);\n      }\n    }\n    this.scene.addMarkerLayer(this.markerLayer);\n  };\n\n  addZoomCtrl () {\n    this.zoomLayer = new L7.Zoom({\n      position: 'topright'\n    });\n    this.scene.addControl(this.zoomLayer);\n  };\n\n  resetData () {\n    this.scene = null;\n    this.clickLabelLayer = null;\n    this.markerLayer = null;\n    this.zoomLayer = null;\n    this.pointLayer = null;\n  };\n\n  getSize (n) {\n    let minRadius = this.config.point.size;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(minRadius) && minRadius < 0.4) {\n      minRadius = 0.4\n    }\n    const maxRadius = minRadius * 8;\n    const midRadius = maxRadius / 3;\n    let data = this.data;\n    let sizeRange = [];\n    let sizeFeature = this.config.sizeFeature.feature;\n    let domain = [];\n    let range = [];\n    if (!Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(sizeFeature)) {\n      // domain = d3.extent(data.map(v => v[sizeFeature]))\n      let featureSizeArr = data.map(v => v[sizeFeature]);\n      domain[0] = Math.min(...featureSizeArr);\n      domain[1] = Math.max(...featureSizeArr);\n      if (!Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(sizeRange[0]) && sizeRange[0] !== null) domain[0] = Number(sizeRange[0]);\n      if (!Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(sizeRange[1]) && sizeRange[1] !== null) domain[1] = Number(sizeRange[1]);\n      if (domain[0] > domain[1]) domain[0] = domain[1];\n      range = [minRadius, maxRadius];\n      if (domain[0] === domain[1]) range = [midRadius, midRadius];\n    } else {\n      range = [midRadius, midRadius];\n    }\n    // $$.userDefined_sizeRange = domain\n    // let scale = d3.scaleLinear().range(range).domain(domain).clamp(true)\n    let curSize;\n    if (domain[1] - domain[0] === 0) {\n      curSize = range[0];\n    } else {\n      curSize = range[0] + ((n - domain[0]) * (range[1] - range[0]) / (domain[1] - domain[0]));\n    }\n\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n      curSize = curSize * this.config.dpr;\n    }\n\n    return curSize;\n    // return function(d) {\n    //   return isDefined(d) ? Math.max(scale(d), 0) : mid_radius;\n    // }\n  };\n\n  getColor (value) {\n    let config = this.config;\n    let mapData = this.data;\n    if (value) {\n      let y_colored = [],\n        colorLinear;\n      let colorRange = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorRanges) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorRanges[0].range) ? config.colorRanges[0].range : [],\n        color_schemes = ['#7AC9F5', '#2A5783'],\n        colors = (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.colors) && this.config.colors[0]) ? this.config.colors[0] : [],\n        colored_type = config.colorFeature.type,\n        colored_feature = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorFeature) ? config.colorFeature.feature : '';\n      let pattern = d3.scaleOrdinal(color_schemes).range(); //d3.schemeSet3, schemeCategory10\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(colors.colorList) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(colors.colorList)) colorLinear = colors.colorList;\n      y_colored = d3.extent((mapData).map((d) => d[colored_feature]));\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\n\n      let min = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[0]) ? y_colored[0] : 0;\n      let max = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[1]) ? y_colored[1] : min;\n\n      // this.userDefined_colorRange = [min, max];\n\n      let linear_colors = color_schemes, count = 0;\n\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(colorLinear) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(colorLinear)) linear_colors = colorLinear\n\n      pattern = d3.scaleLinear().range(linear_colors).domain([min, max]).clamp(true);\n      let color = pattern(value);\n      return color;\n    }\n  }\n\n  isMobile () {\n    if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // 增加一个图层，用来显示点击某个数据时高亮，而其他数据不显示\n  addClickLabel (ev, scene, linear_colors) {\n    // let clickColor = linear_colors[1];\n    let curId = ev.feature._id;\n    let curData = this.pointLayer.encodedData.filter(item => {\n      return item.id === curId;\n    });\n    let curColor = [];\n    for (let i = 0; i <= 3; i++) {\n      if (i === 3) {\n        curColor.push(1);\n      } else {\n        curColor.push(parseInt(225 * curData[0].color[i]));\n      }\n    }\n    curColor = `rgba(${curColor.join(',')})`\n    this.clickLabelLayer = new L7.PointLayer({\n      name: 'clickLabelLayer'\n    })\n      .source(this.data, {\n        parser: {\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude'\n        }\n      })\n      .shape('circle')\n      .size(this.config.sizeFeature.feature, value => {\n        return this.getSize(value);\n      })\n      // .color(this.config.colorFeature.feature, value => {\n      //   if (value === ev.feature[this.config.colorFeature.feature]) {\n      //     return '#2A5783';\n      //   }\n      // })\n      .style({\n        opacity: 1,\n        strokeWidth: 0\n      });\n    if (this.config.colorFeature && this.config.colorFeature.feature) {\n      // this.clickLabelLayer.color(this.config.colorFeature.feature, value => {\n      //   if (value === ev.feature[this.config.colorFeature.feature]) {\n      //     // return '#2A5783';\n      //     return curColor;\n      //   }\n      // });\n      this.clickLabelLayer.color('coordinates', value => {\n        if (value[0] === ev.feature['coordinates'][0] && value[1] === ev.feature['coordinates'][1]) {\n          return curColor;\n        }\n      });\n    } else {\n      // this.clickLabelLayer.color('#4284F5');\n      // this.clickLabelLayer.color(this.config.sizeFeature.feature, value => {\n      //   if (value === ev.feature[this.config.sizeFeature.feature]) {\n      //     return '#4284F5';\n      //   }\n      // });\n      this.clickLabelLayer.color('coordinates', value => {\n        if (value[0] === ev.feature['coordinates'][0] && value[1] === ev.feature['coordinates'][1]) {\n          return '#4284F5';\n        }\n      });\n    }\n    this.scene.addLayer(this.clickLabelLayer);\n  };\n\n  formatNumberFunction (label, format) {\n    let prefixes = {\n      y: 1e-24,\n      z: 1e-21,\n      a: 1e-18,\n      f: 1e-15,\n      p: 1e-12,\n      mu: 1e-6,\n      m: 1e-3,\n      none: 1e-0,\n      K: 1e+3,\n      M: 1e+6,\n      G: 1e+9,\n      T: 1e+12,\n      P: 1e+15,\n      E: 1e+18,\n      Z: 1e+21,\n      Y: 1e+24\n    };\n    let unitChange = {\n      K: 'K 千',\n      M: 'M 百万',\n      G: 'G 十亿',\n      T: 'T 千亿',\n    }\n    let new_label = label\n    let original = false, k_mark = true;\n    \n    if(format.decimal < 0) format.decimal = 0\n    if(format.decimal === '') original = true\n  \n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isNumber\"])(new_label)) {\n      // if(isNaN(new_label)) return ''\n      let format_decimal = `.${format.decimal}`,\n          format_kMark = format.useThousandMark ? ',' : '';\n      if(format_kMark === '') k_mark = false\n  \n      if(format.selectFormat !== 'percent') {\n        //单位换算\n        let splitUnit = format.unit ? format.unit.split(' ')[0] : '';\n        Object.keys(prefixes).forEach(p => {\n          // if(p === format.unit) new_label /= prefixes[p]\n          // let splitUnit = format.unit ? format.unit.split(' ')[0] : '';\n          if(p === format.unit) {\n            new_label /= prefixes[p]\n          } else if (p === splitUnit) {\n            new_label /= prefixes[splitUnit]\n          }\n        })\n        //小数位数\n        new_label = original ? (k_mark ? d3.format(format_kMark)(new_label) : new_label) : \n                               d3.format(`${format_kMark}${format_decimal}f`)(new_label);\n        //负值显示\n        if (format.negative === '(1234)') {\n          format.negative = 0;\n        } else if (format.negative === '1234-') {\n          format.negative = 1;\n        }\n        if(parseFloat(new_label) < 0) {\n          if(format.negative === 0) {\n            new_label = original ? `(${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)})` : \n                                   `(${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))})`\n          } else if(format.negative === 1) {\n            new_label = original ? `${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)}-` : \n                                   `${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))}-`\n          }\n        }\n        \n        new_label += (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(splitUnit) && unitChange[splitUnit]) ? unitChange[splitUnit] : ''\n      } else {\n        new_label *= 100\n        //小数位数\n        let num = original ? (k_mark ? d3.format(`${format_kMark}`)(Math.abs(new_label)) : d3.format('')(Math.abs(new_label))) :\n                             d3.format(`${format_kMark}.${format.decimal}f`)(Math.abs(new_label))\n  \n        if(new_label < 0) {\n          if(format.negative === 0) new_label = `(${num})`\n          else if(format.negative === 1) new_label = `${num}-` \n          else new_label = `-${num}` \n        } else {\n          new_label = num\n        }\n      }\n  \n      //货币\n      if(format.selectFormat === 'currency') {\n        let areaCode = ['', 'CN', 'JP', 'HK', 'US', 'EUR', 'GBP'];\n        let moneyCode = ['', '¥', '￥', 'HK$', '＄', '€', '£'];\n        let zoneObj = {\n          CN: `¥ 人民币`,\n          JP: `￥ 日元`,\n          HK: `HK$ 港元`,\n          US: `＄ 美元`,\n          EUR: `€ 欧元`,\n          GBP: `£ 英镑`\n        };\n        let format_zone = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(format.zone) ? format.zone : '¥ 人民币';\n        for (let item in zoneObj) {\n          if (format_zone === zoneObj[item]) {\n            format_zone = item;\n          }\n        };\n        let prefix = moneyCode[areaCode.indexOf(format_zone.toUpperCase())] || ''\n        new_label = `${prefix}${new_label}`\n      }\n      //前缀后缀\n      new_label = `${format.prefix}${new_label}${format.suffix}`\n    } else {\n      new_label += ''\n    }\n  \n    if(new_label === 'undefined' || new_label === 'NaN') new_label = '' \n  \n    return new_label\n  };\n\n  getLabelFontStyle (curFeature) {\n    let config = this.config;\n    let labelStyle = config.labelStyle;\n    let curLabelStyle;\n    let defaultDpr = 1;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n      defaultDpr = config.dpr;\n    }\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(labelStyle) && labelStyle.length > 0) {\n      curLabelStyle = labelStyle.filter(item => {\n        return item.key === curFeature\n      });\n    }\n    let style;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(curLabelStyle) && curLabelStyle[0] && curLabelStyle[0].text) {\n      style = `font-size: ${curLabelStyle[0].text.fontSize * defaultDpr}px; color: ${curLabelStyle[0].text.fontColor};`;\n    } else {\n      style = `font-size: ${12 * defaultDpr}px; color: #424242;`;\n    }\n    return style;\n  }\n\n/**\n  getColorList() {\n    $$.modifyColorList({\n      colored_type: colored_type,\n      colored_feature: colored_feature,\n      keys: keys\n    })\n  }\n\n  getSizeList() {\n    if(isDefined(sized_feature)) {\n      let range = d3.extent(data.sort((a, b) => a[sized_feature] - b[sized_feature]).map(d => d[sized_feature]))\n      $$.modifySizeList({\n        sizeRange: range,\n        sized_feature: sized_feature\n      })\n    }\n  }\n  */\n  getColorList() {\n    let config = this.config;\n    let obj = {\n      opacity: [],\n      colors: [],\n      patterns: [],\n      schemes: []\n    }\n    config.color = config.color ? config.color : obj;\n    // let colored_feature = config.colorFeature.feature,\n    //   colored_type = config.colorFeature.type,\n    //   keys = [];\n    // let colorLinear = ['#7AC9F5', '#2A5783'];\n    // let curColors = (notEmpty(this.config.colors) && this.config.colors[0]) ? this.config.colors[0] : [];\n    // if(isArray(curColors.colorList) && notEmpty(curColors.colorList)) colorLinear = curColors.colorList;\n    // keys = isDefined(colored_feature)\n    //   ? (this.data.map((d) => d[colored_feature]))\n    //   : [];\n    // keys = Array.from(new Set(keys));\n    // let userDefined_colorRange = [Math.min(...keys), Math.max(...keys)];\n    // if(isEmpty(keys)) return\n\n\n    let y_colored = [];\n    let colorRange = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorRanges) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorRanges[0].range) ? config.colorRanges[0].range : []\n    let colored_feature = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.colorFeature) ? config.colorFeature.feature : undefined; \n    let colored_type = config.colorFeature.type;\n    let keys = [];\n    let colorLinear = ['#7AC9F5', '#2A5783'];\n    let curColors = (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(this.config.colors) && this.config.colors[0]) ? this.config.colors[0] : [];\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(curColors.colorList) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(curColors.colorList)) colorLinear = curColors.colorList;\n    keys = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colored_feature)\n      ? (this.data.map((d) => d[colored_feature]))\n      : [];\n    keys = Array.from(new Set(keys));\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(keys)) return;\n\n    let dataRange;\n    y_colored = d3.extent((this.data).map((d) => d[colored_feature]));\n    dataRange = JSON.parse(JSON.stringify(y_colored));\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\n    let min = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[0]) ? y_colored[0] : 0;\n    let max = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[1]) ? y_colored[1] : min;\n    let userColorRange = [min, max];\n\n\n\n    let list = []\n    let axis_format = d3.format(\".3s\");\n    list = d3.extent(keys).map((d, i) => {\n      let format_val = axis_format(userColorRange[i])\n      return {\n        val: format_val, \n        color: colorLinear[i],\n        unique: format_val,\n        index: i, \n        originalVal: d, \n        rangeType: i > 0 ? 'max' : 'min'\n      }\n    })\n    // if(colored_type === 'linear') {\n    //   list = d3.extent(keys).map((d, i) => {\n    //     let format_val = axis_format(userColorRange[i])\n    //     return {\n    //       val: format_val, \n    //       color: colorLinear[i],\n    //       unique: format_val,\n    //       index: i, \n    //       originalVal: d, \n    //       rangeType: i > 0 ? 'max' : 'min'\n    //     }\n    //   })\n    // } else {\n    //   list = keys.map((d, i) => {\n    //     return {\n    //       val: d, \n    //       color: this.getColor(d), \n    //       fill: isFunction(pattern_function) ? pattern_function(d) : '',\n    //       unique: d,\n    //       index: i, \n    //       className: `mc-element mc-element-${i}`,\n    //     }\n    //   })\n    // }\n    let colorObj = {\n      id: config.bindto,\n      aggr: colored_feature,\n      name: colored_feature,\n      colored_type: colored_type,\n      key: `${colored_feature}`,\n      key_id: '0-0',\n      type: colored_type === 'linear' ? 'linear' : '',\n      showRange: colored_type === 'linear',\n      list: list,\n      opacity: config.dataOpacity || 100,\n      dataRange: dataRange\n    }\n\n    let scheme = config.color.schemes[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(scheme)) {\n      // let colorLinear = ['#7AC9F5', '#2A5783'];\n      let colorSchemes = ['#4284F5', '#03B98C', '#FACC14', '#F5282D', '#8543E0', '#3FAECC', '#3110D0', '#E88F00', '#DE2393', '#91BA38','#99B4BF', '#216A58', '#AB9438', '#F4999B', '#C9BFE1', '#055166', '#1F135A', '#43140A', '#96005A', '#8D8D8D']\n      scheme = colored_type === 'linear' ? colorLinear : colorSchemes\n    }\n\n    let colorList = config.color.colors[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(colorList)) {\n      if(colored_type === 'linear') {\n        colorList = list.map(l => l.color)\n      } else {\n        colorList = {}\n        list.forEach(l => {\n          colorList[l.val] = l.color\n        })\n      }\n    }\n\n    let patternList = config.color.patterns[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(patternList)) {\n      patternList = {}\n      list.forEach(l => {\n        patternList[l.val] = l.fill\n      })\n    }\n\n    colorObj.schemes = scheme\n    colorObj.colors = colorList\n    colorObj.patterns = patternList\n\n    return colorObj;\n    // $$.modifyColorList({\n    //   colored_type: colored_type,\n    //   colored_feature: colored_feature,\n    //   keys: keys,\n    // });\n  }\n};\n\n\n//# sourceURL=webpack://chart/./src/chart/map.js?");

/***/ }),

/***/ "./src/chart/rotatedBase.js":
/*!**********************************!*\
  !*** ./src/chart/rotatedBase.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RotatedBase; });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./src/chart/common.js\");\n/* harmony import */ var _common_layoutUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/layoutUtils */ \"./src/chart/common/layoutUtils.js\");\n/* harmony import */ var _common_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/scale */ \"./src/chart/common/scale.js\");\n/* harmony import */ var _common_axisUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/axisUtil */ \"./src/chart/common/axisUtil.js\");\n/* harmony import */ var _common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/bottomAxisUtils */ \"./src/chart/common/bottomAxisUtils.js\");\n/* harmony import */ var _common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/topAxisUtils */ \"./src/chart/common/topAxisUtils.js\");\n/* harmony import */ var _common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/yAxisDataUtils */ \"./src/chart/common/yAxisDataUtils.js\");\n/* harmony import */ var _common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/yAxisUtils */ \"./src/chart/common/yAxisUtils.js\");\n/* harmony import */ var _common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common/partAxisUtils */ \"./src/chart/common/partAxisUtils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RotatedBase extends _common_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  initShapeWidth () {\r\n    // 计算中间画图区域的宽度\r\n    this.shapeWidth = this.height - (this.leftMaxWidth + this.rightMaxWidth);\r\n    let len = this.xAxisList.length;\r\n    let minWidth = 100; // 在标准跟适应高度模式下，单位最小宽度是300\r\n    switch (this.fitModel) {\r\n      case 'standard':\r\n      case 'fitWidth':\r\n        // 但单位宽度小于300时重新计算画图区域的宽度\r\n        if (this.shapeWidth / len < minWidth) {\r\n          this.shapeWidth = minWidth * len;\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  initHeightConfig () {\r\n    let canvasNum = this.yAxis.length; // 一共有多少个画布\r\n    this.canvasNum = canvasNum;\r\n    if (this.isCombined) {\r\n      // 条状图，画布高度等于宽度\r\n      this.canvasHeight = this.width - 20;\r\n      // 每个画布画图区域等于：画布高度- (底部坐标轴高度 + 顶部坐标轴高度) / 画布个数\r\n      this.shapeHeight = (this.canvasHeight - (this.bottomAxisHeight)) / canvasNum;\r\n    } else {\r\n      // 条状图，画布高度等于宽度\r\n      this.canvasHeight = Math.floor(this.width / canvasNum) - 20;\r\n      this.shapeHeight = this.canvasHeight - (this.bottomAxisHeight); // + this.topAxisHeight);\r\n    }\r\n    // Y轴的高度 = 单个画布的高度 / 单个画布轴的个数\r\n    this.yAxisHeight = this.shapeHeight / this.yAxisNum;\r\n    // debugger;\r\n\r\n    let minHeight = 200; // 单个画布轴的最小高度为300\r\n    switch (this.fitModel) {\r\n      case 'standard':\r\n      case 'fitHeight':\r\n        // 在标准跟适应宽度的模式下，单个画布的轴高度小于300时，重新计算各种高度\r\n        if (this.yAxisHeight < minHeight) {\r\n          this.yAxisHeight = minHeight;\r\n          this.shapeHeight = minHeight * this.yAxisNum;\r\n          if (this.isCombined) {\r\n            this.canvasHeight = (this.shapeHeight * canvasNum) + (this.bottomAxisHeight); // + this.topAxisHeight);\r\n          } else {\r\n            this.canvasHeight = this.shapeHeight + (this.bottomAxisHeight); // + this.topAxisHeight);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  initCanvasContainer (index) {\r\n    // 图表容器\r\n    // let containerColor = filterColor(this.colorList, index);\r\n    this.container = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_1__[\"createRotatedContainer\"])(this.id, this.canvasHeight, index, this.colorList, this.click);\r\n    // 底部坐标轴容器\r\n    this.leftAxis = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_1__[\"createRotatedLeftAxis\"])(this.container, this.leftMaxWidth, this.canvasHeight, index);\r\n    // 中间画图部分容器\r\n    this.middle = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_1__[\"createRotatedMiddle\"])(this.container, this.height, this.leftMaxWidth, this.rightMaxWidth, this.canvasHeight, this.shapeWidth, index);\r\n    this.gridContainer = this.middle.append('g').attr('class', 'grid-container');\r\n    this.barContainer = this.middle.append('g').attr('class', 'bar-container');\r\n    this.labelContainer = this.middle.append('g').attr('class', 'label-container');\r\n    // 顶部坐标轴容器\r\n    this.rightAxis = Object(_common_layoutUtils__WEBPACK_IMPORTED_MODULE_1__[\"createRotatedRightAxis\"])(this.container, this.rightMaxWidth, this.canvasHeight, index);\r\n  };\r\n\r\n  createBottomAxis () {\r\n    this.scaleX = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"scaleBand\"])(this.xAxisList, this.shapeWidth);\r\n    let height = this.bottomAxisHeight;\r\n    let axis = Object(_common_axisUtil__WEBPACK_IMPORTED_MODULE_3__[\"initAxis\"])(this.scaleX, 'bottom', null, null, true);\r\n    let axisInstance = Object(_common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__[\"createBottomAxis\"])(this.middle, axis, height, true);\r\n    let topTitle = Object(_common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__[\"getTopTitle\"])(this.xAxis, this.xAxisPart);\r\n    Object(_common_bottomAxisUtils__WEBPACK_IMPORTED_MODULE_4__[\"setBottomAxisStyle\"])(axisInstance, this.xAxis, this.scaleX.bandwidth(), this.shapeWidth, this.bottomAxisHeight, true, this.leftAxis, this.leftMaxWidth, topTitle);\r\n  };\r\n\r\n  createTopAxis (len) {\r\n    if (!this.xPartList.length) return;\r\n    Object(_common_topAxisUtils__WEBPACK_IMPORTED_MODULE_5__[\"createRotatedTopAxis\"])(this.middle, this.canvasHeight, this.bottomAxisHeight, this.scaleX.bandwidth(), this.xPartList, this.xAxisPart[0]);\r\n  }\r\n\r\n  // 创建Y轴跟画图\r\n  createYAxisCanvas (yAxisChild, index, len) {\r\n    if (this.yPartList.length) {\r\n      // 如果有多Y轴\r\n      this.createPartAxisCanvas(this.yAxisPart[0], yAxisChild, index, len);\r\n      return;\r\n    }\r\n    // 初始化单个画布的Y轴信息\r\n    this.createAxisAndDraw(yAxisChild, index, 0, null, len);\r\n  };\r\n\r\n  // 创建合并坐标轴画布\r\n  createCombined (yAxisChild, index, len) {\r\n    if (!this.yPartList.length) {\r\n      if (index !== 0) {\r\n        Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__[\"drawRotatedBottomLine\"])(this.middle, this.shapeWidth, this.yAxisHeight, this.bottomAxisHeight, index, yAxisChild[0]);\r\n      }\r\n      this.createAxisAndDraw(yAxisChild, index, index, null, len);\r\n    } else {\r\n      this.createPartAxisCanvas(this.yAxisPart[0], yAxisChild, index, len);\r\n    }\r\n  }\r\n\r\n  createPartAxisCanvas (yAxisPartChild, yAxisChild, index, len) {\r\n    let leftPart = this.leftAxis.append('g').attr('class', 'right-part');\r\n    // let { style } = yAxisPartChild.title;\r\n    let start = 0;\r\n    let isLast = false;\r\n    let partList = this.yPartList[index];\r\n    for (let i = 0, partLen = partList.length; i < partLen; i++) {\r\n      if (i > 0) start = start + partList[i - 1].len;\r\n      if (i === partLen - 1) isLast = true;\r\n      this.initRightPart(leftPart, partList[i], 0, start, yAxisPartChild, isLast, yAxisChild, index, partList.length - 1);\r\n    }\r\n  };\r\n\r\n  initRightPart (leftPart, yPartChild, index, start, yAxisPartChild, isLast, yAxisChild, parentIndex, len) {\r\n    let width = this.isMobile ? index * 50 + 50 : index * 40 + 20;\r\n    let yAxisHeight = this.yAxisHeight;\r\n    let shapeHeight = this.shapeHeight;\r\n    if (this.isCombined) {\r\n      yAxisHeight = yAxisHeight * this.canvasNum;\r\n      shapeHeight = this.canvasHeight;\r\n    }\r\n    Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__[\"createRotatedPartTxt\"])(leftPart, yPartChild, yAxisPartChild, yAxisHeight, this.bottomAxisHeight, width, start);\r\n    Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__[\"createRotatedPartLine\"])(leftPart, yPartChild, yAxisHeight, this.bottomAxisHeight, width, this.shapeWidth, start, isLast, yAxisPartChild);\r\n    if (yPartChild.children.length) {\r\n      Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__[\"initRotatedVerLine\"])(leftPart, width, shapeHeight, this.bottomAxisHeight, yAxisPartChild);\r\n      let list = yPartChild.children;\r\n      let childStart = start;\r\n      let childIsLast = false;\r\n      for (let i = 0, len = list.length; i < len; i++) {\r\n        if (i > 0) childStart = childStart + list[i - 1].len;\r\n        if (i === len - 1) childIsLast = true;\r\n        this.initRightPart(leftPart, list[i], index + 1, childStart, yAxisPartChild, childIsLast, yAxisChild, parentIndex, len);\r\n      }\r\n    } else {\r\n      if (this.isCombined) {\r\n        start = start * this.canvasNum + parentIndex;\r\n      }\r\n      if (start !== 0) Object(_common_partAxisUtils__WEBPACK_IMPORTED_MODULE_8__[\"drawRotatedBottomLine\"])(this.middle, this.shapeWidth, this.yAxisHeight, this.bottomAxisHeight, start, yAxisPartChild);\r\n      this.createAxisAndDraw(yAxisChild, parentIndex, start, yPartChild, len);\r\n    }\r\n  };\r\n\r\n  createAxisAndDraw (yAxisChild, index, start, yPartChild, len) {\r\n    let isLast = start === len;\r\n    for (let i = 0, yLen = yAxisChild.length; i < yLen; i++) {\r\n      let position = yAxisChild[i].position;\r\n      let left = 0;\r\n      if (i !== 0) left = yAxisChild[i - 1].key.length;\r\n      let scopeObj = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"getScopeObj\"])(this.scopeList, yAxisChild[i]);\r\n      let maxValue = 0;\r\n      let minValue = 0;\r\n      let counts = 0;\r\n      let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_6__[\"getMaxValue\"])(\r\n        yAxisChild[i],\r\n        this.xAxis.key,\r\n        this.colorList,\r\n        index,\r\n        left,\r\n        [],\r\n        this.xAxisPart,\r\n        this.chartType,\r\n        this.xPartList\r\n      );\r\n      maxValue = max * 1.1;\r\n      minValue = min * 1.1;\r\n      if (scopeObj.select === 3 && scopeObj.range) {\r\n        maxValue = scopeObj.range[1];\r\n        minValue = scopeObj.range[0];\r\n        counts = scopeObj.counts;\r\n      }\r\n      if ((scopeObj.select === 0 || scopeObj.select === 1) && scopeObj.align) {\r\n        let child = yAxisChild[i === 1 ? 0 : 1];\r\n        if (child) {\r\n          let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_6__[\"getMaxValue\"])(\r\n            child,\r\n            this.xAxis.key,\r\n            this.colorList,\r\n            index,\r\n            left,\r\n            [],\r\n            this.xAxisPart,\r\n            this.chartType,\r\n            this.xPartList\r\n          );\r\n          max = max * 1.1;\r\n          min = min * 1.1;\r\n          if ((minValue < 0) || (min < 0)) {\r\n            let max = Math.max(Math.abs(minValue), Math.abs(maxValue));\r\n            maxValue = Math.max(max, maxValue);\r\n            minValue = -maxValue;\r\n          }\r\n        }\r\n        if (scopeObj.zoom !== 1) {\r\n          let zoom = scopeObj.zoom || 1;\r\n          maxValue = maxValue / zoom;\r\n          minValue = minValue / zoom;\r\n          // maxValue = maxValue / zoom;\r\n          // minValue = minValue - (maxValue) / zoom + maxValue;\r\n          // if (maxValue <= 0) {\r\n          //   minValue = minValue / zoom;\r\n          // }\r\n        }\r\n      }\r\n      if (scopeObj.select === 2) {\r\n        let child = yAxisChild[i === 1 ? 0 : 1];\r\n        if (child) {\r\n          let { max, min } = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_6__[\"getMaxValue\"])(\r\n            child,\r\n            this.xAxis.key,\r\n            this.colorList,\r\n            index,\r\n            left,\r\n            [],\r\n            this.xAxisPart,\r\n            this.chartType,\r\n            this.xPartList\r\n          );\r\n          max = max * 1.1;\r\n          min = min * 1.1;\r\n          maxValue = Math.max(maxValue, max);\r\n          minValue = Math.min(minValue, min);\r\n        };\r\n      }\r\n      let { scaleY, scaleY1 } = Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"rotateScaleLinear\"])(minValue, maxValue, this.yAxisHeight, scopeObj.select);\r\n      let axis = Object(_common_axisUtil__WEBPACK_IMPORTED_MODULE_3__[\"initAxis\"])(scaleY, position, this.yAxisHeight, counts, true);\r\n      Object(_common_scale__WEBPACK_IMPORTED_MODULE_2__[\"setScopeList\"])(scaleY1, scopeObj, yAxisChild[i]);\r\n      let width = this[`${position}MaxWidth`]; // 坐标轴容器的宽度\r\n      let translateX = position === 'right' ? 0 : width - 1;\r\n      let bottomAxisHeight = this.bottomAxisHeight + this.yAxisHeight * start;\r\n      Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"createRotatedYGrid\"])(this.gridContainer, axis, position, bottomAxisHeight, this.shapeWidth, yAxisChild[i]);\r\n      let axisInstance = Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"createRotatedYAxis\"])(this[`${position}Axis`], axis, bottomAxisHeight, translateX, this.id);\r\n      let labelWidth = this[`${position}LabelWidth`];\r\n      Object(_common_yAxisUtils__WEBPACK_IMPORTED_MODULE_7__[\"setYAxisStyle\"])(\r\n        axisInstance,\r\n        yAxisChild[i],\r\n        width,\r\n        this.shapeHeight,\r\n        this.leftLabelWidth,\r\n        this[`${position}TitleWidth`],\r\n        this.format,\r\n        labelWidth,\r\n        start,\r\n        true,\r\n        isLast,\r\n        this.yAxisHeight,\r\n        this.isCombined\r\n      );\r\n      this.drawCanvas(yAxisChild, yAxisChild[i], scaleY, i, index, start, yPartChild);\r\n    }\r\n  };\r\n};\r\n\n\n//# sourceURL=webpack://chart/./src/chart/rotatedBase.js?");

/***/ }),

/***/ "./src/chart/shape/barShape.js":
/*!*************************************!*\
  !*** ./src/chart/shape/barShape.js ***!
  \*************************************/
/*! exports provided: drawBarShape, drawStackBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawBarShape\", function() { return drawBarShape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawStackBar\", function() { return drawStackBar; });\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip */ \"./src/chart/shape/tooltip.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/utils */ \"./src/utils/utils.js\");\n/* harmony import */ var _common_dataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/dataUtils */ \"./src/chart/common/dataUtils.js\");\n/* harmony import */ var _common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/shapeUtils */ \"./src/chart/common/shapeUtils.js\");\n/* harmony import */ var _common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/yAxisDataUtils */ \"./src/chart/common/yAxisDataUtils.js\");\n/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./label */ \"./src/chart/shape/label.js\");\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst drawBarShape = (\r\n  parentMiddle,\r\n  middle,\r\n  labelContainer,\r\n  data,\r\n  scaleY,\r\n  bandwidth,\r\n  height,\r\n  topAxisHeight,\r\n  num,\r\n  total,\r\n  key,\r\n  colorList,\r\n  xAxisList,\r\n  xAxis,\r\n  xAxisPart,\r\n  size,\r\n  tooltipList,\r\n  labelsList,\r\n  keyId,\r\n  allData,\r\n  yPartChild,\r\n  format,\r\n  click,\r\n  id,\r\n  shapeWidth,\r\n  yAxisHeight,\r\n  index,\r\n  start\r\n) => {\r\n  let colorObj = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"hasColorFeature\"])(colorList, key, keyId, xAxisPart);\r\n  let isNoPart = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_4__[\"isNoXPart\"])(xAxisPart, xAxis.key, colorObj.feature, yPartChild);\r\n  if (colorObj.type === 'ordinal' && isNoPart) {\r\n    let colorStack = drawStackBar(\r\n      parentMiddle,\r\n      middle,\r\n      labelContainer,\r\n      data,\r\n      scaleY,\r\n      bandwidth,\r\n      height,\r\n      topAxisHeight,\r\n      num,\r\n      total,\r\n      key,\r\n      keyId,\r\n      colorObj,\r\n      xAxisList,\r\n      xAxis,\r\n      size,\r\n      tooltipList,\r\n      labelsList,\r\n      allData,\r\n      click,\r\n      id,\r\n      shapeWidth,\r\n      yAxisHeight,\r\n      index,\r\n      start\r\n    );\r\n    return colorStack;\r\n  }\r\n  if (colorObj.type === 'ordinal') {\r\n    let { colorStack } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_2__[\"drawStackData\"])(JSON.parse(JSON.stringify(data)), colorObj, xAxisList, xAxis, JSON.parse(JSON.stringify(allData)));\r\n    colorObj.list = colorStack;\r\n  }\r\n  if (colorObj.type === 'linear') {\r\n    colorObj.list = Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"setLinearList\"])(colorObj, data, format);\r\n  }\r\n  let barContainer = middle.append('g')\r\n    .attr('transform', `translate(0,${topAxisHeight})`)\r\n    .attr('class', `shape-${keyId}`);\r\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawClipPath\"])(barContainer, shapeWidth, yAxisHeight, index, start, id);\r\n  barContainer.append('g');\r\n  let bar = barContainer.selectAll(`bar_${num}`).data(data);\r\n  let barWidth = (bandwidth * size) / total; // / (total * 2);\r\n  let gap = (bandwidth - barWidth * total) / 2;\r\n  if (barWidth > total * 2) {\r\n    barWidth = barWidth - total * 2;\r\n  }\r\n  bar.enter()\r\n    .append('rect')\r\n    .attr('class', 'bar')\r\n    .attr('x', (d, index) => {\r\n      return (index * bandwidth) + (num * (barWidth + 2)) + gap;\r\n    })\r\n    .attr('y', (d) => {\r\n      if (!d[key]) return scaleY(0);\r\n      return scaleY(Math.max(d[key], 0));\r\n    })\r\n    .attr('opacity', colorObj.opacity / 100 || 1)\r\n    .attr('width', barWidth)\r\n    .attr('height', (d) => {\r\n      if (!d[key]) return 0;\r\n      return Math.abs(scaleY(d[key]) - scaleY(0));\r\n    })\r\n    .attr('fill', function (d) {\r\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"barColor\"])(middle, colorObj, d);\r\n    })\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', (d) => {\r\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"barColor\"])(middle, colorObj, d, true);\r\n    })\r\n    .on('mouseout', (d) => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"hideTooltip\"])();\r\n    })\r\n    .on('mouseenter', (d) => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"showTooltip\"])(d, tooltipList);\r\n    })\r\n    .on('click', function (d, index) {\r\n      parentMiddle.selectAll('.bar').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.label').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-path').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-dot').attr('opacity', 0.2);\r\n      d3.select(this).attr('opacity', 1);\r\n      click(d);\r\n    });\r\n  Object(_label__WEBPACK_IMPORTED_MODULE_5__[\"drawLabel\"])(\r\n    labelContainer,\r\n    data,\r\n    scaleY,\r\n    bandwidth,\r\n    topAxisHeight,\r\n    height,\r\n    size,\r\n    num,\r\n    total,\r\n    key,\r\n    keyId,\r\n    labelsList,\r\n    tooltipList,\r\n    false,\r\n    false,\r\n    click,\r\n    colorObj,\r\n    id,\r\n    shapeWidth,\r\n    yAxisHeight,\r\n    index,\r\n    start\r\n  );\r\n};\r\n\r\nconst drawStackBar = (\r\n  parentMiddle,\r\n  middle,\r\n  labelContainer,\r\n  data,\r\n  scaleY,\r\n  bandwidth,\r\n  height,\r\n  topAxisHeight,\r\n  num,\r\n  total,\r\n  key,\r\n  keyId,\r\n  colorObj,\r\n  xAxisList,\r\n  xAxis,\r\n  size,\r\n  tooltipList,\r\n  labelsList,\r\n  allData,\r\n  click,\r\n  id,\r\n  shapeWidth,\r\n  yAxisHeight,\r\n  index,\r\n  start\r\n) => {\r\n  let { list, colorStack } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_2__[\"drawStackData\"])(data, colorObj, xAxisList, xAxis, allData);\r\n  colorObj.list = colorStack;\r\n  let barWidth = (bandwidth / total) * size;\r\n  let gap = (bandwidth - barWidth * total) / 2;\r\n  let barContainer = middle.append('g')\r\n    .attr('transform', `translate(0,${topAxisHeight})`)\r\n    .attr('class', `shape-${keyId}`);\r\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawClipPath\"])(barContainer, shapeWidth, yAxisHeight, index, start, id);\r\n  barContainer.append('g');\r\n  let groupColor = barContainer.selectAll('group-color')\r\n    .data(list)\r\n    .enter().append('g')\r\n    .attr('class', (d, index) => `group-${index}`);\r\n\r\n  let categoryColor = groupColor.selectAll('category-color')\r\n    .data(d => {\r\n      return d;\r\n    })\r\n    .enter().append('g')\r\n    .attr('class', (d, index) => `category-${index}`);\r\n  categoryColor.append('rect')\r\n    .attr('class', 'bar')\r\n    .attr('x', (d, index) => {\r\n      return (index * bandwidth) + (num * (barWidth + 2)) + gap;\r\n    })\r\n    .attr('y', (d, index) => {\r\n      if (scaleY(d[1]) - scaleY(d[0]) > 0) {\r\n        return scaleY(d[0]);\r\n      } else {\r\n        return scaleY(d[1]);\r\n      }\r\n    })\r\n    .attr('width', barWidth)\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', (d) => {\r\n      let color = '#4284f5';\r\n      if (d.data[colorObj.feature]) {\r\n        color = colorStack[d.data[colorObj.feature]].color;\r\n      }\r\n      return color;\r\n    })\r\n    .attr('fill', (d) => {\r\n      let color = '#4284f5';\r\n      let fillType = 'fill';\r\n      if (d.data[colorObj.feature]) {\r\n        color = colorStack[d.data[colorObj.feature]].color;\r\n        fillType = colorStack[d.data[colorObj.feature]].fillType;\r\n      }\r\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"stackBarColor\"])(middle, fillType, color);\r\n    })\r\n    .attr('opacity', colorObj.opacity / 100 || 1)\r\n    .attr('height', (d) => {\r\n      if (scaleY(d[1]) - scaleY(d[0]) > 0) {\r\n        return Math.max(scaleY(d[1]) - scaleY(d[0]), 0);\r\n      } else {\r\n        return Math.max(scaleY(d[0]) - scaleY(d[1]), 0);\r\n      }\r\n    })\r\n    .on('mouseout', (d) => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"hideTooltip\"])();\r\n    })\r\n    .on('mouseenter', (d) => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"showTooltip\"])(d.data, tooltipList);\r\n    })\r\n    .on('click', function (d, index) {\r\n      parentMiddle.selectAll('.bar').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.label').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-path').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-dot').attr('opacity', 0.2);\r\n      click(d);\r\n      d3.select(this).attr('opacity', 1);\r\n    }, true);\r\n  Object(_label__WEBPACK_IMPORTED_MODULE_5__[\"drawLabel\"])(\r\n    labelContainer,\r\n    list,\r\n    scaleY,\r\n    bandwidth,\r\n    topAxisHeight,\r\n    height,\r\n    size,\r\n    num,\r\n    total,\r\n    key,\r\n    keyId,\r\n    labelsList,\r\n    tooltipList,\r\n    true,\r\n    false,\r\n    click,\r\n    colorObj,\r\n    id,\r\n    shapeWidth,\r\n    yAxisHeight,\r\n    index,\r\n    start\r\n  );\r\n  return colorStack;\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://chart/./src/chart/shape/barShape.js?");

/***/ }),

/***/ "./src/chart/shape/label.js":
/*!**********************************!*\
  !*** ./src/chart/shape/label.js ***!
  \**********************************/
/*! exports provided: drawLabel, drawRotatedLabel, setTxtFormat, filterLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawLabel\", function() { return drawLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawRotatedLabel\", function() { return drawRotatedLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTxtFormat\", function() { return setTxtFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterLabel\", function() { return filterLabel; });\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip */ \"./src/chart/shape/tooltip.js\");\n\r\n\r\n/*\r\ndecimal: \"\", // 小数位数\r\nisPercent: false\r\nnegative: -1\r\nprefix: \"\"\r\nselectFormat: -1\r\nsetFlag: true\r\nsuffix: \"\"\r\nunit: \"\"\r\nuseThousandMark: true // 是否使用千分位\r\nzone: \"¥ 人民币\" 货币格式\r\n*/\r\nconst setTxtFormat = (text, format) => {\r\n  if (!format) return text;\r\n  if (JSON.stringify(format) === '{}') return text;\r\n  if (text === null) return '';\r\n  if (isNaN(text)) return '';\r\n  let {\r\n    decimal,\r\n    negative,\r\n    prefix,\r\n    selectFormat,\r\n    suffix,\r\n    unit,\r\n    useThousandMark,\r\n    zone\r\n  } = format;\r\n  let isOriginal = false;\r\n  if (decimal < 0) decimal = 0;\r\n  if (decimal === '') isOriginal = true;\r\n  let thousandMark = useThousandMark ? ',' : '';\r\n  if (selectFormat !== 'percent') {\r\n    const unitMap = {\r\n      K: 1e+3,\r\n      M: 1e+6,\r\n      G: 1e+9,\r\n      T: 1e+12\r\n    };\r\n    // 单位换算\r\n    if (unit) {\r\n      let unitKey = unit.split(' ')[0] || 1;\r\n      text /= unitMap[unitKey];\r\n    };\r\n    // 负值显示\r\n    if (negative === '(1234)') negative = 0;\r\n    if (negative === '1234-') negative = 1;\r\n    if (parseFloat(text) < 0) {\r\n      if (negative === 0) {\r\n        let textFormat = isOriginal ? d3.format(thousandMark) : d3.format(`${thousandMark}.${decimal}f`);\r\n        text = `(${textFormat(Math.abs(text))})`;\r\n      } else if (negative === 1) {\r\n        let textFormat = isOriginal ? d3.format(thousandMark) : d3.format(`${thousandMark}.${decimal}f`);\r\n        text = `${textFormat(Math.abs(text))}-`;\r\n      } else {\r\n        // 整数\r\n        let textFormat = isOriginal ? d3.format(`${thousandMark}`) : d3.format(`${thousandMark}.${decimal}f`);\r\n        text = textFormat(text);\r\n      }\r\n    } else {\r\n      // 整数\r\n      let textFormat = isOriginal ? d3.format(`${thousandMark}`) : d3.format(`${thousandMark}.${decimal}f`);\r\n      text = textFormat(text);\r\n    }\r\n    text += unit || '';\r\n  } else {\r\n    text *= 100;\r\n    let textFormat = isOriginal ? d3.format(`${thousandMark}`) : d3.format(`${thousandMark}.${decimal}f`);\r\n    let num = textFormat(Math.abs(text));\r\n    if (text < 0) {\r\n      if (negative === 0) text = `(${num})`;\r\n      else if (negative === 1) text = `${num}-`;\r\n      else text = `-${num}`;\r\n    } else {\r\n      text = num;\r\n    }\r\n  }\r\n\r\n  if (selectFormat === 'currency') {\r\n    zone = zone || '';\r\n    let zoneMap = {\r\n      '': '',\r\n      CN: '¥',\r\n      JP: '￥',\r\n      HK: 'HK$',\r\n      US: '＄',\r\n      EUR: '€',\r\n      GBP: '£'\r\n    };\r\n    let prefix = zoneMap[zone];\r\n    if (!prefix) {\r\n      zoneMap = {\r\n        '': '',\r\n        '¥ 人民币': '¥',\r\n        '￥ 日元': '￥',\r\n        'HK$ 港元': 'HK$',\r\n        '＄ 美元': '＄',\r\n        '€ 欧元': '€',\r\n        '£ 英镑': '£'\r\n      };\r\n      prefix = zoneMap[zone];\r\n    }\r\n    text = `${prefix}${text}`;\r\n  }\r\n  return `${prefix}${text}${suffix}`;\r\n};\r\n\r\nconst drawLabel = (\r\n  middle,\r\n  data,\r\n  scaleY,\r\n  bandwidth,\r\n  topAxisHeight,\r\n  height,\r\n  size,\r\n  num,\r\n  total,\r\n  key,\r\n  keyId,\r\n  labelList,\r\n  tooltipList,\r\n  isStack,\r\n  isLine,\r\n  click,\r\n  colorObj,\r\n  id,\r\n  shapeWidth,\r\n  yAxisHeight,\r\n  index,\r\n  start\r\n) => {\r\n  if (!labelList || !labelList.length) return;\r\n  let labelsList = JSON.parse(JSON.stringify(labelList.reverse()));\r\n  let list = labelsList.filter(item => item.key === key && item.display === 'auto' && item.keyId === keyId);\r\n  let labelContainer = middle.append('g')\r\n    .attr('transform', `translate(0,${topAxisHeight})`);\r\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"drawClipPath\"])(labelContainer, shapeWidth, yAxisHeight, index, start, id);\r\n  labelContainer.append('g');\r\n  let label = '';\r\n  let labelTotal = 0;\r\n  data = data.filter(item => item);\r\n  if (isStack) {\r\n    let grouplabel = labelContainer.selectAll('group-label').data(data).enter();\r\n    label = grouplabel.selectAll('category-label')\r\n      .data(d => {\r\n        if (!d) return '';\r\n        return d;\r\n      })\r\n      .enter().append('g')\r\n      .attr('class', (d, index) => `label-${index}`);\r\n    labelTotal = label._groups[0].length;\r\n  } else {\r\n    label = labelContainer.selectAll(`label_${num}`).data(data).enter().append('g');\r\n    labelTotal = label._groups[0].length;\r\n  }\r\n  for (let i = 0, len = list.length; i < len; i++) {\r\n    let { text, format } = list[i];\r\n    let barWidth = (bandwidth / total) * size;\r\n    let gap = (bandwidth - barWidth * total) / 2;\r\n    let labelGroup = label.append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('fill', text.fontColor)\r\n      .attr('font-size', text.fontSize)\r\n      .style('line-height', `${text.lineHeight}`)\r\n      .attr('class', 'label')\r\n      .attr('index', (d, index) => {\r\n        if (isStack) {\r\n          return `${start}-${index}-${num}-${d.data[colorObj.feature]}`;\r\n        }\r\n        if (isLine) {\r\n          return `${start}-${index}-${num}-${d[colorObj.feature || colorObj.key]}`;\r\n        }\r\n        return `${start}-${index}-${num}`;\r\n      })\r\n      .attr('x', (d, index) => {\r\n        return (index * bandwidth) + (num * (barWidth + 2)) + gap + (barWidth / 2);\r\n      })\r\n      .on('mouseout', (d) => {\r\n        Object(_tooltip__WEBPACK_IMPORTED_MODULE_1__[\"hideTooltip\"])();\r\n      })\r\n      .on('mouseenter', (d) => {\r\n        if (d === null) return '';\r\n        Object(_tooltip__WEBPACK_IMPORTED_MODULE_1__[\"showTooltip\"])(isStack ? d.data : d, tooltipList);\r\n      })\r\n      .on('click', function (d, index) {\r\n        if (isStack) {\r\n          click(d.data);\r\n        } else {\r\n          click(d);\r\n        }\r\n      });\r\n    if (isStack) {\r\n      labelGroup.attr('y', d => {\r\n        if (d === null) return '';\r\n        if (isLine) {\r\n          let totalHeight = 20 * len;\r\n          return scaleY(d[1] - Math.max(d[0], 0)) - 12 - totalHeight * i / len;\r\n        } else {\r\n          let totalHeight = 20 * len;\r\n          let height = Math.max(scaleY(d[1]) - scaleY(d[0]), 0);\r\n          if (d[1] > 0) {\r\n            height = Math.max(scaleY(d[0]) - scaleY(d[1]), 0);\r\n            return scaleY(d[1]) + height / 2 + totalHeight * (i) / len;\r\n          }\r\n          return scaleY(d[1]) - height / 2 + totalHeight * (i) / len;\r\n        };\r\n      })\r\n        .text(d => {\r\n          if (d === null) return '';\r\n          return setTxtFormat(d.data[list[i].title], format);\r\n        })\r\n        .attr('fill-opacity', (d) => {\r\n          if (d === null) return 0;\r\n          if (isLine) return 1;\r\n          let height = Math.max(scaleY(d[1]) - scaleY(d[0]), 0);\r\n          if (d[1] > 0) {\r\n            height = Math.max(scaleY(d[0]) - scaleY(d[1]), 0);\r\n          }\r\n          let totalHeight = 20 * len;\r\n          if (height > totalHeight) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n    } else {\r\n      labelGroup.attr('y', d => {\r\n        if (d === null) return '';\r\n        if (!d[key]) return '';\r\n        let y = scaleY(d[key]) - 25 * i - 5;\r\n        if (d[key] < 0) {\r\n          y = scaleY(d[key]) + 25 * i + 20;\r\n        }\r\n        if (isLine) {\r\n          y = scaleY(d[key]) - 25 * i - 15;\r\n        }\r\n        return y;\r\n      })\r\n        .text(function (d, index) {\r\n          if (d === null) return '';\r\n          let text = setTxtFormat(d[list[i].title], format);\r\n          return text;\r\n        })\r\n        .attr('fill-opacity', function (d) {\r\n          return 1;\r\n          // if (d === null) return 0;\r\n          // if (d[key] === null) return 0;\r\n          // if (isLine) return 1;\r\n          // let position = scaleY(d[key]) - 25 * i - 10;\r\n          // if (d[key] < 0) {\r\n          //   position = scaleY(d[key]) + 25 * i + 20;\r\n          // }\r\n          // if (isLine) {\r\n          //   position = scaleY(d[key]) - 25 * i - 15;\r\n          // }\r\n          // if (d[key] > 0) {\r\n          //   let max = scaleY.domain()[1];\r\n          //   if (position < scaleY(max)) {\r\n          //     return scaleY.domain()[1];\r\n          //   }\r\n          // } else {\r\n          //   let min = scaleY.domain()[0];\r\n          //   if (position > scaleY(min)) {\r\n          //     return 0;\r\n          //   }\r\n          // }\r\n          // return 1;\r\n        });\r\n    }\r\n  };\r\n  filterShowLabel(id, labelTotal, bandwidth, false, isLine);\r\n};\r\n\r\nconst drawRotatedLabel = (\r\n  middle,\r\n  data,\r\n  scaleY,\r\n  bandwidth,\r\n  size,\r\n  topAxisHeight,\r\n  height,\r\n  num,\r\n  total,\r\n  key,\r\n  keyId,\r\n  labelList,\r\n  tooltipList,\r\n  isStack,\r\n  click,\r\n  colorObj,\r\n  id,\r\n  shapeWidth,\r\n  yAxisHeight,\r\n  index,\r\n  start\r\n) => {\r\n  if (!labelList || !labelList.length) return;\r\n  let labelsList = JSON.parse(JSON.stringify(labelList.reverse()));\r\n  let barWidth = (bandwidth / total) * size;\r\n  let list = labelsList.filter(item => item.key === key && item.keyId === keyId);\r\n  let labelContainer = middle.append('g').attr('transform', `translate(${topAxisHeight},0)`);\r\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"drawClipPath\"])(labelContainer, yAxisHeight, shapeWidth, index, start, id);\r\n  labelContainer = labelContainer.append('g');\r\n  let label = '';\r\n  let labelTotal = 0;\r\n  if (isStack) {\r\n    let grouplabel = labelContainer.selectAll('group-label').data(data).enter();\r\n    label = grouplabel.selectAll('category-label')\r\n      .data(d => {\r\n        return d;\r\n      })\r\n      .enter().append('g')\r\n      .attr('class', (d, index) => `label-${index}`);\r\n    labelTotal = label._groups[0].length;\r\n  } else {\r\n    label = labelContainer.selectAll(`label_${num}`).data(data).enter().append('g');\r\n    labelTotal = label._groups[0].length;\r\n  }\r\n  let len = list.length;\r\n  for (let i = 0; i < len; i++) {\r\n    let { text, format } = list[i];\r\n    let labelGroup = label.append('text')\r\n      .attr('text-anchor', 'start')\r\n      .attr('fill', text.fontColor)\r\n      .attr('font-size', text.fontSize)\r\n      .attr('class', 'label')\r\n      .attr('index', (d, index) => {\r\n        if (isStack) {\r\n          return `${start}-${index}-${num}-${d.data[colorObj.feature]}`;\r\n        }\r\n        return `${start}-${index}-${num}`;\r\n      })\r\n      .attr('y', (d, index) => {\r\n        let start = index * bandwidth + bandwidth / 4;\r\n        let barStart = barWidth * num;\r\n        let center = barWidth / 2 + 5;\r\n        let position = start + barStart + center + ((i - len / 2)) * 20 + 9;\r\n        return position;\r\n      })\r\n      .on('mouseout', (d) => {\r\n        Object(_tooltip__WEBPACK_IMPORTED_MODULE_1__[\"hideTooltip\"])();\r\n      })\r\n      .on('mouseenter', (d) => {\r\n        Object(_tooltip__WEBPACK_IMPORTED_MODULE_1__[\"showTooltip\"])(isStack ? d.data : d, tooltipList);\r\n      })\r\n      .on('click', function (d, index) {\r\n        if (isStack) {\r\n          click(d.data);\r\n        } else {\r\n          click(d);\r\n        }\r\n      });\r\n    if (isStack) {\r\n      labelGroup.attr('x', (d) => {\r\n        let height = scaleY(d[0]) + (scaleY(d[1]) - scaleY(d[0])) / 2;\r\n        if (d[0] < 0) {\r\n          height = scaleY(d[1]) + (scaleY(d[0]) - scaleY(d[1])) / 2;\r\n        }\r\n        return height;\r\n      }).text(d => {\r\n        let text = setTxtFormat(d.data[list[i].title], format);\r\n        return text;\r\n      }).attr('fill-opacity', (d) => {\r\n        let len = (scaleY(d[1]) - scaleY(d[0])) / 2;\r\n        if (d[1] < 0) {\r\n          len = (scaleY(d[0]) - scaleY(d[1])) / 2;\r\n        }\r\n        let txt = setTxtFormat(d.data[list[i].title], format);\r\n        let txtLen = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtWidth\"])(txt, text.fontSize);\r\n        if (len >= txtLen) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        };\r\n      }).attr('text-anchor', 'middle');\r\n    } else {\r\n      labelGroup.attr('x', (d) => {\r\n        if (!d[key]) return 4;\r\n        let position = scaleY(d[key]) + 4;\r\n        if (d[key] < 0) {\r\n          position = scaleY(d[key]) - 5;\r\n        }\r\n        return position;\r\n      }).attr('fill-opacity', (d) => {\r\n        return 1;\r\n      }).text(d => {\r\n        return setTxtFormat(d[list[i].title], format);\r\n      }).attr('text-anchor', (d) => {\r\n        if (!d[key]) return 'start';\r\n        return d[key] > 0 ? 'start' : 'end';\r\n      });\r\n    };\r\n  };\r\n  filterShowLabel(id, labelTotal, bandwidth, true);\r\n};\r\n\r\nconst filterShowLabel = (id, labelTotal, bandwidth, isRotated, isLine) => {\r\n  let domList = document.querySelector(`#${id}`).querySelectorAll('.label[fill-opacity=\"1\"]');\r\n  domList = [].slice.apply(domList);\r\n  let indexList = [];\r\n  let width = bandwidth * labelTotal;\r\n  for (let i = 0, len = domList.length; i < len; i++) {\r\n    if (!isRotated) {\r\n      let text = domList[i].textContent;\r\n      let fontSize = domList[i].getAttribute('font-size');\r\n      let txtLen = Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_0__[\"getTxtWidth\"])(text, fontSize) / 2;\r\n      let x = +domList[i].getAttribute('x');\r\n      if (x - txtLen < 0 || x + txtLen >= width) {\r\n        domList[i].style.display = 'none';\r\n      };\r\n    }\r\n    if (i === 0) continue;\r\n    if (!mixedLabel(domList[i], domList.slice(0, i))) {\r\n      let index = domList[i].getAttribute('index');\r\n      domList[i].style.display = 'none';\r\n      indexList.push(index);\r\n    };\r\n  }\r\n  indexList = [...new Set(indexList)];\r\n  for (let i = 0, labelLen = indexList.length; i < labelLen; i++) {\r\n    let domList = document.querySelector(`#${id}`).querySelectorAll(`.label[index='${indexList[i]}']`);\r\n    for (let j = 0; j < domList.length; j++) {\r\n      domList[j].style.display = 'none';\r\n    }\r\n  }\r\n  let hideList = document.querySelector(`#${id}`).querySelectorAll('.label[fill-opacity=\"0\"]');\r\n  for (let i = 0; i < hideList.length; i++) {\r\n    let index = hideList[i].getAttribute('index');\r\n    let domList = document.querySelector(`#${id}`).querySelectorAll(`.label[index='${index}']`);\r\n    for (let j = 0; j < domList.length; j++) {\r\n      domList[j].style.display = 'none';\r\n    }\r\n  }\r\n};\r\n\r\nconst mixedLabel = (dom, list) => {\r\n  let rect = dom.getBoundingClientRect();\r\n  if (dom.style.display === 'none') return true;\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (collision(rect, list[i].getBoundingClientRect())) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst collision = (rect, temp) => {\r\n  var ax = rect.left - 1;\r\n  var ay = rect.top - 1;\r\n  var aw = rect.width + 2;\r\n  var ah = rect.height + 2;\r\n  var bx = temp.left - 1;\r\n  var by = temp.top - 1;\r\n  var bw = temp.width + 2;\r\n  var bh = temp.height + 2;\r\n  return (ax + aw > bx && ax < bx + bw && ay + ah > by && ay < by + bh);\r\n};\r\n\r\nconst filterLabel = (id) => {\r\n  let domList = document.querySelector(`#${id}`).querySelectorAll('.label[fill-opacity=\"1\"]');\r\n  let dotList = document.querySelector(`#${id}`).querySelectorAll('.line-dot');\r\n  for (let i = 0, len = domList.length; i < len; i++) {\r\n    if (!mixedLabel(domList[i], dotList)) {\r\n      domList[i].style.display = 'none';\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://chart/./src/chart/shape/label.js?");

/***/ }),

/***/ "./src/chart/shape/lineShape.js":
/*!**************************************!*\
  !*** ./src/chart/shape/lineShape.js ***!
  \**************************************/
/*! exports provided: drawLineShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawLineShape\", function() { return drawLineShape; });\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip */ \"./src/chart/shape/tooltip.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/utils */ \"./src/utils/utils.js\");\n/* harmony import */ var _common_dataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/dataUtils */ \"./src/chart/common/dataUtils.js\");\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./label */ \"./src/chart/shape/label.js\");\n\r\n\r\n\r\n\r\n\r\nconst drawLineShape = (\r\n  parentMiddle,\r\n  middle,\r\n  labelContainer,\r\n  data,\r\n  scaleY,\r\n  bandwidth,\r\n  height,\r\n  topAxisHeight,\r\n  key,\r\n  colorList,\r\n  xAxisList,\r\n  xAxis,\r\n  xAxisPart,\r\n  lineStyle,\r\n  size,\r\n  tooltipList,\r\n  labelsList,\r\n  keyId,\r\n  // partKey,\r\n  allData,\r\n  yPartChild,\r\n  click,\r\n  id,\r\n  shapeWidth,\r\n  yAxisHeight,\r\n  index,\r\n  start\r\n) => {\r\n  let colorObj = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"hasColorFeature\"])(colorList, key, keyId);\r\n  // let isNoPart = isNoXPart(xAxisPart, xAxis.key, colorObj.feature, yPartChild);\r\n  let lineData = JSON.parse(JSON.stringify(data));\r\n  let allLineData = JSON.parse(JSON.stringify(allData));\r\n  let dataList = [];\r\n  if (colorObj.type === 'ordinal') {\r\n    let { list, colorStack } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_2__[\"drawStackLineData\"])(lineData, colorObj, xAxis, xAxisList, xAxisPart, allLineData);\r\n    colorObj.list = colorStack;\r\n    dataList = list;\r\n  } else {\r\n    dataList = [{\r\n      data: data\r\n    }];\r\n  }\r\n  const symbols = {\r\n    circle: d3.symbolCircle,\r\n    cross: d3.symbolCross,\r\n    cross45: d3.symbolCross,\r\n    triangle: d3.symbolTriangle,\r\n    triangle180: d3.symbolTriangle,\r\n    square: d3.symbolSquare,\r\n    star: d3.symbolStar,\r\n    diamond: d3.symbolDiamond,\r\n    wye: d3.symbolWye\r\n  };\r\n  const rotateds = {\r\n    cross45: 45,\r\n    triangle180: 180\r\n  };\r\n  let strokeWidth = 4 * size;\r\n  let arc = d3.symbol().type(symbols[lineStyle]).size(strokeWidth * 25);\r\n  let rotated = rotateds[lineStyle] || 0;\r\n  let valueLine = d3.line()\r\n    .defined((d) => {\r\n      if (!d) return '';\r\n      if (d[key] === null) return '';\r\n      if (isNaN(d[key])) return '';\r\n      return d;\r\n    })\r\n    .x((d) => {\r\n      return bandwidth * d.index + bandwidth / 2;\r\n    })\r\n    .y((d) => {\r\n      return scaleY(isNaN(d[key]) ? null : d[key]);\r\n    });\r\n  for (let i = 0, len = dataList.length; i < len; i++) {\r\n    let lineContainter = middle.append('g').attr('transform', `translate(0,${height})`).attr('class', `shape-${keyId}`);\r\n    Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_3__[\"drawClipPath\"])(lineContainter, shapeWidth, yAxisHeight, index, start, id);\r\n    lineContainter = lineContainter.append('g');\r\n    let data = setData(xAxisPart, dataList[i].data);\r\n    drawLine(lineContainter, valueLine, strokeWidth, data, colorObj, key);\r\n    drawShape(parentMiddle, lineContainter, arc, data, colorObj, bandwidth, key, scaleY, rotated, tooltipList, click);\r\n    Object(_label__WEBPACK_IMPORTED_MODULE_4__[\"drawLabel\"])(\r\n      labelContainer,\r\n      data,\r\n      scaleY,\r\n      bandwidth,\r\n      height,\r\n      topAxisHeight,\r\n      size,\r\n      0,\r\n      1,\r\n      key,\r\n      keyId,\r\n      labelsList,\r\n      tooltipList,\r\n      false,\r\n      true,\r\n      click,\r\n      colorObj,\r\n      id,\r\n      shapeWidth,\r\n      yAxisHeight,\r\n      index,\r\n      start\r\n    );\r\n  };\r\n  Object(_label__WEBPACK_IMPORTED_MODULE_4__[\"filterLabel\"])(id);\r\n};\r\n\r\nconst setData = (xAxisPart, data) => {\r\n  let arr = [];\r\n  if (xAxisPart.length) {\r\n    let parkeyArr = [];\r\n    for (let i = 0; i < xAxisPart.length; i++) {\r\n      parkeyArr.push(xAxisPart[i].key);\r\n    };\r\n    let currentName = setCurrentName(data[0], parkeyArr);\r\n    for (let i = 0; i < data.length; i++) {\r\n      let obj = JSON.parse(JSON.stringify(data[i]));\r\n      if (!currentName) {\r\n        arr.push(null);\r\n        currentName = setCurrentName(data[i], parkeyArr);\r\n      }\r\n      if (currentName !== setCurrentName(data[i], parkeyArr)) {\r\n        arr.push(null);\r\n        currentName = setCurrentName(data[i], parkeyArr);\r\n      }\r\n      obj.index = i;\r\n      arr.push(obj);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < data.length; i++) {\r\n      let obj = data[i];\r\n      obj.index = i;\r\n      arr.push(obj);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nconst setCurrentName = (dataObj, parkey) => {\r\n  let name = '';\r\n  for (let i = 0; i < parkey.length; i++) {\r\n    name = name + dataObj[parkey[i]];\r\n  }\r\n  return name;\r\n};\r\n\r\nconst drawShape = (parentMiddle, lineContainter, arc, data, colorObj, bandwidth, key, scaleY, rotated, tooltipList, click) => {\r\n  let pointer = lineContainter.selectAll('.point-group')\r\n    .data(data.filter(item => item && !isNaN(item[key]) && item[key] !== null))\r\n    .enter()\r\n    .append('g');\r\n\r\n  pointer.append('path')\r\n    .attr('class', 'line-dot')\r\n    .attr('d', arc)\r\n    .attr('transform', (d) => {\r\n      if (!d) return;\r\n      if (isNaN(d[key])) return '';\r\n      if (d[key] === null) return '';\r\n      let x = bandwidth * d.index + bandwidth / 2;\r\n      let y = scaleY(isNaN(d[key]) ? 0 : d[key]);\r\n      return `translate(${x}, ${y}) rotate(${rotated})`;\r\n    })\r\n    .attr('fill', (d) => {\r\n      let color = colorObj.color || '#4284f5';\r\n      if (!d) return color;\r\n      if (d[colorObj.feature]) {\r\n        color = colorObj.list[d[colorObj.feature]].color;\r\n      }\r\n      return color;\r\n    })\r\n    .attr('opacity', colorObj.opacity / 100 || 1)\r\n    .on('mouseenter', (d) => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"showTooltip\"])(d, tooltipList);\r\n    })\r\n    .on('mouseout', () => {\r\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"hideTooltip\"])();\r\n    })\r\n    .on('click', function (d) {\r\n      parentMiddle.selectAll('.bar').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-path').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.line-dot').attr('opacity', 0.2);\r\n      parentMiddle.selectAll('.label').attr('opacity', 0.2);\r\n      d3.select(this).attr('opacity', 1);\r\n      click(d);\r\n    });\r\n};\r\n\r\nconst drawLine = (lineContainter, valueLine, strokeWidth, data, colorObj, key) => {\r\n  let dataObj = data.filter(item => item && !isNaN(item[key]) && item[key] !== null)[0];\r\n  lineContainter.append('path')\r\n    .data(data.filter(item => item && !isNaN(item[key]) && item[key] !== null))\r\n    .attr('class', 'line-path')\r\n    .attr('d', valueLine(data))\r\n    .attr('fill', 'none')\r\n    .attr('stroke-width', strokeWidth)\r\n    .attr('stroke', (d) => {\r\n      let color = colorObj.color || '#4284f5';\r\n      if (!dataObj) return color;\r\n      if (dataObj[colorObj.feature]) {\r\n        let key = dataObj[colorObj.feature];\r\n        color = colorObj.list[key].color;\r\n      }\r\n      return color;\r\n    })\r\n    .attr('opacity', colorObj.opacity / 100 || 1);\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://chart/./src/chart/shape/lineShape.js?");

/***/ }),

/***/ "./src/chart/shape/rotatedShape.js":
/*!*****************************************!*\
  !*** ./src/chart/shape/rotatedShape.js ***!
  \*****************************************/
/*! exports provided: drawBarShape, drawStackBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawBarShape\", function() { return drawBarShape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawStackBar\", function() { return drawStackBar; });\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip */ \"./src/chart/shape/tooltip.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/utils */ \"./src/utils/utils.js\");\n/* harmony import */ var _common_dataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/dataUtils */ \"./src/chart/common/dataUtils.js\");\n/* harmony import */ var _common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/shapeUtils */ \"./src/chart/common/shapeUtils.js\");\n/* harmony import */ var _common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/yAxisDataUtils */ \"./src/chart/common/yAxisDataUtils.js\");\n/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./label */ \"./src/chart/shape/label.js\");\n/* harmony import */ var _common_containerUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/containerUtils */ \"./src/chart/common/containerUtils.js\");\n\n\n // getMaxMinValue\n\n\n\n\nconst drawBarShape = (\n  parentMiddle,\n  middle,\n  labelContainer,\n  data,\n  scaleY,\n  bandwidth,\n  height,\n  topAxisHeight,\n  num,\n  total,\n  key,\n  colorList,\n  xAxisList,\n  xAxis,\n  xAxisPart, // 顶部X轴信息\n  size,\n  tooltipList,\n  labelsList,\n  keyId,\n  allData,\n  yPartChild,\n  format,\n  click,\n  id,\n  shapeWidth,\n  yAxisHeight,\n  index,\n  start\n) => {\n  let colorObj = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"hasColorFeature\"])(colorList, key, keyId);\n  let isNoPart = Object(_common_yAxisDataUtils__WEBPACK_IMPORTED_MODULE_4__[\"isNoXPart\"])(xAxisPart, xAxis.key, colorObj.feature, yPartChild);\n  if (colorObj.type === 'ordinal' && isNoPart) {\n    let colorStack = drawStackBar(\n      parentMiddle,\n      middle,\n      labelContainer,\n      data,\n      scaleY,\n      bandwidth,\n      height,\n      topAxisHeight,\n      num,\n      total,\n      key,\n      keyId,\n      colorObj,\n      xAxisList,\n      xAxis,\n      size,\n      tooltipList,\n      labelsList,\n      allData,\n      click,\n      id,\n      shapeWidth,\n      yAxisHeight,\n      index,\n      start\n    );\n    return colorStack;\n  }\n  if (colorObj.type === 'ordinal') {\n    let { colorStack } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_2__[\"drawStackData\"])(JSON.parse(JSON.stringify(data)), colorObj, xAxisList, xAxis, JSON.parse(JSON.stringify(allData)));\n    colorObj.list = colorStack;\n  }\n  if (colorObj.type === 'linear') {\n    colorObj.list = Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"setLinearList\"])(colorObj, data, format);\n  }\n  let barContainer = middle.append('g')\n    .attr('transform', `translate(${topAxisHeight},${0})`)\n    .attr('class', `shape-${keyId}`);\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawClipPath\"])(barContainer, yAxisHeight, shapeWidth, index, start, id);\n  barContainer = barContainer.append('g');\n  let bar = barContainer.selectAll(`bar_${num}`).data(data);\n  let barWidth = (bandwidth / total) * size; // / (total * 2);\n  let gap = (bandwidth - barWidth * total) / 2;\n  if (barWidth > total * 2) {\n    barWidth = barWidth - total * 2;\n  }\n  bar.enter()\n    .append('rect')\n    .attr('class', 'bar')\n    .attr('y', (d, index) => {\n      return (index * bandwidth) + (num * (barWidth + 2)) + gap;\n    })\n    .attr('x', (d) => {\n      if (!d[key]) return scaleY(0);\n      let keyNum = d[key];\n      if (isNaN(keyNum)) return scaleY(0);\n      if (keyNum > 0) {\n        return scaleY(0);\n      } else {\n        return scaleY(keyNum);\n      }\n    })\n    .attr('opacity', colorObj.opacity / 100 || 1)\n    .attr('width', d => {\n      if (!d[key]) return 0;\n      let keyNum = d[key];\n      if (isNaN(keyNum)) return 0;\n      return Math.abs(scaleY(keyNum) - scaleY(0));\n    })\n    .attr('height', barWidth)\n    .attr('stroke-width', 1)\n    .attr('stroke', (d) => {\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"barColor\"])(middle, colorObj, d, true);\n    })\n    .attr('fill', (d) => {\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"barColor\"])(middle, colorObj, d);\n    })\n    .on('mouseout', (d) => {\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"hideTooltip\"])();\n    })\n    .on('mouseenter', (d) => {\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"showTooltip\"])(d, tooltipList);\n    })\n    .on('click', function (d, index) {\n      parentMiddle.selectAll('.bar').attr('opacity', 0.2);\n      parentMiddle.selectAll('.label').attr('opacity', 0.2);\n      d3.select(this).attr('opacity', 1);\n      click(d);\n    });\n  Object(_label__WEBPACK_IMPORTED_MODULE_5__[\"drawRotatedLabel\"])(\n    labelContainer,\n    data,\n    scaleY,\n    bandwidth,\n    size,\n    topAxisHeight,\n    height,\n    num,\n    total,\n    key,\n    keyId,\n    labelsList,\n    tooltipList,\n    false,\n    click,\n    colorObj,\n    id,\n    shapeWidth,\n    yAxisHeight,\n    index,\n    start\n  );\n};\n\nconst drawStackBar = (\n  parentMiddle,\n  middle,\n  labelContainer,\n  data,\n  scaleY,\n  bandwidth,\n  height,\n  topAxisHeight,\n  num,\n  total,\n  key,\n  keyId,\n  colorObj,\n  xAxisList,\n  xAxis,\n  size,\n  tooltipList,\n  labelsList,\n  allData,\n  click,\n  id,\n  shapeWidth,\n  yAxisHeight,\n  index,\n  start\n) => {\n  let { list, colorStack } = Object(_common_dataUtils__WEBPACK_IMPORTED_MODULE_2__[\"drawStackData\"])(data, colorObj, xAxisList, xAxis, allData);\n  colorObj.list = colorStack;\n  let barWidth = (bandwidth / total) * size; // / (total * 2);\n  let gap = (bandwidth - barWidth * total) / 2;\n  let barContainer = middle.append('g')\n    .attr('transform', `translate(${topAxisHeight}, 0)`)\n    .attr('class', `shape-${keyId}`);\n  Object(_common_containerUtils__WEBPACK_IMPORTED_MODULE_6__[\"drawClipPath\"])(barContainer, yAxisHeight, shapeWidth, index, start, id);\n  barContainer = barContainer.append('g');\n  let groupColor = barContainer.selectAll('group-color')\n    .data(list)\n    .enter().append('g')\n    .attr('class', (d, index) => `group-${index}`);\n\n  let categoryColor = groupColor.selectAll('category-color')\n    .data(d => {\n      return d;\n    })\n    .enter().append('g')\n    .attr('class', (d, index) => `category-${index}`);\n  categoryColor.append('rect')\n    .attr('class', 'bar')\n    .attr('y', (d, index) => {\n      return (index * bandwidth) + (num * (barWidth + 1)) + gap;\n    })\n    .attr('x', (d) => {\n      if (scaleY(d[1]) - scaleY(d[0]) > 0) {\n        return scaleY(d[0]);\n      } else {\n        return scaleY(d[1]);\n      }\n    })\n    .attr('opacity', colorObj.opacity / 100 || 1)\n    .attr('stroke-width', 1)\n    .attr('stroke', (d) => {\n      let color = '#4284f5';\n      if (d.data[colorObj.feature]) {\n        color = colorStack[d.data[colorObj.feature]].color;\n      }\n      return color;\n    })\n    .attr('width', (d) => {\n      if (scaleY(d[1]) - scaleY(d[0]) > 0) {\n        return Math.max(scaleY(d[1]) - scaleY(d[0]), 0);\n      } else {\n        return Math.max(scaleY(d[0]) - scaleY(d[1]), 0);\n      }\n    })\n    .attr('height', barWidth)\n    .attr('fill', (d) => {\n      let color = '#4284f5';\n      let fillType = 'fill';\n      if (d.data[colorObj.feature]) {\n        color = colorStack[d.data[colorObj.feature]].color;\n        fillType = colorStack[d.data[colorObj.feature]].fillType;\n      }\n      return Object(_common_shapeUtils__WEBPACK_IMPORTED_MODULE_3__[\"stackBarColor\"])(middle, fillType, color);\n    })\n    .on('mouseout', (d) => {\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"hideTooltip\"])();\n    })\n    .on('mouseenter', (d) => {\n      Object(_tooltip__WEBPACK_IMPORTED_MODULE_0__[\"showTooltip\"])(d.data, tooltipList);\n    })\n    .on('click', function (d, index) {\n      parentMiddle.selectAll('.bar').attr('opacity', 0.2);\n      parentMiddle.selectAll('.label').attr('opacity', 0.2);\n      d3.select(this).attr('opacity', 1);\n      click(d.data);\n    });\n  Object(_label__WEBPACK_IMPORTED_MODULE_5__[\"drawRotatedLabel\"])(\n    labelContainer,\n    list,\n    scaleY,\n    bandwidth,\n    size,\n    topAxisHeight,\n    height,\n    num,\n    total,\n    key,\n    keyId,\n    labelsList,\n    tooltipList,\n    true,\n    click,\n    colorObj,\n    id,\n    shapeWidth,\n    yAxisHeight,\n    index,\n    start\n  );\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/chart/shape/rotatedShape.js?");

/***/ }),

/***/ "./src/chart/shape/tooltip.js":
/*!************************************!*\
  !*** ./src/chart/shape/tooltip.js ***!
  \************************************/
/*! exports provided: initTooltip, showTooltip, hideTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initTooltip\", function() { return initTooltip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showTooltip\", function() { return showTooltip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hideTooltip\", function() { return hideTooltip; });\n/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./label */ \"./src/chart/shape/label.js\");\n\r\nconst initTooltip = () => {\r\n  let dom = document.querySelector('#tooltipChart');\r\n  if (!dom) {\r\n    dom = document.createElement('div');\r\n    let styleStr1 = 'position: fixed;min-width: 120px;padding:8px;background-color:white;font-size:14px;color:#424242;';\r\n    let styleStr2 = 'border-radius:4px;box-shadow:rgba(0, 0, 0, 0.4) 0px 1px 3px;transfrom:translateX(-50%)';\r\n    dom.id = 'tooltipChart';\r\n    dom.style.cssText = styleStr1 + styleStr2;\r\n    document.body.appendChild(dom);\r\n  }\r\n  return dom;\r\n};\r\n\r\nconst setContent = (dataObj, list) => {\r\n  let content = '';\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].display === 'auto') {\r\n      let { key, text, format, title } = list[i];\r\n      let value = Object(_label__WEBPACK_IMPORTED_MODULE_0__[\"setTxtFormat\"])(dataObj[key], null);\r\n      if (list[i].type !== 'ordinal') {\r\n        value = Object(_label__WEBPACK_IMPORTED_MODULE_0__[\"setTxtFormat\"])(dataObj[key], format);\r\n      }\r\n      if (!value && value !== 0) continue;\r\n      let style = `color:${text.fontColor}; text-align:${text.align}; font-size:${text.fontSize}px`;\r\n      content += `<div style=\"${style}\">\r\n                    <span>${title}：</span><span>${value}</span>\r\n                  </div>`;\r\n    }\r\n  }\r\n  return content;\r\n};\r\n\r\nconst showTooltip = (dataObj, tooltipList) => {\r\n  let clientLeft = d3.event.clientX;\r\n  let clientTop = d3.event.clientY;\r\n  let list = tooltipList.filter(item => item.display === 'auto');\r\n  if (!list.length) return;\r\n  let dom = document.querySelector('#tooltipChart');\r\n  dom.style.display = 'inline-block';\r\n  dom.innerHTML = setContent(dataObj, list);\r\n  let domWidth = dom.clientWidth / 2;\r\n  let domHeight = dom.clientHeight + 10;\r\n  dom.style.left = `${clientLeft - domWidth}px`;\r\n  dom.style.top = `${clientTop - domHeight}px`;\r\n  if (clientTop < domHeight) {\r\n    dom.style.top = `${clientTop + 10}px`;\r\n  };\r\n  if (clientLeft < domWidth) {\r\n    dom.style.left = `${clientLeft}px`;\r\n  };\r\n};\r\n\r\nconst hideTooltip = () => {\r\n  let dom = document.querySelector('#tooltipChart');\r\n  dom.innerHTML = '';\r\n  dom.style.display = 'none';\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://chart/./src/chart/shape/tooltip.js?");

/***/ }),

/***/ "./src/chart/table.js":
/*!****************************!*\
  !*** ./src/chart/table.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Table; });\n/* harmony import */ var _utils_check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/check.js */ \"./src/utils/check.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n/* eslint-disable */\n// import Chart from '../Chart.js';\n\n// import CLASS from '../Classes.js';\n\n\nclass Table {\n  constructor (data, config) {\n    this.data = data;\n    this.config =config;\n    this.userDefined_colorRange = [];\n  };\n  render () {\n    let tableHandle = init.call(this, this.data, this.config);\n    tableHandle.drawTable();\n  }\n\n  getColorList() {\n    let config = this.config;\n    let y_colored = [];\n    let colorRange = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.data.range.color) ? config.data.range.color[0] : []\n    let colored_feature = config.data.colored.feature,\n      colored_type = config.data.colored.type,\n      keys = [];\n    keys = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colored_feature)\n      ? (this.data.map((d) => d[colored_feature]))\n      : [];\n    keys = Array.from(new Set(keys));\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(keys)) return;\n\n    let dataRange;\n\n    y_colored = d3.extent((this.data).map((d) => d[colored_feature]));\n\n    dataRange = JSON.parse(JSON.stringify(y_colored));\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\n    let min = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[0]) ? y_colored[0] : 0;\n    let max = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[1]) ? y_colored[1] : min;\n    let userColorRange = [min, max];\n\n    let list = []\n    let axis_format = d3.format(\".3s\");\n    // dataRange = [axis_format(dataRange[0]), axis_format(dataRange[1])]\n    if(colored_type === 'linear') {\n      list = d3.extent(keys).map((d, i) => {\n        let format_val = axis_format(userColorRange[i])\n        return {\n          val: format_val, \n          color: this.getColor(d),\n          unique: format_val,\n          index: i, \n          originalVal: d, \n          rangeType: i > 0 ? 'max' : 'min'\n        }\n      })\n    } else {\n      list = keys.map((d, i) => {\n        return {\n          val: d, \n          color: this.getColor(d), \n          fill: isFunction(pattern_function) ? pattern_function(d) : '',\n          unique: d,\n          index: i, \n          className: `mc-element mc-element-${i}`,\n        }\n      })\n    }\n    let colorObj = {\n      id: config.bindto,\n      aggr: colored_feature,\n      name: colored_feature,\n      colored_type: colored_type,\n      key: `${colored_feature}`,\n      key_id: '0-0',\n      type: colored_type === 'linear' ? 'linear' : type || '',\n      showRange: colored_type === 'linear',\n      list: list,\n      opacity: config.color.opacity[0] * 100 || 100,\n      dataRange: dataRange\n    }\n\n    let scheme = config.color.schemes[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(scheme)) {\n      let colorLinear = ['#7AC9F5', '#2A5783'];\n      let colorSchemes = ['#4284F5', '#03B98C', '#FACC14', '#F5282D', '#8543E0', '#3FAECC', '#3110D0', '#E88F00', '#DE2393', '#91BA38','#99B4BF', '#216A58', '#AB9438', '#F4999B', '#C9BFE1', '#055166', '#1F135A', '#43140A', '#96005A', '#8D8D8D']\n      scheme = colored_type === 'linear' ? colorLinear : colorSchemes\n    }\n\n    let colorList = config.color.colors[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(colorList)) {\n      if(colored_type === 'linear') {\n        colorList = list.map(l => l.color)\n      } else {\n        colorList = {}\n        list.forEach(l => {\n          colorList[l.val] = l.color\n        })\n      }\n    }\n\n    let patternList = config.color.patterns[0]\n    if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(patternList)) {\n      patternList = {}\n      list.forEach(l => {\n        patternList[l.val] = l.fill\n      })\n    }\n\n    colorObj.schemes = scheme\n    colorObj.colors = colorList\n    colorObj.patterns = patternList\n\n    return colorObj;\n    // $$.modifyColorList({\n    //   colored_type: colored_type,\n    //   colored_feature: colored_feature,\n    //   keys: keys,\n    // });\n  }\n\n  getColor (value) {\n    let config = this.config;\n    let tableData = this.data;\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(value)) {\n      let y_colored = [];\n      let colorRange = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.data.range.color) ? config.data.range.color[0] : [],\n        color_schemes = ['#7AC9F5', '#2A5783'],\n        colors = (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(config.color.colors) && config.color.colors[0]) ? config.color.colors[0] : [],\n        colored_type = config.data.colored.type,\n        colored_feature = config.data.colored.feature;\n      let pattern = d3.scaleOrdinal(color_schemes).range(); //d3.schemeSet3, schemeCategory10\n      y_colored = d3.extent((tableData).map((d) => d[colored_feature]));\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\n\n      let min = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[0]) ? y_colored[0] : 0;\n      let max = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(y_colored[1]) ? y_colored[1] : min;\n\n      this.userDefined_colorRange = [min, max];\n\n      let linear_colors = color_schemes, count = 0;\n\n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(colors) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(colors)) linear_colors = colors\n\n      pattern = d3.scaleLinear().range(linear_colors).domain([min, max]).clamp(true);\n      let color = pattern(value);\n      return color;\n    }\n  }\n}\n\nconst init = function (tableData, tableConfig) {\n  let self = this;\n  const $$ = this;\n  const config = tableConfig;\n  let colored_feature = config.data.colored.feature,\n    colored_type = config.data.colored.type,\n    data = [],\n    keys = [];\n\n  let table_padding = config.table.padding;\n  let table_body = config.table.body;\n  let table_padding_left = table_padding.left,\n      table_padding_right = table_padding.right,\n      table_padding_top = table_padding.top,\n      table_padding_bottom = table_padding.bottom,\n      table_body_width = table_body.width,\n      table_body_height = table_body.height,\n      cellBorderWidth = config.table.inner.width,\n      headBorderWidth = config.table.outter.width,\n      outerBorderColor = config.table.outter.color,\n      innerBorderColor = config.table.inner.color,\n      tableTitle = config.table.title,\n      labelList = config.label.format,\n      labels = config.data.labeled;\n\n  if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(labels)) {\n    const x_aggressions = config.data.column.aggressions\n    const y_aggressions = config.data.row.aggressions\n    labels = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(x_aggressions) ? x_aggressions : Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"notEmpty\"])(y_aggressions) ? y_aggressions : []\n  }\n\n  // let {\n  //   table_padding_left,\n  //   table_padding_right,\n  //   table_padding_top,\n  //   table_padding_bottom,\n  //   table_body_width,\n  //   table_body_height,\n  //   table_title: tableTitle,\n  // } = config;\n  let paddingLeft = Number(table_padding_left),\n    paddingRight = Number(table_padding_right),\n    paddingTop = Number(table_padding_top),\n    paddingBottom = Number(table_padding_bottom);\n  let width = Number(table_body_width) + paddingLeft + paddingRight;\n\n  let height = Number(table_body_height) + paddingTop + paddingBottom;\n  let globalFontsize = 12\n  if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n    height = height * config.dpr;\n    width = width * config.dpr;\n    globalFontsize = globalFontsize * config.dpr;\n  }\n  // $$.color = $$.generateColor();\n\n  let mode = config.table.mode;\n\n  let maxHeight = d3.max(tableTitle, function (d) {\n    return Math.max(Number(d.style['line-height']));\n  });\n\n  let titleKey = config.data.column.categories.join(' / ');\n  let getTitleMatch = tableTitle.find((i) => i.key === titleKey);\n  let titleMatch;\n  if (getTitleMatch) {\n    titleMatch = JSON.parse(JSON.stringify(tableTitle.find((i) => i.key === titleKey)));\n  }\n  // let titleMatch = JSON.parse(JSON.stringify(tableTitle.find((i) => i.key === titleKey)));\n  let titleStyle = {\n\t\talign: 'left',\n    fontSize: globalFontsize,\n    fontColor: '',\n    fontStyle: 'normal',\n    decoration: '',\n    letterSpacing: '',\n    lineHeight: '16.5',\n    display: 'auto'\n    // 'fill': \"#6B6B6B\",\n    // 'font-size': globalFontsize,\n    // 'font-style': \"normal\",\n    // 'letter-spacing': \"0\",\n    // 'line-height': globalFontsize,\n    // 'text-align': \"left\",\n    // 'text-decoration': \"\",\n    // display: 'auto',\n\t};\n  let titleShow = config.data.column.categories.length > 0;\n  if (titleMatch) {\n    titleStyle = titleMatch.style;\n    titleShow = titleMatch.show;\n    titleStyle.color = titleStyle.fill;\n  } else {\n    titleStyle.color = config.font.color;\n  }\n  // titleStyle.lineHeight = Number(titleStyle['line-height']) + 16;\n  if (titleMatch) {\n    titleStyle.lineHeight = Number(titleStyle['line-height']) + 16;\n  } else {\n    titleStyle.lineHeight = Number(titleStyle.lineHeight) + 16;\n  }\n  if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n    titleStyle.padding = 24;\n    if (titleMatch) {\n      titleStyle['font-size'] = titleStyle['font-size'] * config.dpr;\n      titleStyle['line-height'] = Number(titleStyle['line-height'] * config.dpr) + 16;\n    } else {\n      titleStyle['font-size'] = titleStyle.fontSize;\n      titleStyle['line-height'] = Number(titleStyle.lineHeight * config.dpr) + 16;\n    }\n  }\n  let aggShow = false;\n\n  let mobileTooltipTimer = null;\n\n  let drawTable = function () {\n    //获取标签样式\n    // $$.getLabelStyleList();\n\n    var minRowHeight = 24;\n    var currentRowHeight = height;\n    // let formatList = $$.label_format_list;\n    let formatList = [];\n    let tooltipText = config.tooltip.text;\n    let tooltipFormat = config.tooltip.format;\n    let rowAggression = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.row.aggressions)\n      ? Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.labeled)\n        ? []\n        : config.data.labeled\n      : config.data.row.aggressions;\n    let columnAggression = config.data.column.aggressions;\n\n    let aggMatchLen = 0;\n    let singleHeadFlag = false;\n\n    let currentOpacity = '';\n    if (config.targetAction) {\n      currentOpacity = '20%';\n    }\n    // let aggHeadHideLen = columnAggression.filter(i => {\n    //   let match = tableTitle.find(m => m.key === i);\n    //   return match && !match.show\n    // }).length\n    // let hideHeadFlag = aggHeadHideLen === columnAggression.length\n    isAggShow();\n    if (!aggShow) {\n      aggShow = aggMatchLen < rowAggression.length; // 说明会显示\n    }\n    let titleFlag =\n      Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.row.categories) &&\n      Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.column.categories) &&\n      Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.column.aggressions);\n\n    //将列和数据赋给gridOptions\n    let colorFeature = config.data.colored.feature;\n    let start = new Date().getTime();\n    let columns = initColumns();\n    let gridData = initData();\n    // console.log('数据处理时间:', new Date().getTime() - start);\n    // console.log(gridData);\n    // console.log(columns);\n    // let startRender = new Date().getTime();\n    var gridOptions = initConfig();\n\n    // var minRowHeight = 30;\n    // var currentRowHeight;\n    var eGridDiv = document.querySelector(config.bindto);\n    eGridDiv.innerHTML = '';\n    if (!eGridDiv) {\n      return;\n    }\n    let dom = document.querySelectorAll(`.dc-chart`); //  //\n    if (dom.length > 1) {\n      dom = document.getElementById(config.bindto.slice(1));\n    } else {\n      dom = dom[0];\n    }\n    let { background: bgColor, index } = config.table.background;\n\n    let backgroundRgba = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"hexToRgba\"])(bgColor, (config.table.background.opacity || 100) / 100);\n\n    let { cHeight, cWidth } = setWidthHeight();\n    eGridDiv.style.border = headBorderWidth + 'px solid ' + outerBorderColor;\n    eGridDiv.style.height = cHeight - headBorderWidth * 2 + 'px'; // cHeight - headBorderWidth * 2 + 'px';\n    eGridDiv.style.width = cWidth;\n    if (bgColor && bgColor.indexOf('/') > -1) {\n      eGridDiv.style.background = 'inherit';\n    } else {\n      // eGridDiv.style.background = bgColor;\n      eGridDiv.style.background = backgroundRgba;\n      eGridDiv.style.opacity = config.table.background.opacity || 1;\n    }\n\n    eGridDiv.classList.add('ag-theme-balham');\n\n    // document.addEventListener('DOMContentLoaded', function() {\n    //   var eGridDiv = document.querySelector(config.bindto);\n    //   eGridDiv.style.height='700px'\n    //   new agGrid.Grid(eGridDiv, gridOptions);\n    // });\n    let startRender = new Date().getTime();\n    new agGrid.Grid(eGridDiv, gridOptions);\n\n    let currentDom = eGridDiv.parentElement;\n    currentDom.addEventListener('click', (e) => {\n      if (config.targetAction && config.targetAction[0].actionInfo) {\n        delete config.targetAction[0].actionInfo;\n      }\n      let viewportDom = eGridDiv.querySelector('.ag-center-cols-viewport');\n      if (!viewportDom.contains(e.target)) {\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n          let tableBox = document.querySelector(`#${config.id}`);\n          let mobileTooltipDom = tableBox.querySelector('#canvas_over');\n          if (mobileTooltipDom) {\n            tableBox.removeChild(mobileTooltipDom);\n          }\n          typeof config.data_click === 'function' &&\n            config.data_click();\n        }\n        currentOpacity = '';\n        gridOptions.api.redrawRows();\n      }\n    }); \n\n    function isAggShow () {\n      rowAggression.forEach((i) => {\n        let match = tableTitle.find((m) => m.key === i);\n        if (match) {\n          aggMatchLen++;\n        }\n        if (match && match.show) {\n          aggShow = match.show;\n        }\n      });\n    }\n\n    function setWidthHeight () {\n      if (!dom) {\n        return {\n          cWidth: config.size.width,\n          cHeight: config.size.height,\n        };\n      }\n      let cHeight = dom.clientHeight; // - 10;\n      let cWidth = '100%';\n      if (config.size_width) {\n        cWidth = config.size.width + 'px'; //- 10\n      }\n      if (config.size.height) {\n        cHeight = config.size.height; // - 10;\n      }\n      return {\n        cWidth,\n        cHeight\n      };\n    }\n\n    function onFirstDataRendered (params) {\n      if (this.onGridSizeChanged) {\n        this.onGridSizeChanged(params);\n      } else if (onGridSizeChanged) {\n        onGridSizeChanged(params);\n      }\n    }\n\n    function onGridSizeChanged (params) {\n      // get the height of the grid body - this excludes the height of the headers\n      if (!document.getElementsByClassName('ag-body-viewport')[0]) {\n        return;\n      }\n\n      var gridHeight = document.getElementsByClassName('ag-body-viewport')[0]\n        .offsetHeight;\n\n      // get the rendered rows\n      var renderedRows = params.api.getRenderedNodes();\n\n      // if the rendered rows * min height is greater than available height, just just set the height\n      // to the min and let the scrollbar do its thing\n      if (renderedRows.length * minRowHeight >= gridHeight) {\n        if (currentRowHeight !== minRowHeight) {\n          currentRowHeight = minRowHeight;\n          params.api.resetRowHeights();\n        }\n      } else {\n        // set the height of the row to the grid height / number of rows available\n        currentRowHeight = Math.floor(gridHeight / renderedRows.length);\n        params.api.resetRowHeights();\n      }\n    }\n\n    function getCurrentHeight (params) {\n      var gridHeight = document.getElementsByClassName('ag-body-viewport')[0]\n        .offsetHeight;\n      var renderedRows = gridData.length;\n      if (renderedRows * minRowHeight >= gridHeight) {\n        if (currentRowHeight !== minRowHeight) {\n          currentRowHeight = minRowHeight;\n          params.api.resetRowHeights();\n        }\n      } else {\n        // set the height of the row to the grid height / number of rows available\n        currentRowHeight = Math.floor(gridHeight / renderedRows);\n        params.api.resetRowHeights();\n      }\n    }\n\n    function modifyHeight () {\n      gridData.forEach((i) => {\n        i.columnStyle.height = currentRowHeight;\n        i.columnStyle.lineHeight = currentRowHeight + 'px';\n      });\n    }\n    /**\n     * 初始化config\n     */\n    function initConfig() {\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n        maxHeight = maxHeight * config.dpr;\n      }\n      return {\n        columnDefs: columns,\n        // rowData: gridData,\n        onGridReady: function (params) {\n          if (mode === 'fitHeight' || mode === 'full') {\n            getCurrentHeight(params);\n            // 获取currentHeight\n            modifyHeight();\n          }\n\n          let wrap = eGridDiv.querySelector(\n            '.ag-theme-balham .ag-root-wrapper'\n          );\n          if (bgColor && bgColor.indexOf('/') > -1) {\n            wrap.style.background = 'inherit';\n          } else {\n            wrap.style.background = backgroundRgba;\n            wrap.style.opacity = config.table.background.opacity || 1;\n          }\n\n          let headDom = eGridDiv.querySelector('.ag-header');\n          headDom.style.borderColor = innerBorderColor;\n          headDom.style.borderWidth = cellBorderWidth + 'px';\n          headDom.style.borderBottomWidth = cellBorderWidth + 'px';\n          if (titleFlag) {\n            headDom.style.display = 'none !important';\n          }\n          let noGroup = eGridDiv.querySelectorAll(\n            '.ag-header-row .ag-header-group-cell-no-group'\n          );\n          noGroup.forEach((i) => {\n            i.style.borderRight =\n              cellBorderWidth + 'px solid ' + innerBorderColor;\n          });\n\n          let domHeight = cHeight || (dom && dom.clientHeight);\n          let domWidth = dom && dom.clientWidth;\n          let colLength = params.columnApi.getAllDisplayedColumns().length;\n          // + (cellBorderWidth * colLength)\n          let curWidth = colLength * width;\n          let headCount =\n            params.columnApi.columnController.primaryHeaderRowCount;\n          let rowCount = gridData.length;\n          // + (headCount + rowCount) * cellBorderWidth\n          if (currentRowHeight === Infinity) {\n            currentRowHeight = height;\n          }\n          let tempHeight =\n            mode === 'fitHeight' || mode === 'full' ? currentRowHeight : height;\n          let curHeight = singleHeadFlag\n            ? rowCount * tempHeight\n            : headCount * maxHeight + rowCount * tempHeight;\n          let hBorderLen = 1; // (headCount + rowCount - 1) * cellBorderWidth;\n          let lBorderLen = 1; // colLength * cellBorderWidth;\n          if (mode === 'standard' || mode === 'fitHeight') {\n            if (curWidth < domWidth) {\n              if (curHeight < domHeight) {\n                eGridDiv.style.width = curWidth + 'px';\n                eGridDiv.style.height =\n                  curHeight + headBorderWidth * 2 + hBorderLen + 'px';\n                eGridDiv.querySelector('.ag-body-horizontal-scroll') &&\n                  eGridDiv.querySelector('.ag-body-horizontal-scroll').remove();\n              } else {\n                eGridDiv.style.width =\n                  curWidth + 10 + headBorderWidth * 2 + lBorderLen + 'px';\n              }\n            } else {\n              eGridDiv.style.width = '100%';\n              if (curHeight < domHeight) {\n                eGridDiv.style.height =\n                  curHeight + 10 + headBorderWidth * 2 + hBorderLen + 'px'; // 11\n              }\n            }\n          }\n          // if (mode === 'standard' || mode === 'fitHeight') {\n          //   if (curWidth < domWidth) {\n          //     eGridDiv.style.width = curWidth + 10 + 'px'\n          //   } else {\n          //     eGridDiv.style.width = '100%'\n          //     //eGridDiv.style.height = config.size_height + 6 + 'px'\n          //   }\n          // }\n          // mode === 'standard' ||\n          if (mode === 'fitWidth') {\n            if (curHeight < domHeight) {\n              if (curWidth > domWidth) {\n                eGridDiv.style.height =\n                  curHeight + headBorderWidth * 2 + +lBorderLen + 'px'; // 10\n              } else {\n                eGridDiv.style.height =\n                  curHeight + headBorderWidth * 2 + hBorderLen + 'px'; // 1\n              }\n            }\n          }\n          if (mode === 'full' || mode === 'fitWidth') {\n            if (\n              curHeight >\n              domHeight - rowCount * cellBorderWidth - headBorderWidth * 2\n            ) {\n              eGridDiv.style.width = 'calc(100% - 10px)';\n              // eGridDiv.style.width =\n              //   config.size_width + headBorderWidth * 2 + lBorderLen + 'px';\n            } else {\n              eGridDiv.style.width = '100%';\n              // eGridDiv.style.width =\n              //   config.size_width + headBorderWidth * 2 + lBorderLen - 10 + 'px';\n              if (mode === 'full') {\n                eGridDiv.style.height =\n                  curHeight +\n                  (rowCount * cellBorderWidth) / 2 -\n                  cellBorderWidth + 1 +\n                  headBorderWidth * 2 +\n                  'px';\n              }\n\n              eGridDiv.querySelector('.ag-body-horizontal-scroll') &&\n                eGridDiv.querySelector('.ag-body-horizontal-scroll').remove();\n            }\n          }\n          if (mode === 'full' || mode === 'fitWidth') {\n            gridOptions.api.sizeColumnsToFit(); // 调整表格大小自适应\n            if (\n              curHeight >\n              domHeight - rowCount * cellBorderWidth - headBorderWidth * 2\n            ) {\n              eGridDiv.style.width = '100%';\n            }\n          }\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n            let colsClass = eGridDiv.querySelector('.ag-center-cols-viewport').getAttribute('class') + ' ' + 'ag-center-mobile-cols-viewport';\n            eGridDiv.querySelector('.ag-center-cols-viewport').setAttribute('class', colsClass);\n            // eGridDiv.querySelector('.ag-center-cols-viewport').style.overflow = 'auto !important';\n          }\n\n          gridOptions.api.setRowData(gridData);\n          // console.log('数据加载时间:', new Date().getTime() - startRender);\n        },\n        onFirstDataRendered: onFirstDataRendered,\n        onGridSizeChanged: onGridSizeChanged,\n        defaultColDef: {\n          editable: false, // 单元表格是否可编辑\n          enableRowGroup: true,\n          enablePivot: true,\n          enableValue: true,\n          color: config['font-color'],\n          width: width,\n          height: 30,\n          'padding-left': table_padding_left,\n          'padding-right': table_padding_right + 4,\n          'padding-top': table_padding_top,\n          'padding-bottom': table_padding_bottom,\n          suppressMovable: true\n        },\n        suppressCellSelection: true,\n        cellClass: 'no-border',\n        headerHeight: titleFlag ? 0 : maxHeight,\n        suppressRowTransform: true,\n        suppressDragLeaveHidesColumns: true,\n        tooltipShowDelay: 0,\n        components: {\n          showCellRenderer: createShowCellRenderer(),\n          customTooltip: createTooltip(),\n          agColumnHeader: createCustomHeader()\n        },\n        getRowStyle: function (params) {\n          let style = {\n            background: 'rgba(255, 255, 255, 0.3)'\n          };\n          if (params.node.rowIndex % 2 === 0) {\n            style.background = 'rgba(255, 255, 255, 0.1)';\n          }\n          return style;\n        },\n        getRowHeight: function (params) {\n          let tempHeight = height;\n          tempHeight =\n            (params.data.columnStyle &&\n              Number(params.data.columnStyle.height)) ||\n            30;\n          if (mode === 'full' || mode === 'fitHeight') {\n            return currentRowHeight || tempHeight;\n          }\n          return tempHeight;\n        },\n        onBodyScroll: function (params) {\n          let { direction } = params;\n          if (direction === 'horizontal') {\n            let noGroup = eGridDiv.querySelectorAll(\n              '.ag-header-row .ag-header-group-cell-no-group'\n            );\n            noGroup.forEach((i) => {\n              i.style.borderRight =\n                cellBorderWidth + 'px solid ' + innerBorderColor;\n            });\n            gridOptions.api.checkGridSize();\n            gridOptions.api.doLayout();\n          }\n        }\n      };\n    }\n\n    /**\n     * 初始化data\n     */\n    function initData () {\n      let resGridData = [];\n      let resGridData1 = [];\n      let rowCategory = config.data.row.categories;\n      // 先考虑categories不存在\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(rowCategory)) {\n        // 行数据的第一列值就是rowAggression\n        let curAgg = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(rowAggression) ? columnAggression : rowAggression;\n        if (curAgg.length === 0) {\n          return resGridData;\n        }\n        let obj1 = {};\n        for (let i = 0; i < curAgg.length; i++) {\n          let agg = curAgg[i];\n          let obj = {};\n          let matchAgg = tableTitle.find((m) => m.key === agg);\n          if (!matchAgg) {\n            obj.data_row_aggressions = agg;\n          } else if (matchAgg && matchAgg.show) {\n            obj.data_row_aggressions = matchAgg.title;\n          }\n\n          obj.columnStyle = returnColumnStyle(agg);\n          obj1.columnStyle = obj.columnStyle;\n          let match = formatList.find((i) => i.label_name === agg);\n          tableData.map((row) => {\n            if (row.hasOwnProperty(agg)) {\n              Object.assign(obj, returnValue(row, agg, match));\n              Object.assign(obj1, returnValue(row, agg, match));\n            }\n          });\n          resGridData.push(obj);\n        }\n        resGridData1.push(obj1);\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(rowAggression)) {\n          return resGridData1;\n        }\n      } else {\n        resGridData = getGridData(rowCategory);\n      }\n\n      return resGridData;\n    }\n\n    function returnColProp (i) {\n      let prop = '';\n      config.data.column.categories.forEach((c) => {\n        prop += i[c] + '-';\n      });\n      if (prop) {\n        prop = prop.substr(0, prop.length - 1);\n      }\n      return prop;\n    }\n\n    function returnColumnStyle (agg) {\n      let match = formatList.find((i) => i.label_name === agg);\n      let aggressionsList = config.data.row.aggressions.length > 0 \n                              ? config.data.row.aggressions\n                                : config.data.column.aggressions.length > 0\n                                  ? config.data.column.aggressions\n                                    : [];\n      let tableLabel = (config.data.labeled && config.data.labeled.length > 0) ? config.data.labeled : aggressionsList;\n      let aggIndex = tableLabel.indexOf(agg);\n      let style = {\n        align: 'left',\n        fontSize: 12,\n        fontColor: '#6b6b6b',\n        fontStyle: 'normal',\n        decoration: '',\n        letterSpacing: '',\n        lineHeight: '24'\n      };\n      let styleList;\n      if (config.label.text && config.label.text.length > 0 && config.label.text[0].list && config.label.text[0].list.length > 0) {\n        // style = config.label.text[0].list[0].format\n        styleList = config.label.text[0].list;\n      }\n      let curStyle = (aggIndex < 0 || !styleList) ? null : styleList[aggIndex];\n      if (curStyle) {\n        style = curStyle.format;\n      }\n      if (match) {\n        style = match.initLabelText.format;\n      }\n      let curDpr = 1;\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n        curDpr = config.dpr;\n      }\n      let columnStyle = {\n        textDecoration: style.decoration,\n        color: style.setFlag ? style.fontColor : config.font.color,\n        fontSize: (style.fontSize * curDpr) + 'px',\n        fontStyle: style.fontStyle,\n        letterSpacing: style.letterSpacing + 'px',\n        paddingLeft: paddingLeft + 'px',\n        paddingBottom: paddingBottom + 'px',\n        paddingTop: paddingTop + 'px',\n        paddingRight: paddingRight + 4 + 'px',\n        // lineHeight: Number(style.lineHeight) + paddingBottom + paddingTop + 'px',\n        textAlign: style.align\n        // height: Number(style.lineHeight) + paddingBottom + paddingTop\n      };\n\n      if (mode === 'full' || mode === 'fitHeight') {\n        if (currentRowHeight) {\n          columnStyle.height = currentRowHeight;\n          columnStyle.lineHeight = currentRowHeight + 'px';\n        }\n      } else {\n        columnStyle.height =\n          Number(style.lineHeight) + paddingBottom + paddingTop;\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n          columnStyle.height = columnStyle.height * config.dpr;\n        }\n        if (paddingBottom === 0 && paddingTop === 0) {\n          columnStyle.lineHeight = columnStyle.height + 'px';\n        }\n      }\n      return columnStyle;\n    }\n\n    function returnValue (i, agg, match) {\n      let obj = {};\n      let colProp = returnColProp(i);\n      if (columnAggression.length > 0) {\n        colProp = colProp.length > 0 ? colProp + '-' + agg : agg;\n      }\n      let columnProp = colProp || 'singleHead';\n      // 当前两个特征一样，一个添加了一些下列的特殊字符，这样过滤之后就一样了，导致表格的数据对应不上；如female和fe male；\n      // columnProp = columnProp\n      //   .replace(/,/g, '')\n      //   .replace(/\\(/g, '')\n      //   .replace(/\\)/g, '')\n      //   .replace(/\\s+/g, '')\n      //   .replace(/\\./, '');\n      obj[columnProp] = {};\n      // obj[columnProp].value =\n      //   i[agg] || i[agg] === 0\n      //     ? match\n      //       ? match.formatLabel(i[agg])\n      //       : i[agg]\n      //     : '';\n      let curFormat = {\n        selectFormat: 'digit',\n        decimal: '',\n        negative: '-1',\n        unit: '',\n        prefix: '',\n        suffix: '',\n        zone: 'CN',\n        useThousandMark: true\n      };\n      if (agg) {\n        let aggIndex = labels.indexOf(agg);\n        labelList.forEach(l => {\n          if(!l || !l.list) return\n          let temp = l.list[aggIndex]\n          if(temp) {\n            if(temp.format) {\n              curFormat = temp.format\n            }\n          } else {\n            //l.list[label_index] = format\n          }\n        })\n      }\n      obj[columnProp].value = i[agg] || i[agg] === 0 ? formatNumberFunction(i[agg], curFormat) : '';\n      if (colorFeature) {\n        obj[columnProp].labelValue = i[colorFeature];\n      } else {\n        obj[columnProp].labelValue = i[agg];\n      }\n\n      obj[columnProp].label = [];\n      obj[columnProp].columnStyle = returnColumnStyle(agg);\n\n      let tooltipObj = JSON.parse(JSON.stringify(tooltipText));\n      for (const key in i) {\n        if (key === 'MC-HIDDEN-KEY') {\n          continue;\n        }\n        if (i.hasOwnProperty(key)) {\n          let flag = !!tooltipObj[key];\n          let textFormat = {\n            align: 'left',\n            fontSize: globalFontsize,\n            fontColor: '',\n            fontStyle: 'normal',\n            decoration: '',\n            letterSpacing: '',\n            lineHeight: '16.5',\n            display: 'auto'\n          };\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])(0)) {\n            textFormat = {\n              align: 'left',\n              fontSize: globalFontsize,\n              fontColor: '',\n              fontStyle: 'normal',\n              decoration: '',\n              letterSpacing: '',\n              lineHeight: '54',\n              display: 'auto'\n            };\n            if (tooltipObj[key] && tooltipObj[key].fontSize) {\n              tooltipObj[key].fontSize = tooltipObj[key].fontSize * config.dpr;\n            }\n            if (tooltipObj[key] && tooltipObj[key].lineHeight) {\n              tooltipObj[key].lineHeight = tooltipObj[key].lineHeight * config.dpr;\n            }\n          }\n          const ele = flag ? tooltipObj[key] : textFormat;\n          if (rowAggression.indexOf(key) > -1 && agg !== key) {\n            continue;\n          }\n          let labelObj = {};\n          labelObj.tooltipFormat = {};\n          labelObj.name = flag ? tooltipObj[key].title : key;\n          labelObj.value = i[key];\n          labelObj.style = ele;\n          labelObj.display = ele.display ? ele.display : 'auto';\n          let tableNumFormat = {\n            selectFormat: 'digit',\n            decimal: '',\n            negative: '-1',\n            unit: '',\n            prefix: '',\n            suffix: '',\n            zone: 'CN',\n            useThousandMark: true\n          };\n          let format = flag ? tooltipFormat[key] : tableNumFormat;\n          Object.assign(labelObj.tooltipFormat, format);\n          if (flag) {\n            // ele.display !== 'none' &&\n            if (rowAggression.indexOf(key) === -1) {\n              obj[columnProp].label.push(labelObj);\n            } else if (key === agg) {\n              // ele.display !== 'none' &&\n              obj[columnProp].label.push(labelObj);\n            }\n          } else {\n            obj[columnProp].label.push(labelObj);\n          }\n        }\n      }\n      return obj;\n    }\n\n    function getGridData (rowCategory) {\n      let resData = [];\n\n      let catData = getColumn(rowCategory);\n      let catArr = [];\n      let catReverse = JSON.parse(JSON.stringify(rowCategory)).reverse();\n      // 计算出span\n      let spanObj = {};\n      let tempData = [];\n      getSpanProcess(catData, spanObj);\n      let test = JSON.parse(JSON.stringify(spanObj));\n      // console.log(test);\n\n      function getSpanProcess (curData, obj) {\n        curData.map((curRow) => {\n          let key = curRow.parentKey\n            ? curRow.parentKey + '-' + curRow.key\n            : curRow.key;\n          key = key\n            .replace(/,/g, '')\n            .replace(/\\(/g, '')\n            .replace(/\\)/g, '')\n            .replace(/\\s+/g, '')\n            .replace(/\\./, '');\n          curRow.values.map((row, idx) => {\n            let arr = [];\n            if (curRow.values[0].key) {\n              getSpan(curRow.values, arr, obj);\n              obj[key] = {};\n              obj[key].total = arr.reduce((prev, curr) => {\n                return prev + curr;\n              });\n              obj[key].len = obj[key].total;\n            }\n            if (row.key) {\n              let parentKey = key;\n              row.parentKey = parentKey;\n              tempData.push(row);\n              if (idx === curRow.values.length - 1) {\n                let tempChildData = JSON.parse(JSON.stringify(tempData));\n                tempData = [];\n                getSpanProcess(tempChildData, obj);\n              }\n            } else if (curRow.values) {\n              obj[key] = {};\n              obj[key].total = curRow.values.length;\n              obj[key].len = curRow.values.length;\n            }\n          });\n        });\n      }\n      // 最终返回count\n      function getSpan (curData, arr, obj) {\n        curData.map((row) => {\n          if (row.values && row.values[0].key) {\n            getSpan(row.values, arr, obj);\n          } else {\n            // 最后的一个cat\n            if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(rowAggression)) {\n              arr.push(1);\n            } else {\n              arr.push(rowAggression.length ? rowAggression.length : 1);\n            }\n          }\n        });\n      }\n\n      function findSpanByCat (catArr, catName, idx, deduceFlag) {\n        idx = catArr.length - idx - 1;\n        let curCatArr = JSON.parse(JSON.stringify(catArr));\n        curCatArr.reverse();\n        // idx = curCatArr.indexOf(catName)\n        let str = curCatArr.slice(0, idx + 1).join('-');\n        if (deduceFlag) {\n          spanObj[str] ? (spanObj[str].len > 1 ? spanObj[str].len-- : 1) : 1;\n        }\n        return spanObj[str] ? spanObj[str] : 1;\n      }\n\n      function gridDataProcess (rowData) {\n        rowData.map((row, rowIdx) => {\n          // 如果存在，说明\n          if (row.values[0].key) {\n            // 跨行显示\n            catArr.unshift(row.key);\n            gridDataProcess(row.values);\n            catArr.shift();\n          } else {\n            catArr.unshift(row.key);\n            // 最后的一个cat\n            if (columnAggression.length > 0) {\n              // let len = 1\n              let deepCatArr = JSON.parse(JSON.stringify(catArr));\n              let obj = {};\n              catReverse.map((rowCat, idx) => {\n                obj[rowCat] = {};\n                obj[rowCat].value = deepCatArr[idx];\n                let { len, total } = findSpanByCat(\n                  deepCatArr,\n                  deepCatArr[idx],\n                  idx\n                );\n                if (idx === 0) {\n                  obj[rowCat].rowSpan = 1;\n                  obj[rowCat].rowLen = 1;\n                } else {\n                  obj[rowCat].rowLen = total;\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\n                  findSpanByCat(deepCatArr, deepCatArr[idx], idx, true);\n                }\n                if (rowIdx % total !== 0) {\n                  obj[rowCat].grpSpan = true;\n                }\n                columnAggression.map((agg) => {\n                  obj.columnStyle = returnColumnStyle(agg);\n                  let match = formatList.find((i) => i.label_name === agg);\n                  row.values.forEach((i) => {\n                    // let key = i['MC-HIDDEN-KEY'];\n                    // let propArr = key.split(CLASS.join_factor);\n                    if (i.hasOwnProperty(agg)) {\n                      Object.assign(obj, returnValue(i, agg, match));\n                    }\n                  });\n                });\n                if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n                  obj[rowCat].columnStyle = {\n                    fontSize: `${12 * config.dpr}px`,\n                    lineHeight: `${24 * config.dpr}px`\n                  };\n                }\n              });\n              resData.push(obj);\n            } else if (rowAggression.length > 0) {\n              rowAggression.map((agg, aggIdx) => {\n                let obj = {};\n                let len = 1;\n                let deepCatArr = JSON.parse(JSON.stringify(catArr));\n                let matchAgg = tableTitle.find((m) => m.key === agg);\n                catReverse.map((rowCat, idx) => {\n                  obj[rowCat] = {};\n                  obj[rowCat].value = deepCatArr[idx];\n                  let lenObj = findSpanByCat(deepCatArr, deepCatArr[idx], idx);\n                  if (idx === 0) {\n                    len = rowAggression.length ? rowAggression.length : 1;\n                    if (aggIdx !== 0) {\n                      // len = len - ((rowIdx + 1) * rowAggression.length - 1)\n                      len = len - aggIdx;\n                    }\n                    // obj[rowCat].rowLen = 1;\n                    obj[rowCat].rowLen = rowAggression.length;\n                  } else {\n                    len = lenObj.len;\n                    obj[rowCat].rowLen = lenObj.total;\n                  }\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\n                  if (\n                    (rowIdx *\n                      (rowAggression.length ? rowAggression.length : 1)) %\n                      (lenObj.total || 1) ===\n                    0\n                  ) {\n                    if (aggIdx !== 0) {\n                      obj[rowCat].grpSpan = true;\n                    }\n                  } else {\n                    obj[rowCat].grpSpan = true;\n                  }\n                  if (idx !== 0) {\n                    len = findSpanByCat(deepCatArr, deepCatArr[idx], idx, true)\n                      .len;\n                  }\n                  if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n                    obj[rowCat].columnStyle = {\n                      fontSize: `${12 * config.dpr}px`,\n                      lineHeight: `${24 * config.dpr}px`\n                    };\n                  }\n                });\n                obj.columnStyle = returnColumnStyle(agg);\n                let match = formatList.find((i) => i.label_name === agg);\n                row.values.forEach((i) => {\n                  obj.data_row_aggressions = matchAgg ? matchAgg.title : agg;\n                  // let key = i['MC-HIDDEN-KEY'];\n                  // let propArr = key.split('MC-SEPERATE-WORD');\n                  // if (i.hasOwnProperty(agg)) {\n                  //   if (\n                  //     (propArr.length > 1 &&\n                  //       propArr[propArr.length - 1] === agg) ||\n                  //     isEmpty(config.data_row_aggressions)\n                  //   ) {\n                  //     Object.assign(obj, returnValue(i, agg, match));\n                  //   }\n                  // }\n                  if (i.hasOwnProperty(agg)) {\n                    Object.assign(obj, returnValue(i, agg, match));\n                  }\n                });\n                resData.push(obj);\n              });\n            } else {\n              // let len = 1\n              let deepCatArr = JSON.parse(JSON.stringify(catArr));\n              let obj = {};\n              catReverse.map((rowCat, idx) => {\n                obj[rowCat] = {};\n                obj[rowCat].value = deepCatArr[idx];\n                let { len, total } = findSpanByCat(\n                  deepCatArr,\n                  deepCatArr[idx],\n                  idx\n                );\n                if (idx === 0) {\n                  obj[rowCat].rowSpan = 1;\n                  obj[rowCat].rowLen = 1;\n                } else {\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\n                  len = findSpanByCat(deepCatArr, deepCatArr[idx], idx, true);\n                  obj[rowCat].rowLen = total;\n                }\n\n                if (rowIdx % total !== 0) {\n                  obj[rowCat].grpSpan = true;\n                }\n\n                // obj.columnStyle = returnColumnStyle('');\n                // let match = null;\n                // row.values.forEach((i) => {\n                //   Object.assign(obj, returnValue(i, '', match));\n                // });\n                if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n                  obj[rowCat].columnStyle = {\n                    fontSize: `${12 * config.dpr}px`,\n                    lineHeight: `${24 * config.dpr}px`\n                  };\n                }\n              });\n              obj.columnStyle = returnColumnStyle('');\n              let match = null;\n              row.values.forEach((i) => {\n                Object.assign(obj, returnValue(i, '', match));\n              });\n              resData.push(obj);\n            }\n\n            catArr.shift();\n          }\n        });\n      }\n      gridDataProcess(catData);\n      return resData;\n    }\n    /// ////////////结束获取data/////////////////////\n\n    /**\n     * 开始初始化grid的column\n     */\n    function initColumns() {\n      let colCategory = config.data.column.categories;\n      let partColumn = getColumn(colCategory);\n      let temColumn = config.data.row.categories;\n      let resColumn = [];\n\n      temColumn.forEach((i) => {\n        let match = tableTitle.find((t) => t.key === i);\n        let style = {\n          align: 'left',\n          fontSize: globalFontsize,\n          fontColor: '',\n          fontStyle: 'normal',\n          decoration: '',\n          letterSpacing: '',\n          lineHeight: '16.5',\n          display: 'auto'\n        };\n        // if (isMobile()) {\n        //   style['font-size'] = globalFontsize;\n        //   style['line-height'] = globalFontsize;\n        // }\n        let show = true;\n        if (match) {\n          style = JSON.parse(JSON.stringify(match.style));\n          style.color = style.fill;\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n            style['font-size'] = style['font-size'] * config.dpr;\n            style['line-height'] = style['line-height'] * config.dpr;\n          }\n          show = match.show;\n        } else {\n          style.color = config.font.color;\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n            style['font-size'] = globalFontsize;\n            style['line-height'] = globalFontsize;\n          }\n        }\n        resColumn.push({\n          headerName: match ? match.title : i,\n          field: i,\n          cellRenderer: 'showCellRenderer',\n          headerTooltip: match ? match.title : i,\n          headerComponentParams: {\n            style: style,\n            show: show,\n            maxHeight,\n            cellBorderWidth,\n            borderTopShow: '1',\n            innerBorderColor: innerBorderColor\n          },\n          pinned: 'left',\n          lockPinned: true,\n          cellClass: 'lock-pinned',\n          tooltipComponent: 'customTooltip',\n          tooltipField: i,\n          tooltipComponentParams: {\n            style: {\n              align: 'left',\n              fontSize: globalFontsize,\n              fontColor: '',\n              fontStyle: 'normal',\n              decoration: '',\n              letterSpacing: '',\n              lineHeight: '16.5',\n              display: 'auto'\n            },\n            header: true,\n          },\n          cellStyle: (params) => {\n            if (params.value) {\n              let height = 0;\n              if (mode === 'full' || mode === 'fitHeight') {\n                if (currentRowHeight) {\n                  height = params.value.rowSpan * currentRowHeight + 'px';\n                }\n              } else {\n                height =\n                  params.value.rowSpan * params.data.columnStyle.height + 'px';\n              }\n              return retHeadCellStyle(height, params);\n            }\n          },\n          rowSpan: function (params) {\n            if (params.data[i]) {\n              return params.data[i].rowSpan;\n            }\n          },\n          cellClassRules: {\n            'cell-span': (params) => {\n              if (params.data[i]) {\n                return params.data[i].rowSpan ? true : false;\n              } else {\n                return false;\n              }\n            },\n            'cell-group': 'true',\n            'cont-span': (params) => {\n              if (params.data[i]) {\n                return params.data[i].grpSpan ? true : false;\n              } else {\n                return false;\n              }\n            },\n          },\n        });\n      });\n      let flag = !aggShow && !titleShow; //\n      if (!flag && config.data.row.aggressions.length > 0) {\n        let curStyle = {\n          align: 'left',\n          fontSize: globalFontsize,\n          fontColor: '',\n          fontStyle: 'normal',\n          decoration: '',\n          letterSpacing: '',\n          lineHeight: '16.5',\n          display: 'auto'\n        };\n        if (tableTitle.length > 0) {\n          curStyle = tableTitle[0].style;\n          curStyle.color = curStyle.fill;\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n            curStyle['font-size'] = curStyle['font-size'] * config.dpr;\n            curStyle['line-height'] = curStyle['line-height'] * config.dpr;\n          }\n        }\n        resColumn.push({\n          headerName: titleShow ? '' : titleMatch ? titleMatch.title : titleKey,\n          field:\n            aggShow && !Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.row.aggressions)\n              ? 'data_row_aggressions'\n              : '',\n          headerTooltip: titleShow\n            ? ''\n            : titleMatch\n              ? titleMatch.title\n              : titleKey,\n          tooltipField: 'data_row_aggressions',\n          tooltipComponent: 'customTooltip',\n          pinned: 'left',\n          lockPinned: true,\n          cellClass: 'lock-pinned',\n          tooltipComponentParams: {\n            style: {\n              align: 'left',\n              fontSize: globalFontsize,\n              fontColor: '',\n              fontStyle: 'normal',\n              decoration: '',\n              letterSpacing: '',\n              lineHeight: '16.5',\n              display: 'auto'\n            },\n            header: true,\n          },\n          headerComponentParams: {\n            style: curStyle,\n            show: titleShow,\n            maxHeight,\n            cellBorderWidth,\n            borderTopShow: '1',\n            innerBorderColor: innerBorderColor\n          },\n          cellStyle: (params) => {\n            // params.value\n            let style = params.data.columnStyle;\n            let height = 0;\n            if (mode === 'full' || mode === 'fitHeight') {\n              if (currentRowHeight) {\n                height = currentRowHeight + 'px';\n              }\n            } else {\n              height = style.height + 'px';\n            }\n            return retHeadCellStyle(height);\n          }\n        });\n      }\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(colCategory)) {\n        if (columnAggression.length > 0) {\n          resColumn.push(...getGridColumn(geneColumnAgg(true)));\n        } else {\n          resColumn.push(...getGridColumn(partColumn));\n        }\n      } else {\n        resColumn.push(...getGridColumn(partColumn));\n      }\n      return resColumn;\n    }\n\n    function retHeadCellStyle (height, params) {\n      let curStyle = {\n        borderWidth: cellBorderWidth + 'px'\n      };\n      if (height) {\n        curStyle.height = height + ' !important';\n        curStyle.lineHeight = height;\n      }\n      if (bgColor && bgColor.indexOf('/') > -1) {\n        if (index === 15) {\n          curStyle.background = '#2b0b0b';\n        } else if (index === 17) {\n          curStyle.background = 'rgb(3,18,49)';\n        } else {\n          curStyle.backgroundImage = `url(${bgColor})`;\n          curStyle.backgroundSize = `${width}px ${height}px`; // 可以使用cover\n          curStyle.backgroundPosition = 'top right'; // 背景图片居中显示，让多余部分相对容器对此展示\n          curStyle.backgroundRepeat = 'no-repeat';\n        }\n      } else {\n        // curStyle.background = bgColor || '#fff';\n      }\n      curStyle.opacity = config.table.background.opacity\n        ? (config.table.background.opacity * 100) / 100\n        : 1;\n      curStyle.borderColor = innerBorderColor;\n      curStyle.color = config.font.color;\n      if (params && params.value && params.value.rowSpan !== params.value.rowLen) {\n        curStyle.display = 'none';\n      }\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n        curStyle.fontSize = '36px';\n      }\n      return curStyle;\n    }\n\n    function getGridColumn (column) {\n      let resColumn = [];\n      let rowCat = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.row.aggressions)\n        ? Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(config.data.labeled)\n          ? []\n          : config.data.labeled\n        : config.data.row.aggressions;\n\n      maxHeight = maxHeight ? maxHeight + 16 : Number(titleStyle.lineHeight);\n\n      function gridColumnProcess (original, target, propName) {\n        original.forEach((parent, idx) => {\n          let temColumnObj = {\n            tooltipComponent: 'customTooltip',\n            headerName: parent.title ? parent.title : parent.key,\n            headerTooltip: parent.title ? parent.title : parent.key,\n            resizable: false,\n            headerGroupComponent: createHeaderGroupComponent(),\n            headerGroupComponentParams: {\n              style: titleStyle,\n              show: true,\n              maxHeight,\n              cellBorderWidth,\n              innerBorderColor: innerBorderColor,\n              borderBottomShow: titleShow ? '1' : '0', // 无\n              borderTopShow: titleShow ? '0' : '1' // 无\n            },\n            headerComponentParams: {\n              style: parent.parentTitleStyle\n                ? parent.parentTitleStyle\n                : titleStyle,\n              // className: hideHeadFlag ? 'hide-head' : '',\n              show: parent.show !== '1',\n              maxHeight,\n              innerBorderColor: innerBorderColor,\n              cellBorderWidth,\n              borderTopShow: titleShow ? '0' : '1' // 无\n            },\n            tooltipComponentParams: {\n              context: {dataProcess: _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"dataProcess\"], formatNumberFunction: formatNumberFunction},\n            },\n            cellRenderer: (params) => {\n              var eDiv = document.createElement('span');\n              eDiv.innerHTML =\n                params.value && (params.value.value || params.value.value === 0)\n                  ? params.value.value\n                  : '';\n              params.eGridCell.addEventListener('click', function (e) {\n                let label = params.value && params.value.label;\n                let obj = {};\n                label.forEach((i) => {\n                  obj[i.name] = i.value;\n                });\n\n                let curParentDom = params.eGridCell.parentElement;\n                let curAriarowindex = curParentDom.getAttribute('aria-rowindex');\n                setTimeout(() => {\n                  currentOpacity = '20%';\n                  params.api.redrawRows();\n                  // setTimeout(() => {\n                  //   params.eGridCell.classList.add('cell-highlight');\n                  //   // let classStr = params.eGridCell.getAttribute('class') + 'cell-highlight';\n                  //   // params.eGridCell.setAttribute('class', classStr);\n                  // }, 2000);\n                  let curCellDom = params.eGridCell;\n                  let allCellDom = document.body.querySelector(config.bindto).querySelectorAll('.ag-cell');\n                  let ariaColindex = curCellDom.getAttribute('aria-colindex');\n                  // let compId = curCellDom.getAttribute('comp-id');\n                  // let colId = curCellDom.getAttribute('col-id');\n                  let resultDom = '';\n                  for (let i = 0; i < allCellDom.length; i++) {\n                    if (allCellDom[i].getAttribute('aria-colindex') === ariaColindex && allCellDom[i].parentElement.getAttribute('aria-rowindex') === curAriarowindex) {\n                      resultDom = allCellDom[i];\n                    }\n                  }\n                  resultDom.classList.add('cell-highlight');\n                }, 200);\n\n                typeof config.data_click === 'function' &&\n                  config.data_click(obj);\n                typeof config.click === 'function' &&\n                  config.click(obj);\n                \n                if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n                  mobileTooltipHandle(e, params);\n                }\n              });\n              // if (isMobile()) {\n              //   let timer = null;\n              //   let label = params.value.label;\n              //   // params.eGridCell.addEventListener('mouseover', function (e) {\n              //   //   console.log(params.value.value);\n              //   // })\n              //   params.eGridCell.addEventListener('mouseenter', function (e) {\n              //     if (timer) {\n              //       clearTimeout(timer);\n              //       // timer = setTimeout(() => {\n              //       //   console.log('event', e);\n              //       //   console.log('paramsparamsparamsparams', params);\n              //       //   let html = '';\n              //       //   label.map(l => {\n              //       //     let {\n              //       //       style,\n              //       //       tooltipFormat,\n              //       //       name,\n              //       //       value\n              //       //     } = l;\n              //       //     html += `<div \n              //       //               style=\"font-size: ${style.fontSize}px;  \n              //       //               text-align: ${style.align}; \n              //       //               color: ${style.fontColor}; \n              //       //               font-style: ${style.fontStyle}; \n              //       //               text-decoration: ${style.decoration}; \n              //       //               letter-spacing: ${style.letterSpacing}px; \n              //       //               background-color:'#fff';\n              //       //               line-height: ${style.lineHeight}px; display: ${style.display || 'auto'}\">\n              //       //               ${name}${name === '' ? '' : ': '}${formatNumberFunction(value, tooltipFormat)} \n              //       //             </div>`;\n              //       //   });\n              //       //   let dDom = document.querySelector('#canvas_over');\n              //       //   if (dDom) {\n              //       //     document.body.removeChild(dDom);\n              //       //   }\n              //       //   let x = e.clientX;\n              //       //   let y = e.clientY;\n              //       //   let style = `position: absolute;\n              //       //               top: ${y + 20}px;\n              //       //               left: ${x - 10}px;\n              //       //               font-size: 12px;\n              //       //               background-color: #ddd;\n              //       //               border-radius: 4px;\n              //       //               padding: 4px 8px`;\n              //       //   dDom = document.createElement('div');\n              //       //   dDom.setAttribute('id', 'canvas_over');\n              //       //   dDom.setAttribute('style', style);\n              //       //   // let dText = document.createTextNode(retVal);\n              //       //   // dDom.appendChild(dText);\n              //       //   dDom.innerHTML = html;\n              //       //   document.body.appendChild(dDom);\n              //       //   setTimeout(() => {\n              //       //     let dDom = document.querySelector('#canvas_over');\n              //       //     if (dDom) {\n              //       //       document.body.removeChild(dDom);\n              //       //     }\n              //       //   }, 1500);\n              //       // }, 500);\n              //     } else {\n              //       timer = setTimeout(() => {\n              //         console.log('event', e);\n              //         console.log('paramsparamsparamsparams', params);\n              //         let html = '';\n              //         label.map(l => {\n              //           let {\n              //             style,\n              //             tooltipFormat,\n              //             name,\n              //             value\n              //           } = l;\n              //           html += `<div \n              //                     style=\"font-size: ${style.fontSize}px;  \n              //                     text-align: ${style.align}; \n              //                     color: ${style.fontColor}; \n              //                     font-style: ${style.fontStyle}; \n              //                     text-decoration: ${style.decoration}; \n              //                     letter-spacing: ${style.letterSpacing}px; \n              //                     background-color:'#fff';\n              //                     line-height: ${style.lineHeight}px; display: ${style.display || 'auto'}\">\n              //                     ${name}${name === '' ? '' : ': '}${formatNumberFunction(value, tooltipFormat)} \n              //                   </div>`;\n              //         });\n              //         let dDom = document.querySelector('#canvas_over');\n              //         if (dDom) {\n              //           document.body.removeChild(dDom);\n              //         }\n              //         let x = e.clientX;\n              //         let y = e.clientY;\n              //         let style = `position: absolute;\n              //                     top: ${y + 20}px;\n              //                     left: ${x - 10}px;\n              //                     font-size: 12px;\n              //                     background-color: #ddd;\n              //                     border-radius: 4px;\n              //                     padding: 4px 8px`;\n              //         dDom = document.createElement('div');\n              //         dDom.setAttribute('id', 'canvas_over');\n              //         dDom.setAttribute('style', style);\n              //         // let dText = document.createTextNode(retVal);\n              //         // dDom.appendChild(dText);\n              //         dDom.innerHTML = html;\n              //         document.body.appendChild(dDom);\n              //         setTimeout(() => {\n              //           let dDom = document.querySelector('#canvas_over');\n              //           if (dDom) {\n              //             document.body.removeChild(dDom);\n              //           }\n              //         }, 1500);\n              //       }, 1000);\n              //     }\n              //   });\n              //   params.eGridCell.addEventListener('mouseleave', function (e) {\n              //     if (timer) {\n              //       clearTimeout(timer);\n              //     }\n              //   })\n              // }\n\n              return eDiv;\n            },\n            // cellRenderer: (params) => {\n            //   return params.value && (params.value.value || params.value.value === 0) ? params.value.value : ''\n            // },\n            cellStyle: (params) => {\n              let style = {};\n              if (params.columnStyle) {\n                style = JSON.parse(JSON.stringify(params.columnStyle));\n              }\n              if (params.value) {\n                if (params.value.columnStyle) {\n                  style = JSON.parse(JSON.stringify(params.value.columnStyle));\n                }\n                style.height = style.height + 'px !important';\n                // && colorFeature === params.data.data_row_aggressions\n                if (\n                  colorFeature &&\n                  params.value &&\n                  (params.value.value || params.value.value === 0)\n                ) {\n                  style.color = self.getColor(params.value.labelValue);\n                } else if (!colorFeature) {\n                } else {\n                  style.color = config.font_color;\n                }\n              }\n              if (mode === 'full' || mode === 'fitHeight') {\n                if (currentRowHeight) {\n                  style.height = currentRowHeight + 'px !important';\n                  style.lineHeight = currentRowHeight + 'px !important';\n                }\n              }\n              let opacity = config.color.opacity ? config.color.opacity[0] : 1;\n              style.borderWidth = cellBorderWidth + 'px';\n              style.borderRightColor = innerBorderColor + ' !important';\n              style.borderBottomColor = innerBorderColor + ' !important';\n              if (config.targetAction) {\n                // currentOpacity = '20%';\n                if (config.targetAction[0].actionInfo) {\n                  let curFiled = config.targetAction[0].actionInfo[config.targetAction[0].feature[0].feature_name];\n                  if (params.colDef.field === curFiled && config.targetAction[0].actionInfo[params.data.data_row_aggressions]) {\n                    currentOpacity = '100%';\n                  } else {\n                    currentOpacity = '20%';\n                  }\n                }\n              }\n              if (colorFeature) {\n                style.opacity = currentOpacity || (opacity * 100) / 100;\n              } else {\n                // style.opacity = '100%';\n                style.opacity = currentOpacity || '100%';\n              }\n\n              return style;\n            }\n          };\n          if (parent.key) {\n            propName.push(parent.key);\n            if (parent.values[0].key) {\n              temColumnObj.children = gridColumnProcess(\n                parent.values,\n                temColumnObj.columns || [],\n                propName\n              );\n            } else {\n              if (columnAggression.length > 0 && parent.type !== 'columnAgg') {\n                let colAggValues = geneColumnAgg();\n                temColumnObj.children = gridColumnProcess(\n                  colAggValues,\n                  temColumnObj.columns || [],\n                  propName\n                );\n              }\n\n              temColumnObj.field = propName\n                .join('-')\n                // .replace(/,/g, '')\n                // .replace(/\\(/g, '')\n                // .replace(/\\)/g, '')\n                // .replace(/\\s+/g, '')\n                // .replace(/\\./, ''); // parent.key;\n              temColumnObj.tooltipField = temColumnObj.field;\n            }\n            propName.pop();\n            target.push(temColumnObj);\n          } else {\n            if (idx === 0 && rowCat.length > 0) {\n              temColumnObj.field = 'singleHead';\n              temColumnObj.tooltipField = 'singleHead';\n              temColumnObj.headerComponentParams.show = false;\n              singleHeadFlag =\n                config.data.row.categories.length > 0 ? false : true;\n              // temColumnObj.headerComponentParams.hasSpace = '1'\n              temColumnObj.headerComponentParams.maxHeight = 0;\n              target.push(temColumnObj);\n            }\n          }\n        });\n        return target;\n      }\n      let propName = [];\n      resColumn = gridColumnProcess(column, resColumn, propName);\n      if (titleShow) {\n        let obj = {\n          tooltipComponent: 'customTooltip',\n          headerName: titleMatch ? titleMatch.title : titleKey,\n          headerTooltip: titleMatch ? titleMatch.title : titleKey,\n          children: resColumn,\n          tooltipComponentParams: {\n            context: {dataProcess: _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"dataProcess\"], formatNumberFunction: formatNumberFunction},\n          },\n          headerGroupComponent: createHeaderGroupComponent(),\n          headerGroupComponentParams: {\n            style: titleStyle,\n            show: titleShow,\n            maxHeight,\n            cellBorderWidth,\n            innerBorderColor: innerBorderColor,\n            borderBottomShow: '1', // 无\n            borderTopShow: '1' // 无\n          }\n        };\n        return [obj];\n      } else {\n        return resColumn;\n      }\n    }\n\n    function geneColumnAgg (useStyleFlag) {\n      let colAggValues = [];\n      let curStyle = {\n        align: 'left',\n        fontSize: globalFontsize,\n        fontColor: '',\n        fontStyle: 'normal',\n        decoration: '',\n        letterSpacing: '',\n        lineHeight: '16.5',\n        display: 'auto'\n      };\n      if (tableTitle.length > 0) {\n        curStyle = tableTitle[0].style;\n        curStyle.color = curStyle.fill;\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n          curStyle['font-size'] = curStyle['font-size'] * config.dpr;\n          curStyle['line-height'] = curStyle['line-height'] * config.dpr;\n        }\n      }\n      columnAggression.map((i) => {\n        let match = tableTitle.find((m) => m.key === i);\n        let flag = (match && match.show) || !match;\n        colAggValues.push({\n          title: match ? match.title : i,\n          key: i,\n          values: [{}],\n          type: 'columnAgg',\n          show: flag ? '' : '1',\n          parentTitleStyle: useStyleFlag ? curStyle : null\n        });\n      });\n      return colAggValues;\n    }\n\n    function getColumn (colCategory) {\n      // colCategory = ['品牌', '产品主类']\n      let nest = d3.nest();\n      for (var i = 0; i < colCategory.length; i++) {\n        nest.key(createNestingFunction(colCategory[i]));\n        // nest.key((d)=> {\n        //   return d[colCategory[i]];\n        // });\n      }\n      let resData = nest.entries(tableData);\n      return resData;\n    }\n\n    function createNestingFunction(propertyName) {\n      return (d)=> {\n        return d[propertyName];\n      };\n    }\n\n    function mobileTooltipHandle (e, params) {\n      if (mobileTooltipTimer) {\n        clearTimeout(mobileTooltipTimer);\n      }\n      let tableBox = document.querySelector(`#${config.id}`);\n      let mobileTooltipDom = tableBox.querySelector('#canvas_over');\n      if (mobileTooltipDom) {\n        tableBox.removeChild(mobileTooltipDom);\n      }\n      let label = params.value.label;\n      let html = '';\n      label.map(l => {\n        let {\n          style,\n          tooltipFormat,\n          name,\n          value\n        } = l;\n        html += `<div \n                  style=\"font-size: ${style.fontSize}px;  \n                  text-align: ${style.align}; \n                  color: ${style.fontColor}; \n                  font-style: ${style.fontStyle}; \n                  text-decoration: ${style.decoration}; \n                  letter-spacing: ${style.letterSpacing}px; \n                  background-color:'#fff';\n                  line-height: ${style.lineHeight}px; display: ${style.display || 'auto'}\">\n                  ${name}${name === '' ? '' : ': '}${formatNumberFunction(value, tooltipFormat)} \n                </div>`;\n      });\n      // let dDom = document.querySelector('#canvas_over');\n      // if (dDom) {\n      //   document.body.removeChild(dDom);\n      // }\n      let tableBoxRect = tableBox.getBoundingClientRect();\n      let tableTop = tableBoxRect.top;\n      let bodyClientWidth = document.body.clientWidth;\n      let bodyClientHeight = document.body.clientHeight;\n      let x = e.clientX;\n      let y = e.clientY;\n      let tooltipPosition = '';\n      if (x < bodyClientWidth / 2) {\n        tooltipPosition = `${tooltipPosition}; left: ${x - 10}px`;\n      } else {\n        tooltipPosition = `${tooltipPosition}; right: ${bodyClientWidth - x + 10}px`;\n      }\n      if (y < bodyClientHeight - 300) {\n        tooltipPosition = `${tooltipPosition}; top: ${y + 20 - tableTop}px`;\n      } else {\n        tooltipPosition = `${tooltipPosition}; bottom: ${bodyClientHeight - y - 20}px`;\n      }\n      let style = `position: absolute;\n                  font-size: 12px;\n                  background-color: #fff;\n                  border-radius: 4px;\n                  padding: 4px 8px;\n                  box-shadow: rgb(174 174 174) 0px 0px 10px;`;\n      if (tooltipPosition) {\n        style = `${style}; ${tooltipPosition}`;\n      }\n      let dDom = document.createElement('div');\n      dDom.setAttribute('id', 'canvas_over');\n      dDom.setAttribute('style', style);\n      // let dText = document.createTextNode(retVal);\n      // dDom.appendChild(dText);\n      dDom.innerHTML = html;\n      tableBox.appendChild(dDom);\n      // document.body.appendChild(dDom);\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isMobile\"])()) {\n        document.body.querySelector('.dashboard-container').addEventListener('scroll', tooltipScroll);\n        setTimeout(() => {\n          document.body.querySelector('.dashboard-container').removeEventListener('scroll', tooltipScroll);\n          tooltipScroll();\n        }, 1500);\n      }\n      mobileTooltipTimer = setTimeout(() => {\n        // let dDom = document.querySelector('#canvas_over');\n        // if (dDom) {\n        //   document.body.removeChild(dDom);\n        // }\n      }, 1500);\n    }\n\n    function tooltipScroll () {\n      // if (d3.select('body').selectAll('#canvas_over')) {\n      //   d3.select('body').selectAll('#canvas_over').remove();\n      // }\n    }\n\n    function formatNumberFunction(label, format) {\n      let prefixes = {\n        y: 1e-24,\n        z: 1e-21,\n        a: 1e-18,\n        f: 1e-15,\n        p: 1e-12,\n        mu: 1e-6,\n        m: 1e-3,\n        none: 1e-0,\n        K: 1e+3,\n        M: 1e+6,\n        G: 1e+9,\n        T: 1e+12,\n        P: 1e+15,\n        E: 1e+18,\n        Z: 1e+21,\n        Y: 1e+24\n      };\n      let unitChange = {\n        K: 'K 千',\n        M: 'M 百万',\n        G: 'G 十亿',\n        T: 'T 千亿',\n      }\n      let new_label = label\n      let original = false, k_mark = true;\n      \n      if(format.decimal < 0) format.decimal = 0\n      if(format.decimal === '') original = true\n    \n      if(Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isNumber\"])(new_label)) {\n        // if(isNaN(new_label)) return ''\n        let format_decimal = `.${format.decimal}`,\n            format_kMark = format.useThousandMark ? ',' : '';\n        if(format_kMark === '') k_mark = false\n    \n        if(format.selectFormat !== 'percent') {\n          //单位换算\n          Object.keys(prefixes).forEach(p => {\n            // if(p === format.unit) new_label /= prefixes[p]\n            let splitUnit = format.unit ? format.unit.split(' ')[0] : '';\n            if(p === format.unit) {\n              new_label /= prefixes[p]\n            } else if (p === splitUnit) {\n              new_label /= prefixes[splitUnit]\n            }\n          })\n          let cur_new_label = new_label;\n          //小数位数\n          new_label = original ? (k_mark ? d3.format(format_kMark)(new_label) : new_label) : \n                                 d3.format(`${format_kMark}${format_decimal}f`)(new_label);\n          //负值显示\n          if (format.negative === '(1234)') {\n            format.negative = 0;\n          } else if (format.negative === '1234-') {\n            format.negative = 1;\n          }\n          if(parseFloat(new_label) < 0) {\n            // if(format.negative === 0) {\n            //   new_label = original ? `(${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)})` : \n            //                          `(${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))})`\n            // } else if(format.negative === 1) {\n            //   new_label = original ? `${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)}-` : \n            //                          `${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))}-`\n            // }\n            if(format.negative === 0) {\n              new_label = original ? `(${k_mark ? d3.format(format_kMark)(Math.abs(cur_new_label)) : Math.abs(cur_new_label)})` : \n                                     `(${d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(cur_new_label))})`\n            } else if(format.negative === 1) {\n              new_label = original ? `${k_mark ? d3.format(format_kMark)(Math.abs(cur_new_label)) : Math.abs(cur_new_label)}-` : \n                                     `${d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(cur_new_label))}-`\n            }\n          }\n          \n          new_label += (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(format.unit) && unitChange[format.unit]) ? unitChange[format.unit] : ''\n        } else {\n          new_label *= 100\n          //小数位数\n          let num = original ? (k_mark ? d3.format(`${format_kMark}`)(Math.abs(new_label)) : d3.format('')(Math.abs(new_label))) :\n                               d3.format(`${format_kMark}.${format.decimal}f`)(Math.abs(new_label))\n    \n          if(new_label < 0) {\n            if(format.negative === 0) new_label = `(${num})`\n            else if(format.negative === 1) new_label = `${num}-` \n            else new_label = `-${num}` \n          } else {\n            new_label = num\n          }\n        }\n    \n        //货币\n        if(format.selectFormat === 'currency') {\n          let areaCode = ['', 'CN', 'JP', 'HK', 'US', 'EUR', 'GBP'];\n          let moneyCode = ['', '¥', '￥', 'HK$', '＄', '€', '£'];\n          let zoneObj = {\n            CN: `¥ 人民币`,\n            JP: `￥ 日元`,\n            HK: `HK$ 港元`,\n            US: `＄ 美元`,\n            EUR: `€ 欧元`,\n            GBP: `£ 英镑`\n          };\n          let format_zone = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(format.zone) ? format.zone : '¥ 人民币';\n          for (let item in zoneObj) {\n            if (format_zone === zoneObj[item]) {\n              format_zone = item;\n            }\n          };\n          let prefix = moneyCode[areaCode.indexOf(format_zone.toUpperCase())] || ''\n          new_label = `${prefix}${new_label}`\n        }\n        //前缀后缀\n        new_label = `${format.prefix}${new_label}${format.suffix}`\n      } else {\n        new_label += ''\n      }\n    \n      if(new_label === 'undefined' || new_label === 'NaN') new_label = '' \n    \n      return new_label\n    }    \n    /////////////////////结束获取grid的column////////////////////////\n  };\n\n  function initData (values) {\n    data = values;\n    keys = Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(colored_feature)\n      ? $$.getUniqueArray(data.map((d) => d.values[0][colored_feature]))\n      : [];\n  }\n\n  // function getColorList() {\n  //   keys = isDefined(colored_feature)\n  //     ? (data.map((d) => d.values[0][colored_feature]))\n  //     : [];\n  //   keys = Array.from(new Set(keys));\n  //   if(isEmpty(keys)) return\n  //   let list = []\n  //   if(colored_type === 'linear') {\n  //     list = d3.extent(keys).map((d, i) => {\n  //       let format_val = $$.axis_format($$.userDefined_colorRange[i])\n  //       return {\n  //         val: format_val, \n  //         color: color_function(d),\n  //         unique: $$.isBarLineType ? `${d}(${aggr})` : format_val,\n  //         index: i, \n  //         originalVal: d, \n  //         rangeType: i > 0 ? 'max' : 'min'\n  //       }\n  //     })\n  //   } else {\n  //     list = keys.map((d, i) => {\n  //       return {\n  //         val: d, \n  //         color: color_function(d), \n  //         fill: isFunction(pattern_function) ? pattern_function(d) : '',\n  //         unique: $$.isBarLineType ? `${d}(${aggr})` : d,\n  //         index: i, \n  //         className: $$.isBarLineType ? `${CLASS.element} ${CLASS.element}-${i}-${cmi}` : `${CLASS.element} ${CLASS.element}-${i}`,\n  //       }\n  //     })\n  //   }\n  //   let colorObj = {\n  //     id: bindto,\n  //     aggr: $$.isBarLineType ? aggr : colored_feature,\n  //     name: colored_feature,\n  //     colored_type: colored_type,\n  //     key: `${colored_feature}(${aggr})`,\n  //     key_id: cmi,\n  //     type: colored_type === 'linear' ? 'linear' : type || '',\n  //     showRange: colored_type === 'linear',\n  //     list: list,\n  //     opacity: (isDefined(opacity) ? opacity : config.color_opacity[0]) * 100 || 100\n  //   }\n\n  //   let scheme = config.color.schemes[0]\n  //   if(isEmpty(scheme)) {\n  //     let colorLinear = ['#7AC9F5', '#2A5783'];\n  //     let colorSchemes = ['#4284F5', '#03B98C', '#FACC14', '#F5282D', '#8543E0', '#3FAECC', '#3110D0', '#E88F00', '#DE2393', '#91BA38','#99B4BF', '#216A58', '#AB9438', '#F4999B', '#C9BFE1', '#055166', '#1F135A', '#43140A', '#96005A', '#8D8D8D']\n  //     scheme = colored_type === 'linear' ? colorLinear : colorSchemes\n  //   }\n\n  //   let colorList = config.color.colors[0]\n  //   if(isEmpty(colorList)) {\n  //     if(colored_type === 'linear') {\n  //       colorList = list.map(l => l.color)\n  //     } else {\n  //       colorList = {}\n  //       list.forEach(l => {\n  //         colorList[l.val] = l.color\n  //       })\n  //     }\n  //   }\n\n  //   let patternList = config.color.patterns[0]\n  //   if(isEmpty(patternList)) {\n  //     patternList = {}\n  //     list.forEach(l => {\n  //       patternList[l.val] = l.fill\n  //     })\n  //   }\n\n  //   colorObj.schemes = scheme\n  //   colorObj.colors = colorList\n  //   colorObj.patterns = patternList\n\n  //   return colorObj;\n  //   // $$.modifyColorList({\n  //   //   colored_type: colored_type,\n  //   //   colored_feature: colored_feature,\n  //   //   keys: keys,\n  //   // });\n  // }\n\n  function getColor (value) {\n    // if (value) {\n    //   let y_colored = [];\n    //   let colorRange = notEmpty(config.data.range.color) ? config.data.range.color[0] : [],\n    //     color_schemes = ['#7AC9F5', '#2A5783'],\n    //     colors = (notEmpty(config.color.colors) && config.color.colors[0]) ? config.color.colors[0] : [],\n    //     colored_type = config.data.colored.type,\n    //     colored_feature = config.data.colored.feature;\n    //   let pattern = d3.scaleOrdinal(color_schemes).range(); //d3.schemeSet3, schemeCategory10\n    //   y_colored = d3.extent((tableData).map((d) => d[colored_feature]));\n    //   if(isDefined(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\n    //   if(isDefined(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\n\n    //   let min = isDefined(y_colored[0]) ? y_colored[0] : 0;\n    //   let max = isDefined(y_colored[1]) ? y_colored[1] : min;\n\n    //   self.userDefined_colorRange = [min, max];\n\n    //   pattern = d3.scaleLinear().range(color_schemes).domain([min, max]).clamp(true);\n    //   let color = pattern(value);\n    //   return color;\n    // }\n  }\n\n  return {\n    drawTable,\n    // getColorList,\n    initData,\n    getColor\n  };\n};\n// extend(Chart.prototype, {\n//   drawTable,\n// });\n\n\n//# sourceURL=webpack://chart/./src/chart/table.js?");

/***/ }),

/***/ "./src/geometry/Bubble.js":
/*!********************************!*\
  !*** ./src/geometry/Bubble.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _utils_check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/check.js */ \"./src/utils/check.js\");\n/* harmony import */ var _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/defaultConfig.js */ \"./src/utils/defaultConfig.js\");\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Geometry.js */ \"./src/geometry/Geometry.js\");\n/* eslint-disable no-useless-constructor */\n\n\n\n\n\nlet { defaultFormat, defaultText } = _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nclass Bubble extends _Geometry_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.init();\n    this.colorList = [];\n  }\n\n  init () {\n    this.createContainer();\n  }\n\n  labelsConfig () {\n    let list = this.config.labelsList;\n    if (list.length === 0) {\n      return;\n    }\n    let dpr = this.config.dpr || 1;\n    this.geometry.selectAll('.bubble-labels').remove();\n    let textDom = this.geometry\n      .append('text')\n      .attr('class', 'bubble-labels')\n      .attr('text-anchor', 'middle')\n      .attr('startOffset', '50%')\n      .attr('textLength', (d) => d.radius)\n      .attr(\n        'transform',\n        (d) =>\n          `translate(0, -${\n            list.slice(0, 2).reduce((a, b) => a + b.text.lineHeight, 0) / 2\n          })`\n      );\n    textDom\n      .selectAll('tspan')\n      .data((d) => {\n        let tempList = list\n          .map((l) => {\n            let { format = defaultFormat } = l;\n            return {\n              ...d,\n              key: l.key,\n              title: l.title,\n              format: l.format,\n              text: l.text || defaultText,\n              formatVal: Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"dataProcess\"])(d[l.key], format)\n            };\n          })\n          .filter(\n            (f) =>\n              Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"getTextWidth\"])(f.formatVal, f.text.fontSize + 'px') * dpr <\n              d.radius * 2 * 0.8\n          );\n        let totalHeight = tempList.reduce((a, b) => {\n          return a + b.text.lineHeight;\n        }, 0);\n\n        if (totalHeight > d.radius * 2 * 0.8) {\n          tempList = tempList.slice(0, 2);\n        }\n        return tempList;\n      })\n      .enter()\n      .append('tspan')\n      .attr('x', (d) => 0)\n      .attr('dy', (d) => `${d.text.lineHeight}px`)\n      .attr('fill', (d) => d.text.fontColor)\n      .attr('font-size', (d) => d.text.fontSize)\n      .text((d) => d.formatVal);\n  }\n\n  draw () {\n    let { size, width, height, colorFeature, orderStyle } = this.config;\n    // 修改移动端展板的气泡大小\n    let isDashBoard = window.location.href.indexOf('dashboard') >= 0;\n    if (isDashBoard) {\n      size = size * 1.4;\n    }\n    let pack = d3.pack().size([width * size, height * size]);\n    let root = d3\n      .hierarchy({\n        children: this.data\n      })\n      .sum((d) => {\n        return d[this.config.sizeFeature.feature];\n      });\n    if (orderStyle === -1) {\n      root.sort((a, b) => b.value - a.value);\n    } else if (orderStyle === 1) {\n      root.sort((a, b) => a.value - b.value);\n    } else {\n      root.sort(() => Math.random() * 2 - 1);\n    }\n    let colorList = [];\n    var nodes = pack(root)\n      .leaves()\n      .map((d, idx) => {\n        let colorVal = colorFeature.feature;\n        let val = d.data[colorVal]; // colorFeature.type === 'ordinal' ? d.data[colorVal] : d.value;\n        let color = this.getItemColor(idx, val);\n\n        if (colorFeature.feature) {\n          let match = colorList.find(\n            (i) => i.val === d.data[colorFeature.feature]\n          );\n\n          color = match ? match.color : color;\n\n          !match &&\n            colorList.push({\n              val: d.data[colorFeature.feature],\n              color\n            });\n        }\n        return {\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          color,\n          id: 'bubble-circle' + idx,\n          radius: d.r,\n          value: d.value,\n          ...d.data\n        };\n      });\n    this.colorList = colorList;\n    this.className = 'bubble-circle';\n    this.geometry = this.svg\n      .append('g')\n      .attr('class', 'bubble-wrap')\n      .attr(\n        'transform',\n        `translate(${(width - width * size) / 2},${\n          (height - height * size) / 2\n        })`\n      )\n      .selectAll('bubble-circle')\n      .data(nodes)\n      .enter()\n      .append('g')\n      .attr('id', (d) => d.id)\n      .attr('transform', (d) => `translate(${d.x},${d.y})`)\n      .attr('opacity', (d) => {\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(this.config.targetAction) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(this.config.targetAction[0].feature)) {\n          if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(this.config.targetAction[0].actions) && this.config.targetAction[0].actions[0].value) {\n            let feature = this.config.targetAction[0].feature[0].feature_name;\n            let featureVal = this.config.targetAction[0].actions[0].value;\n            if (d[feature] === featureVal) {\n              return 1;\n            } else {\n              return 0.2;\n            }\n          }\n        } else {\n          return null;\n        }\n      });\n\n    this.geometry\n      .append('circle')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('r', (d) => d.r)\n      .attr('fill', (d) => d.color)\n      .attr('fill-opacity', (d) => {\n        if (d.color.indexOf('#') > -1) {\n          return this.opacity;\n        }\n        return 1;\n      });\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bubble);\n\n\n//# sourceURL=webpack://chart/./src/geometry/Bubble.js?");

/***/ }),

/***/ "./src/geometry/Geometry.js":
/*!**********************************!*\
  !*** ./src/geometry/Geometry.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color.js */ \"./src/utils/color.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/defaultConfig.js */ \"./src/utils/defaultConfig.js\");\n/* harmony import */ var _utils_check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/check.js */ \"./src/utils/check.js\");\n\n\n\n\nlet { defaultText, defaultFormat, fontColor } = _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nclass Geometry {\n  constructor (data, config) {\n    this.data = data;\n    this.config = config;\n    this.container = null;\n    this.geometry = null;\n    this.opacity = ((this.config.opacity || 100) / 100).toFixed(2);\n    this.timer = null;\n  }\n\n  /**\n   * 创建容器\n   */\n  createContainer () {\n    let { id, width, height } = this.config;\n    this.container = d3\n      .select(`#${id}`)\n      .append('div')\n      .attr('class', 'chart-container')\n      .attr(\n        'style',\n        `width:${width}px;height:${height}px;position:relative;display:inline-block;vertical-align:middle;overflow: hidden;`\n      );\n\n    // 待补充\n    this.svg = this.container\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', `0 0 ${width} ${height}`)\n      .attr('preserveAspectRatio', 'xMinYMin slice');\n    // .attr('transform', 'translate(10,10)');\n  }\n\n  /**\n   * 标签配置\n   */\n  labelsConfig () {}\n\n  /**\n   * 提示框配置\n   */\n  tooltipConfig (data) {\n    if (!this.geometry) {\n      return;\n    }\n    let self = this;\n    let list = this.config.tooltipList;\n    if (list.length === 0) {\n      return;\n    }\n    // let { width, height } = this.config;\n    let tooltipWrap;\n    let style = `\n    position:absolute;\n    z-index:7;\n    transition:left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s;\n    padding:8px 12px;\n    color:${fontColor};\n    background: #fff;\n    box-shadow: rgb(174, 174, 174) 0px 0px 10px;\n    border-radius: 3px;\n    word-break: keep-all;\n    max-width: 66%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;`;\n\n    // if (!navigator.userAgent.match(/iPad/i)) {\n    this.geometry.on('mouseover', (d) => {\n      if (list.length === 0) {\n        return;\n      }\n      tooltipContentProcess(d);\n      // if (isMobile()) {\n      //   document.body.querySelector('.dashboard-container').addEventListener('scroll', tooltipScroll);\n      //   setTimeout(() => {\n      //     document.body.querySelector('.dashboard-container').removeEventListener('scroll', tooltipScroll);\n      //     tooltipScroll();\n      //   }, 1500);\n      // }\n    });\n\n    this.geometry.on('mouseout', () => {\n      // this.container.selectAll('.dc-tooltip').remove();\n      // d3.select('body').selectAll('.dc-tooltip').remove();\n      d3.select(`#${self.config.id}`).selectAll('.dc-tooltip').remove();\n    });\n\n    this.geometry.on('mousemove', (d) => {\n      // let { left, top, translateX } = retLeftTop();\n      // let curStyle =\n      //   style +\n      //   ` left:${left}px;top:${top}px;transform:translateX(${translateX}`;\n      let tooltipPosition = retPosition(self);\n      let curStyle =\n        style +\n        ` ${tooltipPosition}`;\n      // this.container.selectAll('.dc-tooltip').attr('style', curStyle);\n      // d3.select('body').selectAll('.dc-tooltip').attr('style', curStyle);\n      d3.select(`#${self.config.id}`).selectAll('.dc-tooltip').attr('style', curStyle);\n    });\n    // } else {\n    //   if (list.length === 0) {\n    //     return;\n    //   }\n    //   tooltipContentProcess(data);\n    //   // document.body.querySelector('.dashboard-container').addEventListener('scroll', tooltipScroll);\n    //   // this.timer = setTimeout(() => {\n    //   //   document.body.querySelector('.dashboard-container').removeEventListener('scroll', tooltipScroll);\n    //   //   // tooltipScroll();\n    //   // }, 1500);\n    // }\n\n    // function retLeftTop () {\n    //   let { clientWidth: tempWidth, clientHeight: tempHeight } = document.body;\n    //   let translateX = 0;\n    //   let left = event.x + 20;\n    //   let top = event.pageY + 20;\n\n    //   if (top + list.length * 30 > tempHeight) {\n    //     top = top - list.length > 0 ? top - list.length * 30 : 0;\n    //   }\n    //   if (left + 150 > tempWidth) {\n    //     left = left - 150 > 0 ? left - 30 : 0;\n    //     translateX = '-100%';\n    //   }\n    //   return {\n    //     left,\n    //     top,\n    //     translateX\n    //   };\n    // }\n\n    function retPosition (self) {\n      // let { clientWidth: tempWidth, clientHeight: tempHeight } = document.body;\n      // let xClient = event.clientX || event.targetTouches[0].clientX;\n      // let yClient = event.clientY || event.targetTouches[0].clientY;\n      // let clientWidth31 = tempWidth / 3;\n      // let clientWidth32 = tempWidth * 2 / 3;\n      // let resultPosition = '';\n      // if (xClient < clientWidth31) {\n      //   resultPosition = `left: ${xClient + 5}px`;\n      // } else if (xClient > clientWidth31 && xClient < clientWidth32) {\n      //   resultPosition = `left: ${xClient}px; transform: translateX(-50%)`;\n      // } else {\n      //   resultPosition = `right: ${tempWidth - xClient + 5}px`;\n      // }\n      // let defaultVal = 32;\n      // if (isMobile()) {\n      //   defaultVal = 32 * self.config.dpr;\n      // }\n      // if (tempHeight - yClient > 300) {\n      //   resultPosition = `${resultPosition}; top: ${yClient + defaultVal}px`;\n      // } else {\n      //   resultPosition = `${resultPosition}; bottom: ${tempHeight - yClient + defaultVal}px`;\n      // }\n      // return resultPosition;\n      let { top: boxTop, left: boxLeft, width: tempWidth, height: tempHeight } = document.body.querySelector(`#${self.config.id}`).getBoundingClientRect();\n      let xClient = (event.clientX || event.targetTouches[0].clientX) - boxLeft;\n      let yClient = (event.clientY || event.targetTouches[0].clientY) - boxTop;\n      let clientWidth31 = tempWidth / 3;\n      let clientWidth32 = tempWidth * 2 / 3;\n      let resultPosition = '';\n      if (xClient < clientWidth31) {\n        resultPosition = `left: ${xClient + 5}px`;\n      } else if (xClient > clientWidth31 && xClient < clientWidth32) {\n        resultPosition = `left: ${xClient}px; transform: translateX(-50%)`;\n      } else {\n        resultPosition = `right: ${tempWidth - xClient + 5}px`;\n      }\n      let defaultVal = 32;\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])()) {\n        defaultVal = 32 * self.config.dpr;\n      }\n      if (tempHeight - yClient > tempHeight / 2) {\n        resultPosition = `${resultPosition}; top: ${yClient + defaultVal}px`;\n      } else {\n        resultPosition = `${resultPosition}; bottom: ${tempHeight - yClient + defaultVal}px`;\n      }\n      return resultPosition;\n    }\n\n    function tooltipContentProcess (d) {\n      // 鼠标的offsetX offsetY\n      // 弹框最大高度  30 * list.length\n      // 容器的高度\n      // let { left, top, translateX } = retLeftTop();\n      // let curStyle =\n      //   style +\n      //   ` left:${left}px;top:${top}px;transform:translateX(${translateX})`;\n      // d3.select('body').selectAll('.dc-tooltip').remove();\n      d3.select(`#${self.config.id}`).selectAll('.dc-tooltip').remove();\n      let tooltipPosition = retPosition(self);\n      let curStyle =\n        style +\n        ` ${tooltipPosition}`;\n\n      // tooltipWrap = d3\n      //   .select('body') //  this.container //\n      //   .append('div')\n      //   .attr('class', 'dc-tooltip')\n      //   .attr('style', curStyle);\n      // tooltipWrap = d3\n      //   .select(`#${self.config.id}`) //  this.container //\n      //   .append('div')\n      //   .attr('class', 'dc-tooltip')\n      //   .attr('style', curStyle);\n\n      let listItem = '';\n      list.forEach((item) => {\n        let prop = item.title;\n        let val = d[item.key];\n        let { text = defaultText, format = defaultFormat } = item;\n        if (item.display !== 'none') {\n          let curStyleObj = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"styleProcess\"])(text);\n          let retVal = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"dataProcess\"])(val, format);\n          // Object.assign(curStyleObj, {\n          //   display: 'inline-flex',\n          //   flex: 1,\n          //   justifyContent: 'space-between'\n          // });\n          // <span >${prop}:</span> <span>${retVal}</span>\n          // align-items: center; display:flex;\n          listItem += `<li class=\"dc-tooltip-list-item\" style=\"width:100%;list-style-type:none; margin-bottom:4px;${curStyleObj}\">\n          ${prop}:${retVal}\n            </li>`;\n        }\n      });\n      if (listItem.length > 0) {\n        tooltipWrap = d3\n          .select(`#${self.config.id}`) //  this.container //\n          .append('div')\n          .attr('class', 'dc-tooltip')\n          .attr('style', curStyle);\n\n        tooltipWrap.html(listItem);\n      }\n    }\n\n    // function tooltipScroll () {\n    //   if (d3.select(`#${self.config.id}`).selectAll('.dc-tooltip')) {\n    //     // d3.select('body').selectAll('.dc-tooltip').remove();\n    //     d3.select(`#${self.config.id}`).selectAll('.dc-tooltip').remove();\n    //   }\n    // }\n  }\n\n  registerEvent (eventType) {\n    if (!this.geometry) {\n      return;\n    }\n    let that = this;\n    this.geometry.on(\n      eventType,\n      function (d) {\n        clearTimeout(that.timer);\n        that.tooltipConfig(d);\n        typeof that.config.click === 'function' &&\n          that.config.click(d);\n        let opacity = that.config.opacity || 1;\n        // 待修改selectAll(`.${that.className}`)\n        // d3.event.stopPropagation();\n        // that.geometry.attr('opacity', opacity * 0.2);\n        // d3.select(this).transition().duration(500).attr('opacity', 1);\n        // that.config.clkFlag = true;\n        setTimeout(() => {\n          that.geometry.attr('opacity', opacity * 0.2);\n          d3.select(this).transition().duration(500).attr('opacity', 1);\n          that.config.clkFlag = true;\n        }, 200);\n        typeof that.config.data_click === 'function' &&\n          that.config.data_click(d);\n      },\n      false\n    );\n\n    this.container.on(\n      eventType,\n      function (d) {\n        // 待修改selectAll(`.${that.className}`)\n        that.geometry.attr('opacity', that.config.opacity);\n        if (that.config.clkFlag) {\n          typeof that.config.data_click === 'function' &&\n            that.config.data_click();\n          that.config.clkFlag = false;\n        }\n      },\n      false\n    );\n  }\n\n  /**\n   * 画图形\n   */\n  render () {\n    this.draw();\n    this.labelsConfig();\n    this.tooltipConfig();\n    this.registerEvent('click');\n    // tooltip不自动显示的话iPad可以不区分mouseevent和touchevent\n    // if (navigator.userAgent.match(/iPad/i)) {\n    //   this.registerEvent('touchstart');\n    // } else {\n    //   this.tooltipConfig();\n    //   this.registerEvent('click');\n    // }\n  }\n\n  getItemColor (index, curVal) {\n    let { type, feature } = this.config.colorFeature;\n    let min = 0;\n    let max = 0;\n    if (type === 'linear') {\n      let sortData = this.data.sort((a, b) => a[feature] - b[feature]);\n      min = sortData[0][feature];\n      max = sortData[sortData.length - 1][feature];\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.colorList) && this.config.colorList[0].originalVal && this.config.colorList[0].originalVal) {\n        if (this.config.colorList[0].check) {\n          min = this.config.colorList[0].originalVal;\n        }\n        if (this.config.colorList[1].check) {\n          max = this.config.colorList[1].originalVal;\n        }\n        // min = this.config.colorList[0].originalVal;\n        // max = this.config.colorList[1].originalVal;\n      }\n      if (this.data.length === 1) {\n        if (min > 0) {\n          min = 0;\n        } else {\n          max = 0;\n        }\n      }\n    }\n\n    let flag = this.config.labelsList.find((i) => i.type === 'ordinal');\n\n    return Object(_utils_color_js__WEBPACK_IMPORTED_MODULE_0__[\"getItemColor\"])(\n      index,\n      this.config.colorList,\n      this.config.colorFeature.type,\n      min,\n      max,\n      curVal,\n      feature,\n      flag,\n      this.opacity\n    );\n  }\n\n  update (type, data) {\n    let updateFun = {\n      tooltip: () => {\n        this.config.tooltipList = data;\n        this.tooltipConfig();\n      },\n      labels: () => {\n        this.config.labelsList = data;\n        this.labelsConfig();\n      }\n    };\n\n    if (typeof updateFun[type] === 'function') {\n      updateFun[type]();\n    }\n  }\n\n  getColorList () {\n    let { colorFeature, colorOpacity } = this.config;\n    if (!colorFeature.feature) {\n      return [];\n    }\n    if (!this.colorList || this.colorList.length === 0) {\n      return [];\n    }\n    let colorList = [];\n    let obj = {};\n    obj.key = colorFeature;\n    obj.opacity = colorOpacity;\n    obj.list = [];\n    obj.name = colorFeature.feature;\n    obj.colored_type = colorFeature.type;\n    obj.dataRange = [];\n    /**\n     * 处理数据 取最大值和最小值\n     */\n    if (colorFeature.type === 'linear') {\n      let sortList = this.colorList\n        .filter((i) => typeof i.val !== 'undefined')\n        .sort((a, b) => a.val - b.val);\n      let minObj = sortList[0];\n      obj.dataRange[0] = sortList[0].val;\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.colorList) && this.config.colorList[0].originalVal && this.config.colorList[0].check) {\n        minObj.val = this.config.colorList[0].originalVal;\n        minObj.check = this.config.colorList[0].check;\n      }\n      minObj.rangeType = 'min';\n      minObj.originalVal = minObj.val;\n      minObj.val = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"toScientificNotation\"])(minObj.val);\n      minObj.color = this.getItemColor(0, minObj.originalVal);\n      let maxObj = JSON.parse(JSON.stringify(sortList[0]));\n      if (sortList.length > 1) {\n        maxObj.originalVal = sortList[sortList.length - 1].val;\n        obj.dataRange[1] = sortList[sortList.length - 1].val;\n      }\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.colorList) && this.config.colorList[1].originalVal && this.config.colorList[1].check) {\n        maxObj.originalVal = this.config.colorList[1].originalVal;\n        maxObj.check = this.config.colorList[1].check;\n      }\n      maxObj.color = this.getItemColor(1, maxObj.originalVal);\n      maxObj.rangeType = 'max';\n      maxObj.val = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"toScientificNotation\"])(maxObj.originalVal);\n\n      obj.list = [minObj, maxObj];\n    } else {\n      obj.list = this.colorList;\n    }\n    colorList.push(obj);\n    return colorList;\n  }\n\n  getDomain () {}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Geometry);\n\n\n//# sourceURL=webpack://chart/./src/geometry/Geometry.js?");

/***/ }),

/***/ "./src/geometry/GeometryWithAxis.js":
/*!******************************************!*\
  !*** ./src/geometry/GeometryWithAxis.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Geometry.js */ \"./src/geometry/Geometry.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/defaultConfig.js */ \"./src/utils/defaultConfig.js\");\n/* eslint-disable no-useless-constructor */\n\n\n\nlet { defaultText, defaultLineStyle } = _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nclass GeometryWithAxis extends _Geometry_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.xScale = null;\n    this.yScale = null;\n    this.xAxisG = null;\n    this.yAxisG = null;\n    this.dpr = this.config.dpr || 1;\n    this.fontSizeLineHeightPair = JSON.parse(\n      JSON.stringify(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"fontSizeLineHeightPair\"])\n    );\n    if (this.dpr && this.dpr !== 1) {\n      this.initFontSizeLineHeight();\n    }\n  }\n\n  initFontSizeLineHeight () {\n    for (const key in _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"fontSizeLineHeightPair\"]) {\n      if (Object.hasOwnProperty.call(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"fontSizeLineHeightPair\"], key)) {\n        const ele = _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"fontSizeLineHeightPair\"][key];\n        this.fontSizeLineHeightPair[key * this.config.dpr] =\n          ele * this.config.dpr;\n      }\n    }\n  }\n\n  /**\n   * 定义比例尺\n   */\n  xScaleConfig () {\n    this.xScale = d3\n      .scaleLinear()\n      .domain(\n        this.getMinMaxData(\n          this.config.xAxis.title.feature || this.config.xAxis.title.value\n        )\n      ); // 待修改\n    this.xScale.nice();\n  }\n\n  yScaleConfig () {\n    this.ticksProcess();\n    let {\n      yTitleWidth,\n      yLabelWidth,\n      xLabelWidth,\n      labelHeight,\n      titleHeight,\n      hasRotateHeight\n    } = this.getTransformData();\n\n    this.xScale\n      .range([\n        yTitleWidth + yLabelWidth, // + (6 + 4) * (this.config.dpr || 1),\n        this.config.width - xLabelWidth\n      ])\n      .nice();\n\n    this.yScale\n      .range([\n        this.config.height - labelHeight - titleHeight - (6 + 4) * this.dpr - hasRotateHeight,\n        // -  (this.xLabelWidth * 2) / 3,\n        labelHeight // + yLabelWidth / 2\n      ]) // 半个字体高度\n      .nice();\n\n    this.xAxisConfig(labelHeight, titleHeight, hasRotateHeight);\n\n    this.yAxisConfig(yLabelWidth, yTitleWidth);\n\n    this.xTitleConfig(labelHeight, hasRotateHeight);\n\n    this.yTitleConfig(labelHeight, titleHeight, yTitleWidth, yLabelWidth);\n    // 重新计算坐标轴标题的长度\n    this.optimizationTzitle(yTitleWidth, yLabelWidth);\n\n    this.gridLineConfig();\n    this.diagonalLineConfig();\n  }\n\n  ticksProcess () {\n    let {\n      scopeObj: { scale, select, tickRange, tick_counts: tickCounts }\n    } = this.config;\n    let originalRange = this.getMinMaxData(\n      this.config.yAxis.title.feature || this.config.yAxis.title.value\n    );\n    if (scale === 1 && select === 0) {\n      this.yScale = d3.scaleLinear().domain(originalRange); // 待修改\n      return;\n    }\n    if (select === 3) {\n      this.yScale = d3\n        .scaleLinear()\n        .domain(\n          typeof tickRange[0] !== 'undefined' ? tickRange : originalRange\n        );\n      this.yScale.ticks(tickCounts);\n      return;\n    }\n    if (select === 1) {\n      let min = originalRange[0];\n      let max = originalRange[1];\n      if (scale < 1) {\n        let newMin = max - (max - min) / scale;\n        this.yScale = d3.scaleLinear().domain([newMin, max]);\n        this.yScale.nice();\n      } else {\n        let newMax = scale * (max - min) + min;\n        this.yScale = d3.scaleLinear().domain([min, newMax]);\n        this.yScale.nice();\n      }\n    }\n  }\n\n  getMinMaxData (feature) {\n    if (this.data.length === 1) {\n      if (this.data[0][feature] > 0) {\n        return [0, this.data[0][feature]];\n      } else {\n        return [this.data[0][feature], 0];\n      }\n    }\n    let sortData = this.data.sort((a, b) => a[feature] - b[feature]);\n    let min = sortData[0][feature];\n    let max = sortData[sortData.length - 1][feature];\n\n    return [min, max];\n  }\n\n  /**\n   *\n   */\n  getTransformData () {\n    let { hasUnit } = this.config;\n    let {\n      title: { style = defaultText },\n      label: { style: labelStyle = defaultText }\n    } = this.config.yAxis;\n\n    let yTitleWidth =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])('测', style.fontSize * this.dpr + 'px') *\n      (this.dpr > 1 ? this.dpr * 0.52 : 1);\n    yTitleWidth = yTitleWidth * 4;\n    let yTicks = this.yScale.ticks();\n\n    let yMaxLabel = yTicks[yTicks.length - 1];\n    yTicks.forEach((i) => {\n      let start = i;\n      let end = yMaxLabel;\n      if (hasUnit) {\n        start = d3.format('~s')(i);\n        end = d3.format('~s')(yMaxLabel);\n      }\n      if (start.toString().length > end.toString().length) {\n        yMaxLabel = i;\n      }\n    });\n\n    let yLabelWidth =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(yMaxLabel, labelStyle.fontSize * this.dpr + 'px') * this.dpr;\n    yLabelWidth = this.dpr > 1 ? yLabelWidth : yLabelWidth + 6 + 4;\n    let xTicks = this.xScale.ticks();\n    let xMaxLabel = xTicks[xTicks.length - 1];\n\n    let xLabelWidth =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(xMaxLabel, labelStyle.fontSize * this.dpr + 'px') *\n      (this.config.dpr || 1);\n\n    if (hasUnit) {\n      yLabelWidth =\n        Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(\n          d3.format('~s')(yMaxLabel),\n          labelStyle.fontSize * this.dpr + 'px'\n        ) * (this.config.dpr || 1);\n      xLabelWidth =\n        Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(\n          d3.format('~s')(xMaxLabel),\n          labelStyle.fontSize * this.dpr + 'px'\n        ) * (this.config.dpr || 1);\n    }\n    let { label, title } = this.config.xAxis;\n\n    // let labelStyleFontSize = label.style.fontSize ? label.style.fontSize : 12;\n    let labelHeight =\n      this.fontSizeLineHeightPair[label.style.fontSize] * this.dpr;\n\n    let titleHeight =\n      this.fontSizeLineHeightPair[title.style.fontSize] * this.dpr;\n    if (labelStyle.rotate === -45) {\n    } else if (labelStyle.rotate === 45) {\n      labelHeight += yLabelWidth / 2;\n    }\n\n    if (label.style.rotate === -45 || label.style.rotate === 45) {\n      titleHeight += xLabelWidth / 2;\n    }\n    // titleHeight = titleHeight + titleHeight / 2;\n\n    // 坐标轴名方向不为横向时，预留一定的高度作为坐标轴名的高度\n    let hasRotateHeight = 0;\n    if (label.style.rotate !== 0) {\n      hasRotateHeight = 24;\n    }\n\n    this.yTitleWidth = yTitleWidth;\n    this.yLabelWidth = yLabelWidth;\n    this.xLabelWidth = xLabelWidth;\n    this.labelHeight = labelHeight;\n    this.titleHeight = titleHeight;\n    this.hasRotateHeight = hasRotateHeight;\n    return {\n      yTitleWidth,\n      yLabelWidth,\n      xLabelWidth,\n      labelHeight,\n      titleHeight,\n      hasRotateHeight\n    };\n  }\n\n  /**\n   * 定义坐标轴\n   */\n  xAxisConfig (labelHeight, titleHeight, hasRotateHeight) {\n    let {\n      hasUnit,\n      xAxis: {\n        label: { style: labelStyle = {} }\n      }\n    } = this.config;\n    let ticks = this.xScale.ticks();\n    let width =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(\n        ticks[ticks.length - 1],\n        labelStyle.fontSize * this.dpr + 'px'\n      ) * (this.config.dpr || 1);\n    let len = parseInt(Math.round(ticks.length / (this.config.width / width)));\n    len = len ? len + 1 : 1;\n    let xAxis = d3.axisBottom(this.xScale).tickFormat((d, idx) => {\n      if (idx % len === 0) {\n        let val = d;\n        if (hasUnit) {\n          val = d3.format('~s')(d);\n        }\n        return val;\n      } else {\n        return '';\n      }\n    });\n    this.svg.selectAll('.x-axis').remove();\n    this.xAxisG = this.svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr(\n        'transform',\n        `translate(0,${\n          this.config.height -\n          labelHeight -\n          titleHeight -\n          (6 + 4) * (this.config.dpr || 1) -\n          hasRotateHeight\n          //  -  (this.xLabelWidth * 2) / 3\n        })`\n      );\n\n    this.xAxisG.call(xAxis);\n\n    this.setAxisStyle(this.config.xAxis, 'x');\n  }\n\n  setAxisStyle (AxisConfig, type, flag) {\n    let {\n      tickLine: { style: tickLineStyle = defaultLineStyle },\n      line: { style: lineStyle = defaultLineStyle, show: showLine },\n      label: { style: labelStyle = defaultLineStyle }\n    } = AxisConfig;\n\n    let AxisG = this[type + 'AxisG'];\n    let { rotate } = labelStyle;\n    let transformValue = `rotate(${rotate})`;\n    if (rotate !== 0 && rotate !== 90) {\n      if (type === 'x') {\n        transformValue += `translate(${\n          rotate < 0 ? (-this.xLabelWidth * 2) / 3 : (this.xLabelWidth * 2) / 3\n        },${rotate > 0 ? -7 : 0})`;\n      } else {\n        transformValue += `translate(0,${\n          rotate < 0 ? -this.yLabelWidth / 4 : this.yLabelWidth / 4\n        })`;\n      }\n    } else if (rotate === 90) {\n      if (type === 'x') {\n        transformValue += `translate(${this.xLabelWidth + 7},-10)`;\n      } else {\n        transformValue += `translate(${this.yLabelWidth},${this.yLabelWidth})`;\n      }\n    }\n    AxisG.selectAll('.tick').selectAll('text')\n      .attr('transform', transformValue)\n      .attr('stroke', 'none')\n      .attr('fill', labelStyle.fontColor)\n      .attr('font-size', labelStyle.fontSize * this.dpr)\n      .attr('font-weight', labelStyle.fontWeight)\n      .attr('font-style', labelStyle.fontStyle);\n    if (flag) {\n      return;\n    }\n    AxisG.selectAll('line')\n      .attr('stroke', tickLineStyle.fontColor)\n      .attr('stroke-opacity', tickLineStyle.opacity || 1)\n      .attr('stroke-width', tickLineStyle.lineWidth);\n\n    if (!showLine) {\n      AxisG.selectAll('path').remove();\n      return;\n    }\n    AxisG.selectAll('path')\n      .attr('stroke', lineStyle.fontColor)\n      .attr('stroke-width', lineStyle.lineWidth)\n      .attr('stroke-opacity', lineStyle.opacity)\n      .attr('stroke-dasharray', lineStyle.lineDash);\n  }\n\n  yAxisConfig (yLabelWidth, yTitleWidth) {\n    let {\n      hasUnit,\n      yAxis: {\n        label: { style: labelStyle = {} }\n      },\n      scopeObj: { select, tick_counts: tickCounts }\n    } = this.config;\n    let yAxis = null;\n    if (select !== 3) {\n      let ticks = this.yScale.ticks();\n      let height =\n        Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(\n          ticks[ticks.length - 1],\n          labelStyle.fontSize * this.dpr + 'px'\n        ) * (this.config.dpr || 1);\n      if (labelStyle.rotate === 0) {\n        height = 48;\n      } else if (labelStyle.rotate === 45 || labelStyle.rotate === -45) {\n        height = height / 2;\n      }\n      // let len = parseInt(\n      //   Math.round(ticks.length / (this.config.height / height))\n      // );\n      // len = len ? len + 1 : 1;\n      let len = ticks.length / (this.config.height / height);\n      len = len > 1 ? parseInt(Math.round(len)) + 1 : 1;\n      yAxis = d3.axisLeft(this.yScale).tickFormat((d, idx) => {\n        if (idx % len === 0) {\n          let val = d;\n          if (hasUnit) {\n            val = d3.format('~s')(d);\n          }\n          return val;\n        } else {\n          return '';\n        }\n      });\n    } else {\n      let tickValues = this.calculateTickValues(\n        tickCounts,\n        this.yScale.domain()\n      );\n      yAxis = d3\n        .axisLeft(this.yScale)\n        .tickValues(tickValues)\n        .tickFormat((d, idx) => {\n          if (hasUnit) {\n            return d3.format('.2s')(d);\n          }\n          return d.toString().indexOf('.') > -1 ? d.toFixed(2) : d;\n        });\n    }\n\n    // let yAxis = d3.axisLeft(this.yScale).tickFormat((d) => {\n    //   if (hasUnit) {\n    //     return d3.format('~s')(d);\n    //   }\n    //   return d;\n    // });\n    this.svg.selectAll('.y-axis').remove();\n    this.yAxisG = this.svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .attr(\n        'transform',\n        `translate(${\n          yLabelWidth + yTitleWidth // + (6 + 4) * (this.config.dpr || 1)\n        },0)`\n      );\n\n    this.yAxisG.call(yAxis);\n\n    this.setAxisStyle(this.config.yAxis, 'y');\n  }\n\n  calculateTickValues (tickCounts, domain) {\n    if (!tickCounts) return null;\n\n    let tickArray = [];\n    let interval = (domain[1] - domain[0]) / tickCounts;\n    for (let i = 0; i <= tickCounts; i++) {\n      tickArray.push(domain[0] + interval * i);\n    }\n    return tickArray;\n  }\n\n  xTitleConfig (labelHeight, hasRotateHeight) {\n    let {\n      title: { value, style = defaultText, show: showTitle }\n    } = this.config.xAxis;\n    if (!showTitle) {\n      return;\n    }\n    let xTitleWidth =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(value, style.fontSize * this.dpr + 'px') * this.dpr;\n\n    this.xAxisG\n      .append('text')\n      .attr('class', 'x-title')\n      .attr(\n        'transform',\n        `translate(${this.config.width - xTitleWidth},${\n          labelHeight + (6 + 2) * (this.config.dpr || 1) + labelHeight / 2 + hasRotateHeight\n          // + (this.xLabelWidth * 2) / 3\n        })`\n      )\n      .attr('stroke', 'none')\n      .attr('fill', () => {\n        if (this.config.dashboardGrobalCss) {\n          return this.config.dashboardGrobalCss.color;\n        } else {\n          return style.fontColor;\n        }\n      })\n      .attr('font-size', style.fontSize * this.dpr)\n      .attr('font-weight', style.fontWeight)\n      .attr('font-style', style.fontStyle)\n      .attr('text-decoration', style.textDecoration)\n      .text(value);\n  }\n\n  yTitleConfig (labelHeight, titleHeight, yTitleWidth, yLabelWidth) {\n    let {\n      title: { style = defaultText, value, show: showTitle }\n    } = this.config.yAxis;\n    // let { style = defaultText } = title;\n    if (!showTitle) {\n      return;\n    }\n    let curHeight =\n      Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])('测', style.fontSize * this.dpr + 'px') *\n        value.length *\n        this.dpr *\n        1.35 +\n      25 * this.dpr;\n    this.yAxisG\n      .append('text')\n      .attr('class', 'y-title')\n      .attr(\n        'transform',\n        `translate(${\n          -yTitleWidth / 2 - yLabelWidth // - (6 + 8) * ((this.config.dpr * 2) / 3 || 1)\n        },${curHeight})` // - labelHeight + labelHeight / 2 - titleHeight\n      )\n      .attr('writing-mode', 'tb')\n      .attr('stroke', 'none')\n      .attr('fill', () => {\n        if (this.config.dashboardGrobalCss) {\n          return this.config.dashboardGrobalCss.color;\n        } else {\n          return style.fontColor;\n        }\n      })\n      .attr('font-size', style.fontSize * this.dpr)\n      .attr('font-weight', style.fontWeight)\n      .attr('font-style', style.fontStyle)\n      .attr('text-decoration', style.textDecoration)\n      .text(value);\n  }\n\n  optimizationTzitle (yTitleWidth, yLabelWidth) {\n    let yTitleNode = this.yAxisG.select('.y-title') && this.yAxisG.select('.y-title').node();\n    if (yTitleNode) {\n      let getY = Math.abs(yTitleNode.getBBox().y);\n      this.yAxisG.select('.y-title')\n        .attr(\n          'transform',\n          `translate(${\n            -yTitleWidth / 2 - yLabelWidth // - (6 + 8) * ((this.config.dpr * 2) / 3 || 1)\n          },${getY})` // - labelHeight + labelHeight / 2 - titleHeight\n        );\n    }\n  }\n\n  diagonalLineConfig (xScale, yScale) {\n    xScale = xScale || this.xScale;\n    yScale = yScale || this.yScale;\n    let xDomain = xScale.domain();\n    let yDomain = yScale.domain();\n    // let xTicks = xScale.ticks();\n    // let yTicks = yScale.ticks();\n    this.svg.selectAll('.diagonal-line').remove();\n    let that = this;\n    that.svg\n      .append('g')\n      .attr('class', 'diagonal-line')\n      .selectAll('line')\n      .data([1])\n      .enter()\n      .append('line')\n      .attr('x1', () => xScale(xDomain[0]))\n      .attr('y1', () => yScale(yDomain[0]))\n      .attr('x2', () => xScale(xDomain[1]))\n      .attr('y2', () => yScale(yDomain[1]))\n      .attr('fill', 'none')\n      .attr('stroke', '#c2c9d1')\n      .attr('stroke-opacity', 1)\n      .attr('stroke-width', 1);\n  }\n\n  /**\n   * 网格线\n   */\n  gridLineConfig (xScale, yScale) {\n    let {\n      line: { style = {}, show }\n    } = this.config.yAxis.grid || {};\n    if (!show) {\n      return;\n    }\n    let {\n      line: { style: xLineStyle = {} }\n    } = this.config.xAxis.grid || {};\n\n    let that = this;\n    xScale = xScale || this.xScale;\n    yScale = yScale || this.yScale;\n    let xTicks = xScale.ticks();\n    let yTicks = yScale.ticks();\n\n    let xDomain = xScale.domain();\n    let yDomain = yScale.domain();\n\n    drawGridLine('y-grid-line', xTicks, style)\n      .attr('x1', (d, idx) => {\n        if (idx === 0) {\n          return xScale(xDomain[0]);\n        }\n        if (idx === xTicks.length - 1) {\n          return xScale(xDomain[1]);\n        }\n        return xScale(d);\n      }) // + config.xOffset\n      .attr('x2', (d, idx) => {\n        if (idx === 0) {\n          return xScale(xDomain[0]);\n        }\n        if (idx === xTicks.length - 1) {\n          return xScale(xDomain[1]);\n        }\n        return xScale(d);\n      })\n      .attr('y1', yScale(yDomain[0]))\n      .attr('y2', yScale(yDomain[1]));\n\n    drawGridLine('x-grid-line', yTicks, xLineStyle)\n      .attr('y1', (d, idx) => {\n        if (idx === 0) {\n          return yScale(yDomain[0]);\n        }\n        if (idx === yTicks.length - 1) {\n          return yScale(yDomain[1]);\n        }\n        return yScale(d);\n      }) // + config.xOffset\n      .attr('y2', (d, idx) => {\n        if (idx === 0) {\n          return yScale(yDomain[0]);\n        }\n        if (idx === yTicks.length - 1) {\n          return yScale(yDomain[1]);\n        }\n        return yScale(d);\n      })\n      .attr('x1', xScale(xDomain[0]))\n      .attr('x2', xScale(xDomain[1]));\n\n    function drawGridLine (className, ticks, curStyle) {\n      that.svg.selectAll('.' + className).remove();\n      return that.svg\n        .append('g')\n        .attr('class', className)\n        .selectAll('line')\n        .data(ticks)\n        .enter()\n        .append('line')\n        .attr('class', 'grid-line-item')\n        .attr('stroke', curStyle.fontColor || '#c2c9d1')\n        .attr('stroke-width', curStyle.lineWidth || 1)\n        .attr('stroke-opacity', curStyle.opacity || 1)\n        .attr('stroke-dasharray', curStyle.lineDash || [0, 0])\n        .attr('fill', 'none');\n    }\n  }\n\n  draw () {}\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (GeometryWithAxis);\n\n\n//# sourceURL=webpack://chart/./src/geometry/GeometryWithAxis.js?");

/***/ }),

/***/ "./src/geometry/Scatter.js":
/*!*********************************!*\
  !*** ./src/geometry/Scatter.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GeometryWithAxis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeometryWithAxis.js */ \"./src/geometry/GeometryWithAxis.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/defaultConfig.js */ \"./src/utils/defaultConfig.js\");\n/* harmony import */ var _utils_check_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/check.js */ \"./src/utils/check.js\");\n/* eslint-disable no-useless-constructor */\n\n\n\n\nlet { defaultFormat, defaultText } = _utils_defaultConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\nclass Scatter extends _GeometryWithAxis_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor (data, config) {\n    super(data, config);\n    this.colorScale = null;\n    this.init();\n  }\n\n  init () {\n    this.createContainer();\n    this.xScaleConfig();\n    this.yScaleConfig();\n    this.addCircleColorScale();\n    this.zoomProcess();\n  }\n\n  zoomProcess () {\n    let {\n      // xAxis: { key: xKey = '' },\n      // yAxis: { key: yKey = '' },\n      scopeObj: { select },\n      hasUnit\n    } = this.config;\n    // let { yLabelWidth, yTitleWidth, labelHeight, opacity, titleHeight } = this;\n    if (select !== 1) {\n      return;\n    }\n    let that = this;\n    let height = this.config.height;\n    let width = this.config.width;\n    let zoom = d3\n      .zoom()\n      .scaleExtent([0.5, 64]) // This control how much you can unzoom (x0.5) and zoom (x16)\n      .on('zoom', updateChart);\n\n    this.svg\n      .append('rect')\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'none')\n      .style('pointer-events', 'all')\n      .call(zoom);\n    let { xAxisG, yAxisG, svg, xScale, yScale } = this;\n    function updateChart () {\n      // recover the new scale\n      var newX = d3.event.transform.rescaleX(xScale);\n      var newY = d3.event.transform.rescaleY(yScale);\n\n      // update axes with these new boundaries\n      if (hasUnit) {\n        xAxisG.call(d3.axisBottom(newX).tickFormat((d) => d3.format('~s')(d)));\n        yAxisG.call(d3.axisLeft(newY).tickFormat((d) => d3.format('.2s')(d)));\n      } else {\n        xAxisG.call(d3.axisBottom(newX));\n        yAxisG.call(d3.axisLeft(newY));\n      }\n      svg.selectAll('.scatter-circle-bundle').remove();\n      // update circle position\n\n      // svg\n      //   .selectAll('circle')\n      //   .attr('cx', function (d) {\n      //     return newX(d[xKey]);\n      //   })\n      //   .attr('cy', function (d) {\n      //     return newY(d[yKey]);\n      //   })\n      //   .attr('fill-opacity', (i) => {\n      //     if (newX(i[xKey]) - 16 <= yLabelWidth + yTitleWidth) {\n      //       return 0;\n      //     } else if (newY(i[yKey]) + 16 >= height - labelHeight - titleHeight) {\n      //       return 0;\n      //     }\n      //     return opacity;\n      //   });\n      that.setAxisStyle(that.config.xAxis, 'x', true);\n      that.setAxisStyle(that.config.yAxis, 'y', true);\n      that.draw(newX, newY);\n      that.labelsConfig(newX, newY);\n      that.diagonalLineConfig(newX, newY);\n      that.gridLineConfig(newX, newY);\n      that.tooltipConfig();\n      that.registerEvent('click');\n    }\n  }\n\n  getDomain () {\n    return this.yScale.domain();\n  }\n\n  addCircleColorScale () {\n    let { feature } = this.config.sizeFeature;\n    if (!feature) {\n      return;\n    }\n    this.data = this.data.filter(item => {\n      return item[feature];\n    });\n    let min = 0;\n    let max = 0;\n    let sortData = this.data.sort((a, b) => a[feature] - b[feature]);\n    min = sortData[0][feature];\n    max = sortData[sortData.length - 1][feature];\n    let sizeRange = [5, 9];\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])()) {\n      let curDpr = this.config.dpr;\n      sizeRange = [5 * curDpr, 9 * curDpr];\n    }\n    this.colorScale = d3.scaleLinear().domain([min, max]).range(sizeRange);\n  }\n\n  isExistCircle (\n    x,\n    y,\n    radius,\n    xKey,\n    yKey,\n    yTitleWidth,\n    yLabelWidth,\n    textWidth,\n    lineHeight,\n    xScale,\n    yScale\n  ) {\n    xScale = xScale || this.xScale;\n    yScale = yScale || this.yScale;\n    let match = this.data.find((i) => {\n      let minX =\n        xScale(i[xKey]) - radius - yTitleWidth - yLabelWidth - 6 - 2;\n      let minY = yScale(i[yKey]) - radius;\n      let maxY = yScale(i[yKey]) + radius;\n\n      if (\n        x <= minX &&\n        x + textWidth >= minX + radius * 2 &&\n        y >= minY &&\n        y <= maxY &&\n        y + lineHeight >= maxY\n      ) {\n        return i;\n      }\n      return null;\n    });\n    return !!match;\n  }\n\n  isExistInCoord (list, x, y, lineHeight) {\n    if (list.length === 0) {\n      return false;\n    }\n    let match = list.find((i) => {\n      let { x: minX, y: minY, textWidth } = i;\n      // console.log(minX, minY, textWidth);\n      if (\n        Math.abs(minX - x) < textWidth &&\n        Math.abs(minY - y) < lineHeight / 2\n      ) {\n        return i;\n      }\n      let tempHeight = lineHeight;\n      let dpr = this.config.dpr || 1;\n      if (dpr !== 1) {\n        tempHeight = (dpr * lineHeight * 2) / 3;\n      }\n      if (\n        y + tempHeight >=\n        this.config.height - this.labelHeight - this.titleHeight\n      ) {\n        return i;\n      }\n      return null;\n    });\n    return !!match;\n  }\n\n  labelsConfig (xScale, yScale) {\n    xScale = xScale || this.xScale;\n    yScale = yScale || this.yScale;\n    this.geometry.selectAll('.scatter-labels').remove();\n    let yTitleWidth = this.yTitleWidth;\n    let yLabelWidth = this.yLabelWidth;\n\n    let labelHeight = this.labelHeight;\n    let titleHeight = this.titleHeight;\n    let list = this.config.labelsList;\n    if (list.length === 0) {\n      return;\n    }\n    let {\n      xAxis: { key: xKey = '' },\n      yAxis: { key: yKey = '' },\n      sizeFeature\n    } = this.config;\n    let coordList = [];\n    this.geometry\n      .selectAll('text')\n      .data((d) => {\n        let notShowCount = 0;\n        list = list.filter((i) => {\n          if (xScale(i[xKey]) - 16 <= yLabelWidth + yTitleWidth) {\n            return false;\n          } else if (\n            yScale(i[yKey]) + 16 >=\n            this.config.height - labelHeight - titleHeight\n          ) {\n            return false;\n          }\n          return true;\n        });\n\n        let tempList = list\n          .map((l, idx) => {\n            let { format = defaultFormat, text = defaultText } = l;\n            let radius = 8;\n            if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])()) {\n              radius = radius * this.config.dpr;\n            }\n            if (this.colorScale) {\n              radius = this.colorScale(d[sizeFeature.feature]);\n            }\n            let formatVal = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"dataProcess\"])(d[l.key], format);\n            let labelX = xScale(d[xKey]) - yTitleWidth - yLabelWidth + 8; // +radius\n\n            let labelY =\n              yScale(d[yKey]) + (idx - notShowCount) * text.lineHeight;\n\n            let textWidth = Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"getTextWidth\"])(formatVal, text.fontSize + 'px');\n            if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])()) {\n              textWidth = textWidth * this.config.dpr;\n            }\n            if (\n              this.isExistInCoord(coordList, labelX, labelY, text.lineHeight)\n            ) {\n              notShowCount++;\n              return null;\n            }\n            coordList.push({\n              x: labelX,\n              y: labelY,\n              textWidth\n            });\n            if (\n              !this.isExistCircle(\n                labelX,\n                labelY,\n                radius,\n                xKey,\n                yKey,\n                yTitleWidth,\n                yLabelWidth,\n                textWidth,\n                text.lineHeight,\n                xScale,\n                yScale\n              )\n            ) {\n              return {\n                ...d,\n                key: l.key,\n                title: l.title,\n                format: format,\n                text: text,\n                formatVal,\n                labelX,\n                labelY,\n                textWidth\n              };\n            } else {\n              notShowCount++;\n            }\n            return null;\n          })\n          .filter((f) => {\n            if (!f) {\n              return false;\n            }\n            if (\n              f.labelX + f.textWidth >\n              this.config.width - yTitleWidth - yLabelWidth - 6 - 2\n            ) {\n              return false;\n            }\n            return true;\n          });\n\n        let totalHeight = tempList.reduce((a, b) => {\n          return a + b.text.lineHeight;\n        }, yScale(d[yKey]));\n        let len =\n          (this.config.height - labelHeight - titleHeight - yScale(d[yKey])) /\n          defaultText.lineHeight;\n\n        if (totalHeight >= this.config.height - labelHeight - titleHeight) {\n          tempList = tempList.slice(0, len);\n        }\n        return tempList;\n      })\n      .enter()\n      .append('text')\n      .attr('class', 'scatter-labels')\n      .attr('transform', (d) => `translate(${d.labelX},${d.labelY})`)\n      .attr('fill', (d) => {\n        if (this.config.dashboardGrobalCss) {\n          return this.config.dashboardGrobalCss.color;\n        } else {\n          return d.text.fontColor;\n        }\n      })\n      .attr('font-size', (d) => d.text.fontSize)\n      .text((d) => d.formatVal);\n  }\n\n  draw (xScale, yScale) {\n    xScale = xScale || this.xScale;\n    yScale = yScale || this.yScale;\n    let {\n      xAxis: { key: xKey = '' },\n      yAxis: { key: yKey = '' },\n      colorFeature,\n      sizeFeature\n    } = this.config;\n    this.className = 'scatter-circle-item';\n    let { yTitleWidth, yLabelWidth } = this;\n    this.geometry = this.svg\n      .append('g')\n      .attr('class', 'scatter-circle-bundle')\n      .attr('transform', `translate(${yTitleWidth + yLabelWidth},${0})`)\n      .selectAll('g')\n      .data((d) => {\n        let {\n          xAxis: { key: xKey = '' },\n          yAxis: { key: yKey = '' }\n        } = this.config;\n        return this.data.filter((i) => {\n          if (\n            xScale(i[xKey]) - 16 <=\n            this.yLabelWidth + this.yTitleWidth\n          ) {\n            // return false;\n            // 数据丢失，暂且设为true\n            return true;\n          } else if (\n            yScale(i[yKey]) + 16 >=\n            this.config.height - this.labelHeight - this.titleHeight\n          ) {\n            // return false;\n            return true;\n          }\n          return true;\n        });\n      })\n      .enter()\n      .append('g')\n      .attr('class', 'scatter-circle-item');\n    let colorList = [];\n    this.geometry\n      .append('circle')\n      .attr('cx', (d) => {\n        return xScale(d[xKey]) - yTitleWidth - yLabelWidth;\n      })\n      .attr('cy', (d) => {\n        return yScale(d[yKey]);\n      })\n      .attr('r', (d) => {\n        if (this.colorScale) {\n          return this.colorScale(d[sizeFeature.feature]);\n        }\n        if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"isMobile\"])()) {\n          return 8 * this.config.dpr;\n        }\n        return 8;\n      })\n      .attr('fill', (d, idx) => {\n        let feature = colorFeature ? colorFeature.feature : undefined;\n        let match = null;\n        let curIdx = idx;\n        if (feature) {\n          colorList = colorList.map((i) => {\n            if (i.val === d[feature]) {\n              i.count++;\n              match = i;\n            }\n            return i;\n          });\n          curIdx = colorList.length;\n        }\n\n        if (match) {\n          return match.color;\n        }\n\n        let color = this.getItemColor(curIdx, feature && d[feature]);\n\n        colorList.push({\n          val: d[feature],\n          color,\n          index: 1\n        });\n\n        return color;\n      });\n    if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.targetAction) && Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.targetAction[0].feature)) {\n      if (Object(_utils_check_js__WEBPACK_IMPORTED_MODULE_3__[\"notEmpty\"])(this.config.targetAction[0].actions) && this.config.targetAction[0].actions[0].value) {\n        let feature = this.config.targetAction[0].feature[0].feature_name;\n        let featureVal = this.config.targetAction[0].actions[0].value;\n        let opacity = this.config.opacity || 1;\n        this.geometry.attr('opacity', opacity * 0.2);\n        let allData = this.geometry.data();\n        let curIndex;\n        allData.forEach((item, index) => {\n          if (item[feature] === featureVal) {\n            curIndex = index;\n          }\n        });\n        let curDom = this.geometry._groups[0][curIndex];\n        d3.select(curDom).attr('opacity', 1);\n      }\n    }\n    this.colorList = colorList;\n    this.setClipPath();\n  }\n\n  setClipPath () {\n    let bundleBox = this.svg.select('.scatter-circle-bundle').node().getBBox();\n    let XBoxHeight = this.svg.select('.x-axis').node().getBBox().height;\n    let svgHeight = this.svg.select('.scatter-circle-bundle').node().farthestViewportElement.getClientRects()[0].height;\n    let clipX = 0;\n    let clipY = 0;\n    if (bundleBox.x < 0) {\n      clipX = Math.abs(bundleBox.x);\n      // this.svg.select('.scatter-circle-bundle').attr('clip-path', `inset(0px 0px ${getX}px ${getX}px)`);\n    }\n    if ((XBoxHeight + bundleBox.height + bundleBox.y + 7) > svgHeight) {\n      clipY = (XBoxHeight + bundleBox.height + bundleBox.y + 7) - svgHeight;\n    }\n    this.svg.select('.scatter-circle-bundle').attr('clip-path', `inset(0px 0px ${clipY}px ${clipX}px)`);\n  }\n\n  // /**\n  //  * 画图形\n  //  */\n  // render () {\n  //   this.draw();\n  //   this.tooltipConfig();\n  //   this.registerEvent('click');\n  // }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Scatter);\n\n\n//# sourceURL=webpack://chart/./src/geometry/Scatter.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: GeometryDrawingProcess, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GeometryDrawingProcess\", function() { return GeometryDrawingProcess; });\n/* harmony import */ var _geometry_Bubble_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry/Bubble.js */ \"./src/geometry/Bubble.js\");\n/* harmony import */ var _geometry_Scatter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry/Scatter.js */ \"./src/geometry/Scatter.js\");\n/* harmony import */ var _chart_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chart/map.js */ \"./src/chart/map.js\");\n/* harmony import */ var _chart_bar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chart/bar.js */ \"./src/chart/bar.js\");\n/* harmony import */ var _chart_line_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chart/line.js */ \"./src/chart/line.js\");\n/* harmony import */ var _chart_barLine_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chart/barLine.js */ \"./src/chart/barLine.js\");\n/* harmony import */ var _chart_barRotated_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chart/barRotated.js */ \"./src/chart/barRotated.js\");\n/* harmony import */ var _chart_table_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chart/table.js */ \"./src/chart/table.js\");\n\n\n\n\n\n\n\n\n\nlet drawClasses = {\n  bubble: _geometry_Bubble_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  scatter: _geometry_Scatter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  map: _chart_map_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  bar: _chart_bar_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  line: _chart_line_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  barLine: _chart_barLine_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  barRotated: _chart_barRotated_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  table: _chart_table_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n};\n\nlet GeometryDrawingProcess = function ({ config, data, chartType }) {\n  let instance = new drawClasses[chartType](data, config);\n  return {\n    draw: () => {\n      instance.render();\n    },\n    update: (type, data) => {\n      instance.update(type, data);\n    },\n    getColorList: () => {\n      return instance.getColorList();\n    },\n    getDomain: () => {\n      return instance.getDomain();\n    }\n  };\n};\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GeometryDrawingProcess);\n\n\n//# sourceURL=webpack://chart/./src/index.js?");

/***/ }),

/***/ "./src/utils/check.js":
/*!****************************!*\
  !*** ./src/utils/check.js ***!
  \****************************/
/*! exports provided: isArray, isEmpty, isNumber, isObject, isObjectType, isString, isUndefined, notEmpty, hasKey, getTextWidth, isDefined, isMobile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObjectType\", function() { return isObjectType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notEmpty\", function() { return notEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasKey\", function() { return hasKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTextWidth\", function() { return getTextWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMobile\", function() { return isMobile; });\nconst isString = v => typeof v === 'string';\nconst isNumber = v => typeof v === 'number';\nconst isUndefined = v => typeof v === 'undefined';\nconst isObjectType = v => typeof v === 'object';\nconst isEmpty = o => (\n  isUndefined(o) || o === null ||\n    (isString(o) && o.length === 0) ||\n    (isObjectType(o) && Object.keys(o).length === 0)\n);\nconst notEmpty = o => !isEmpty(o);\n\nconst isArray = arr => arr && arr.constructor === Array;\n\nconst isObject = obj => obj && !obj.nodeType && isObjectType(obj) && !isArray(obj);\n\nconst hasKey = (dict, key) => {\n  let found = false;\n  Object.keys(dict).includes(key) && (found = true);\n  return found;\n};\n\n// 字符宽度\nlet getTextWidth = function (text, font) {\n  // re-use canvas object for better performance\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  context.font = font;\n  var metrics = context.measureText(text);\n  return metrics.width;\n};\nconst isDefined = v => typeof v !== 'undefined';\n\nlet isMobile = function () {\n  if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/utils/check.js?");

/***/ }),

/***/ "./src/utils/color.js":
/*!****************************!*\
  !*** ./src/utils/color.js ***!
  \****************************/
/*! exports provided: getItemColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getItemColor\", function() { return getItemColor; });\n/* harmony import */ var _defaultConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultConfig.js */ \"./src/utils/defaultConfig.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils.js */ \"./src/utils/utils.js\");\n\n\nlet { colorSet } = _defaultConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nlet getItemColor = function (\n  index,\n  colorList,\n  colorFeatureType = 'ordinal',\n  minVal,\n  maxVal,\n  curVal,\n  feature,\n  flag,\n  opacity\n) {\n  let colorProcess = (function () {\n    return {\n      getOrdinalItemColor: function () {\n        if (!feature) {\n          return colorSet.category[0];\n        }\n        // if (colorList && colorList.length > 0) {\n        //   let match = colorList.find((i) => i.val === curVal);\n        //   if (match) {\n        //     return match.color;\n        //   }\n        // }\n        // if (colorList.length > 0) {\n        //   colorList = colorSet.category.filter(\n        //     (m) =>\n        //       !colorList.find((i) => {\n        //         if (i.color && i.color.indexOf('#') > -1) {\n        //           return i.color === m;\n        //         }\n        //         return hexToRgba(m, opacity * 100) === i.color;\n        //       })\n        //   );\n        // }\n\n        // // 数据量大的时候，获取数据时由于量的限制，所以可能出现数据不同的情况，这时候需要对数据进行重新计算\n        // if (colorList.length === 0) {\n        //   colorList = colorSet.category;\n        // }\n\n        // 每次更改数据都重新计算颜色；这样可以保证更改前后数据是一样的，比如过滤器\n        colorList = colorSet.category;\n\n        if (colorList.length <= index) {\n          return Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"hexToRgba\"])(colorList[index % colorList.length], opacity * 100);\n        }\n        return Object(_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"hexToRgba\"])(colorList[index], opacity * 100);\n      },\n      getLinearItemColor: function () {\n        let tempColorList = colorSet.numeric;\n        let curColorList = colorList.map((i) => i.color || i);\n        let opacity1 = opacity;\n        let opacity2 = opacity;\n        if (curColorList && curColorList.length > 0) {\n          opacity1 = colorList[0].opacity\n            ? (colorList[0].opacity / 100).toFixed(2)\n            : opacity;\n          opacity2 = colorList[1].opacity\n            ? (colorList[1].opacity / 100).toFixed(2)\n            : opacity;\n          if (!(curColorList[0] === curColorList[1] && flag)) {\n            tempColorList = curColorList;\n          }\n        }\n        let startColor = d3.rgb(tempColorList[0]);\n        let endColor = d3.rgb(tempColorList[1]);\n        startColor.opacity = opacity1;\n        endColor.opacity = opacity2;\n        let compute = d3.interpolate(startColor, endColor);\n        if (maxVal === minVal) {\n          return tempColorList[0];\n        }\n        if (!flag) {\n          return tempColorList[0];\n        }\n        if (curVal < minVal) {\n          return compute(0);\n        }\n        if (curVal - minVal > maxVal - minVal) {\n          return compute(1);\n        }\n        return compute((curVal - minVal) / (maxVal - minVal));\n      }\n    };\n  })();\n  let funName =\n    'get' +\n    colorFeatureType.slice(0, 1).toUpperCase() +\n    colorFeatureType.slice(1) +\n    'ItemColor';\n\n  if (typeof colorProcess[funName] === 'function') {\n    return colorProcess[funName]();\n  }\n  return ''; // 随便\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/utils/color.js?");

/***/ }),

/***/ "./src/utils/defaultConfig.js":
/*!************************************!*\
  !*** ./src/utils/defaultConfig.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  fontColor: '#6b6b6b',\n  colorSet: {\n    category: [\n      '#4284F5',\n      '#03B98C',\n      '#FACC14',\n      '#F5282D',\n      '#8543E0',\n      '#3FAECC',\n      '#3110D0',\n      '#E88F00',\n      '#DE2393',\n      '#91BA38',\n      '#99B4BF',\n      '#216A58',\n      '#AB9438',\n      '#F4999B',\n      '#C9BFE1',\n      '#055166',\n      '#1F135A',\n      '#43140A',\n      '#96005A',\n      '#8D8D8D'\n    ], // 分类特征默认颜色\n    numeric: ['#7AC9F5', '#2A5783']\n  },\n  defaultText: {\n    fontColor: '#6b6b6b',\n    fontSize: 12,\n    textAlign: 'left',\n    lineHeight: 24,\n    display: 'auto',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    textDecoration: 'none'\n  },\n  defaultFormat: {\n    selectFormat: -1,\n    decimal: 2,\n    negative: '-1',\n    unit: '',\n    prefix: '',\n    suffix: '',\n    zone: '',\n    useThousandMark: true\n  },\n  defaultLineStyle: {\n    lineWidth: 1,\n    fontColor: '#c2c9d1',\n    opacity: 1,\n    lineDash: [0, 0],\n    fontSize: 12,\n    fontWeight: 'normal',\n    fontStyle: 'normal'\n  }\n});\n\n\n//# sourceURL=webpack://chart/./src/utils/defaultConfig.js?");

/***/ }),

/***/ "./src/utils/utils.js":
/*!****************************!*\
  !*** ./src/utils/utils.js ***!
  \****************************/
/*! exports provided: getTextLegend, dataProcess, styleProcess, toScientificNotation, getTextWidth, fontSizeLineHeightPair, setTextPos, setLinePos, getTxtWidth, getTopAxisHeight, setBottomLabelHeight, setUnitHeight, setPartHeight, getMaxValueWidth, hexToRgba, hasColorFeature */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTextLegend\", function() { return getTextLegend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataProcess\", function() { return dataProcess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styleProcess\", function() { return styleProcess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toScientificNotation\", function() { return toScientificNotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTextWidth\", function() { return getTextWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fontSizeLineHeightPair\", function() { return fontSizeLineHeightPair; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTextPos\", function() { return setTextPos; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLinePos\", function() { return setLinePos; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTxtWidth\", function() { return getTxtWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTopAxisHeight\", function() { return getTopAxisHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setBottomLabelHeight\", function() { return setBottomLabelHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setUnitHeight\", function() { return setUnitHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setPartHeight\", function() { return setPartHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMaxValueWidth\", function() { return getMaxValueWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToRgba\", function() { return hexToRgba; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasColorFeature\", function() { return hasColorFeature; });\n/* harmony import */ var _chart_common_dataUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chart/common/dataUtils */ \"./src/chart/common/dataUtils.js\");\n\nconst getTextLegend = (text, fontSize) => {\n  let textLen = String(text).length;\n  return (textLen * fontSize) / 2 + fontSize;\n};\n\nlet dataProcess = function (val, format) {\n  if (!val) {\n    return val;\n  }\n  if (typeof format.selectFormat === 'undefined') {\n    return val;\n  }\n  if (!Number(val)) {\n    return val;\n  }\n  let ret = val;\n\n  let negative = -1;\n  if (ret < 0) {\n    if (format.negative === '(1234)') {\n      negative = 0;\n    } else if (format.negative === '1234-') {\n      negative = 1;\n    } else {\n      negative = 2;\n    }\n  }\n  ret = unitProcess(ret, format.unit, format.useThousandMark, format);\n\n  ret = displayFormatProcess(ret, format.selectFormat, format.zone, negative);\n  ret = prefSuffixProcess(ret, format.prefix, format.suffix, format.isPercent);\n  return ret;\n};\n\nlet unitProcess = function (val, unit, micrometerFlag, format) {\n  let unitPare = {\n    'K 千': 1000,\n    'M 百万': 1000000,\n    'G 十亿': 1000000000,\n    'T 千亿': 100000000000\n  };\n  let ret = val;\n  if (unit && format.selectFormat !== 'percent') {\n    ret = val / unitPare[unit];\n  }\n  if (format.decimal || format.decimal === 0) {\n    if (format.isPercent || format.selectFormat === 'percent') {\n      ret = ret * 100;\n    }\n    ret = ret.toFixed(format.decimal);\n    if (format.isPercent) {\n      ret = ret + '%';\n    }\n  }\n\n  // let ret = val / unitPare[unit];\n  let curRes = micrometerProcess(ret, micrometerFlag);\n  if (format.selectFormat === 'percent') {\n    return curRes;\n  } else {\n    return unit ? curRes + unit : curRes;\n  }\n  // return unit ? curRes + unit : curRes;\n};\n\nlet displayFormatProcess = function (val, format, zone, negative) {\n  // if (!format) {\n  //   return val;\n  // }\n  if (negative === 0) {\n    val = '(' + val.substring(1) + ')';\n  } else if (negative === 1) {\n    val = val.substring(1) + '-';\n  }\n  if (format === 'percent' || format === -1) {\n    return val;\n  }\n  let formatPare = {\n    CN: '￥',\n    JP: '¥',\n    HK: 'HK$',\n    US: '＄',\n    EUR: '€',\n    GBP: '£'\n  };\n  if (negative === -1) {\n    return formatPare[zone] ? formatPare[zone] + val : val;\n  }\n\n  return formatPare[zone] ? formatPare[zone] + val : val;\n};\n\nlet prefSuffixProcess = function (val, prefix, suffix, isPercent) {\n  if (prefix) {\n    val = prefix + val;\n  }\n  if (suffix && !isPercent) {\n    val = val + suffix;\n  } else if (isPercent) {\n    if (suffix && suffix.indexOf('%') === 0) {\n      val = val + suffix.substr(1);\n    } else if (suffix && suffix.indexOf('%') !== 0) {\n      val = val.substr(0, val.length - 1) + suffix;\n    }\n  }\n  return val;\n};\n\nlet micrometerProcess = function (val, flag) {\n  if (!flag || val < 1000) {\n    return val;\n  }\n  let ret = '';\n  let list = [];\n  let curStr = val.toString().split('.');\n  for (let i = curStr[0].length - 1; i >= 0; i--) {\n    list.push(curStr[0][i]);\n    if ((curStr[0].length - 1 - i) % 3 === 2) {\n      ret = ',' + list.reverse().join('') + ret;\n      list = [];\n    }\n  }\n  if (ret) {\n    ret = list.length === 0 ? ret.substr(1) : ret;\n  }\n  ret = list.reverse().join('') + ret;\n  return curStr.length > 1 ? ret + '.' + curStr[1] : ret;\n};\n\nlet styleProcess = function (styleObj) {\n  return ` text-align: ${styleObj.align || 'left'};\n  color:  ${styleObj.fontColor};\n  font-size:  ${styleObj.fontSize + 'px'};\n  font-style:  ${styleObj.fontStyle};\n  line-height:  ${styleObj.lineHeight + 'px'};\n  letter-spacing:  ${styleObj.letterSpacing + 'px'}`;\n};\n\nlet toScientificNotation = function (val) {\n  // if (!val) {\n  //   return;\n  // }\n  val = val - 0;\n  // let ret = val.toString();\n  // if (ret.length <= 4) {\n  //   return ret;\n  // } else if (ret.length <= 6) {\n  //   return (ret / 1000).toFixed(2) + 'K';\n  // } else if (ret.length <= 9) {\n  //   return (ret / 1000000).toFixed(2) + 'M';\n  // } else {\n  //   return (ret / 1000000000).toFixed(2) + 'G';\n  // }\n  let ret = Math.floor(val).toString();\n  if (ret.length <= 4) {\n    return val.toFixed(2);\n  } else if (ret.length <= 6) {\n    return (val / 1000).toFixed(2) + 'K';\n  } else if (ret.length <= 9) {\n    return (val / 1000000).toFixed(2) + 'M';\n  } else {\n    return (val / 1000000000).toFixed(2) + 'G';\n  }\n};\n\nlet getTextWidth = function (str, font) {\n  let canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  context.font = font || '12px sans-serif';\n  let { width } = context.measureText(str);\n  return width;\n};\n\nconst fontSizeLineHeightPair = {\n  8: 12,\n  9: 12,\n  10: 12,\n  12: 18,\n  14: 20,\n  16: 24,\n  18: 26,\n  20: 30,\n  24: 34,\n  28: 36,\n  30: 40,\n  32: 44,\n  36: 54,\n  40: 56,\n  48: 60,\n  56: 64,\n  64: 72,\n  72: 88\n};\n\nconst hasValue = (arr, key, value) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i][key] === value) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst uniqueKeyArr = (key, list) => {\n  let arr = [];\n  for (let i = 0, len = list.length; i < len; i++) {\n    if (!hasValue(arr, key, list[i][key])) {\n      arr.push(list[i]);\n    }\n  }\n  return arr;\n};\n\nconst setUnitHeight = (height, text, data, axisKey, isUnit, index) => {\n  let num = 0;\n  let start = 0;\n  let arr = uniqueKeyArr(axisKey, data);\n  for (let i = 0, len = arr.length; i < len; i++) {\n    for (let key in arr[i]) {\n      if (arr[i][key] === text) {\n        if (num === 0) {\n          start = i;\n        }\n        num++;\n      }\n    }\n  }\n  console.log(start);\n  return num * height * index - (getTxtWidth(text, 14) / 2);\n  // return isUnit ? num * height * index : (height * start) + (num * height - getTxtWidth(text, 14)) / 2;\n};\n\nconst setPartHeight = (d, data, perKey, key) => {\n  let arr = data.filter(item => item[key[0]] === d);\n  let len = arr.length;\n  let perArr = [];\n  for (let i = 0; i < len; i++) {\n    perArr.push(arr[i][perKey[0]]);\n  }\n  perArr = [...new Set(perArr)];\n  return perArr.length;\n};\n\nconst setTextPos = (width, text, data, axisKey) => {\n  let num = 0;\n  let start = 0;\n  let arr = uniqueKeyArr(axisKey, data);\n  for (let i = 0; i < arr.length; i++) {\n    for (let key in arr[i]) {\n      if (arr[i][key] === text) {\n        if (num === 0) {\n          start = i;\n        }\n        num++;\n      }\n    }\n  }\n  return (width * start) + ((width * num - getTxtWidth(text, 14)) / 2);\n};\n\nconst setLinePos = (width, text, data, axisKey) => {\n  let num = 0;\n  let start = 0;\n  let arr = uniqueKeyArr(axisKey, data);\n  for (let i = 0; i < arr.length; i++) {\n    for (let key in arr[i]) {\n      if (arr[i][key] === text) {\n        if (num === 0) {\n          start = i;\n        }\n        num++;\n      }\n    }\n  }\n  return (width * start) + (width * num);\n};\n\nconst getTxtWidth = (text, font) => {\n  let textDom = document.createElement('text');\n  textDom.innerText = text;\n  textDom.style.fontSize = font + 'px';\n  textDom.style.position = 'fixed';\n  document.body.appendChild(textDom);\n  let width = textDom.clientWidth;\n  document.body.removeChild(textDom);\n  return width;\n};\n\nconst getTxtHeight = (text, font) => {\n  let textDom = document.createElement('span');\n  textDom.innerText = text;\n  textDom.style.fontSize = font + 'px';\n  textDom.style.position = 'fixed';\n  document.body.appendChild(textDom);\n  let height = textDom.clientHeight;\n  document.body.removeChild(textDom);\n  return height;\n};\n\nconst getTopAxisHeight = (xAxisPart) => {\n  if (!xAxisPart || xAxisPart.length === 0) return 16;\n  else return (xAxisPart.length) * 32 + 16;\n};\n\nconst setAsideWidth = (yAxis, maxValue, yAxisPart, isRotatd) => {\n  let titleLen = 0;\n  let width = 0;\n  if (yAxis) {\n    let txtLen = 0;\n    if (isRotatd && yAxis.label.rotate === 0) {\n      txtLen = getTxtHeight(String(Math.floor(maxValue)), yAxis.label.style.fontSize);\n    } else {\n      txtLen = getTxtWidth(String(Math.floor(maxValue)), 14) + 12;\n    }\n    titleLen = getTxtWidth('哈', 20);\n    width = txtLen + titleLen;\n  }\n  return {\n    axisWidth: yAxisPart ? yAxisPart.length * 50 + width : width,\n    titleWidth: width\n  };\n};\n\nconst setBottomLabelHeight = (xAxis, xData, isRotated) => {\n  let label = xAxis.label;\n  let longest = xData.reduce((a, b) => String(a).length > String(b).length ? a : b);\n  let height = getTxtHeight(String(longest), label.style.fontSize);\n  let width = getTxtWidth(String(longest), label.style.fontSize);\n  let rotate = label.rotate;\n  if (rotate !== 0 && !isRotated) {\n    return width;\n  }\n  if (isRotated && rotate !== 90) {\n    return width;\n  }\n  return height;\n};\n\nconst combinedData = (list) => {\n  if (!list.length) return [];\n  let dataList = list[0].data;\n  let data = [];\n  for (let i = 0, len = dataList.length; i < len; i++) {\n    data.push(...dataList[i]);\n  }\n  return data;\n};\n\nconst getMaxValueWidth = (yAxis, yAxisPart, position, isRotated) => {\n  let maxTitleWidthArr = [];\n  let axisWidthArr = [];\n  for (let i = 0, len = yAxis.length; i < len; i++) {\n    let axisList = yAxis[i].filter(item => item.position === position);\n    let data = combinedData(axisList);\n    if (axisList.length) {\n      let maxValue = Object(_chart_common_dataUtils__WEBPACK_IMPORTED_MODULE_0__[\"getMaxValue\"])(data, axisList[0].key);\n      let { axisWidth, titleWidth } = setAsideWidth(axisList[0], Math.floor(maxValue), yAxisPart, isRotated);\n      maxTitleWidthArr.push(titleWidth);\n      axisWidthArr.push(axisWidth);\n    }\n  };\n  let obj = {};\n  obj[`${position}TitleWidth`] = maxTitleWidthArr.length ? Math.max(...maxTitleWidthArr) : 0;\n  obj[`${position}AxisWidth`] = axisWidthArr.length ? Math.max(...axisWidthArr) : 0;\n  return obj;\n};\n\nconst hexToRgba = (hex, opacity) => {\n  if (typeof hex === 'object') hex = hex.background;\n  if (hex === '#fff') hex = '#ffffff';\n  if (hex === '#000') hex = '#000000';\n  if (!opacity && opacity !== 0) opacity = 100;\n  if (!hex) return 'rbga(255,255,255,0)';\n  let r = parseInt('0x' + hex.slice(1, 3));\n  let g = parseInt('0x' + hex.slice(3, 5));\n  let b = parseInt('0x' + hex.slice(5, 7));\n  if (opacity < 1 && opacity > 0) {\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  }\n  let a = opacity / 100;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nconst hasColorFeature = (list, name, keyId, xAxisPart) => {\n  if (!list) {\n    return {\n      type: 'none',\n      color: '#4284f5'\n    };\n  }\n  for (let i = 0, len = list.length; i < len; i++) {\n    if (name.includes(list[i].keyName) && keyId === list[i].keyId) {\n      return list[i];\n    }\n  }\n  return {\n    type: 'none',\n    color: '#4284f5'\n  };\n};\n\n\n\n\n//# sourceURL=webpack://chart/./src/utils/utils.js?");

/***/ })

/******/ });
});